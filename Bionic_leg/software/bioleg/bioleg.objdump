
bioleg.elf:     file format elf32-littlenios2
bioleg.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00100244

Program Header:
    LOAD off    0x00001000 vaddr 0x00100000 paddr 0x00100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00100020 paddr 0x00100020 align 2**12
         filesz 0x000106a4 memsz 0x000106a4 flags r-x
    LOAD off    0x000116c4 vaddr 0x001106c4 paddr 0x001116e4 align 2**12
         filesz 0x00001020 memsz 0x00001020 flags rw-
    LOAD off    0x00012704 vaddr 0x00112704 paddr 0x00112704 align 2**12
         filesz 0x00000000 memsz 0x00000178 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00100000  00100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00100020  00100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010190  00100244  00100244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000002f0  001103d4  001103d4  000113d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001020  001106c4  001116e4  000116c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000178  00112704  00112704  00012704  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  0011287c  0011287c  000126e4  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000126e4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ed0  00000000  00000000  00012708  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00022a7f  00000000  00000000  000135d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008e21  00000000  00000000  00036057  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b284  00000000  00000000  0003ee78  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000021b0  00000000  00000000  0004a0fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003765  00000000  00000000  0004c2ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001887d  00000000  00000000  0004fa11  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  00068290  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001970  00000000  00000000  000682f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006cd82  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000a  00000000  00000000  0006cd85  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006cd8f  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006cd90  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006cd91  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006cd95  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006cd99  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000006  00000000  00000000  0006cd9d  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000006  00000000  00000000  0006cda3  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000006  00000000  00000000  0006cda9  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000b  00000000  00000000  0006cdaf  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000011  00000000  00000000  0006cdba  2**0
                  CONTENTS, READONLY
 29 .jdi          00004443  00000000  00000000  0006cdcb  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     00057aa0  00000000  00000000  0007120e  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00100000 l    d  .entry	00000000 .entry
00100020 l    d  .exceptions	00000000 .exceptions
00100244 l    d  .text	00000000 .text
001103d4 l    d  .rodata	00000000 .rodata
001106c4 l    d  .rwdata	00000000 .rwdata
00112704 l    d  .bss	00000000 .bss
0011287c l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../bioleg_bsp//obj/HAL/src/crt0.o
0010028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0011051a l     O .rodata	00000010 zeroes.4404
00103c54 l     F .text	000000bc __sbprintf
0011052a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00103e64 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00105994 l     F .text	00000008 __fp_unlock
001059a8 l     F .text	0000019c __sinit.part.1
00105b44 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00110b9c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00110fe0 l     O .rwdata	00000020 lc_ctype_charset
00110fc0 l     O .rwdata	00000020 lc_message_charset
00111000 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0011055c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0010845c l     F .text	000000fc __sprint_r.part.0
00110690 l     O .rodata	00000010 blanks.4348
00110680 l     O .rodata	00000010 zeroes.4349
001099e8 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0010e008 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0010e114 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0010e140 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0010e22c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0010e30c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0010e3f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0010e5cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
001116dc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0010e848 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0010e97c l     F .text	00000034 alt_dev_reg
001115e8 l     O .rwdata	000000c4 uart_0
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_init.c
0010ebf0 l     F .text	0000009c altera_avalon_uart_irq
0010ec8c l     F .text	000000e4 altera_avalon_uart_rxirq
0010ed70 l     F .text	00000148 altera_avalon_uart_txirq
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
0010ef0c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
0010f124 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0010f4ac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0010f920 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0010fa60 l     F .text	0000003c alt_get_errno
0010fa9c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0011273c g     O .bss	00000004 alt_instruction_exception_handler
00107f6c g     F .text	00000074 _mprec_log10
00108058 g     F .text	0000008c __any_on
0010a440 g     F .text	00000054 _isatty_r
00110568 g     O .rodata	00000028 __mprec_tinytens
0010e508 g     F .text	0000007c alt_main
0011277c g     O .bss	00000100 alt_irq
0010a494 g     F .text	00000060 _lseek_r
001116e4 g       *ABS*	00000000 __flash_rwdata_start
0010cb98 g     F .text	00000088 .hidden __eqdf2
0011287c g       *ABS*	00000000 __alt_heap_start
00101a04 g     F .text	0000003c printf
0010ad6c g     F .text	0000009c _wcrtomb_r
00108284 g     F .text	0000005c __sseek
00105ce4 g     F .text	00000010 __sinit
0010ac14 g     F .text	00000140 __swbuf_r
001062f0 g     F .text	0000007c _setlocale_r
00105b4c g     F .text	00000068 __sfmoreglue
0010e5a8 g     F .text	00000024 __malloc_unlock
00100fa0 g     F .text	00000440 .hidden __divsf3
00110b74 g     O .rwdata	00000014 sf
001008d0 g     F .text	00000124 GetAngle
0010a4f4 g     F .text	0000015c memmove
00105ccc g     F .text	00000018 _cleanup
001070e8 g     F .text	000000a8 _Balloc
001017dc g     F .text	00000070 .hidden __fixsfsi
00112704 g     O .bss	00000004 n
0010cc20 g     F .text	000000dc .hidden __gtdf2
0010fcb4 g     F .text	00000024 altera_nios2_gen2_irq_init
00100000 g     F .entry	0000001c __reset
00100020 g       *ABS*	00000000 __flash_exceptions_start
00109f28 g     F .text	0000005c _fstat_r
00112728 g     O .bss	00000004 errno
00108200 g     F .text	00000008 __seofread
00112730 g     O .bss	00000004 alt_argv
001196ac g       *ABS*	00000000 _gp
0010e818 g     F .text	00000030 usleep
00111468 g     O .rwdata	00000180 alt_fd_list
0010fcd8 g     F .text	00000090 alt_find_dev
00106e78 g     F .text	00000148 memcpy
0010599c g     F .text	0000000c _cleanup_r
0010de84 g     F .text	000000dc .hidden __floatsidf
0010f9e4 g     F .text	0000007c alt_io_redirect
0010ccfc g     F .text	000000f4 .hidden __ltdf2
001103d4 g       *ABS*	00000000 __DTOR_END__
0010ffa4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
001080e4 g     F .text	00000074 __fpclassifyd
00107ec8 g     F .text	000000a4 __ratio
001099cc g     F .text	0000001c __vfiprintf_internal
001019d4 g     F .text	00000030 _printf_r
00100ee4 g     F .text	00000064 .hidden __udivsi3
0010e268 g     F .text	000000a4 isatty
001105b8 g     O .rodata	000000c8 __mprec_tens
0010636c g     F .text	0000000c __locale_charset
0010ff14 g     F .text	00000090 alt_icache_flush
00112724 g     O .bss	00000004 __malloc_top_pad
001116b4 g     O .rwdata	00000004 __mb_cur_max
0010639c g     F .text	0000000c _localeconv_r
00109f84 g     F .text	000004bc __sfvwrite_r
001074f4 g     F .text	0000003c __i2b
00108158 g     F .text	00000054 _sbrk_r
0010a650 g     F .text	00000060 _read_r
001116d4 g     O .rwdata	00000004 alt_max_fd
00109c1c g     F .text	000000f0 _fclose_r
00105964 g     F .text	00000030 fflush
00112720 g     O .bss	00000004 __malloc_max_sbrked_mem
0010ba04 g     F .text	000008ac .hidden __adddf3
00107c70 g     F .text	0000010c __b2d
0010b4cc g     F .text	00000538 .hidden __umoddi3
0010e434 g     F .text	000000d4 lseek
001009f4 g     F .text	000001e0 SetMotorPosition
001116ac g     O .rwdata	00000004 _global_impure_ptr
0010a6b0 g     F .text	00000564 _realloc_r
0011287c g       *ABS*	00000000 __bss_end
0010f830 g     F .text	000000f0 alt_iic_isr_register
0010af54 g     F .text	00000578 .hidden __udivdi3
00109e84 g     F .text	00000024 _fputwc_r
00110590 g     O .rodata	00000028 __mprec_bigtens
001072d8 g     F .text	00000104 __s2b
0010df60 g     F .text	000000a8 .hidden __floatunsidf
001079b0 g     F .text	00000060 __mcmp
0010eb44 g     F .text	000000ac altera_avalon_uart_init
00105d04 g     F .text	00000018 __fp_lock_all
0010f7e4 g     F .text	0000004c alt_ic_irq_enabled
00112738 g     O .bss	00000004 alt_irq_active
001000fc g     F .exceptions	000000d4 alt_irq_handler
00111440 g     O .rwdata	00000028 alt_dev_null
0010f464 g     F .text	00000048 alt_dcache_flush_all
001073dc g     F .text	00000068 __hi0bits
0010de04 g     F .text	00000080 .hidden __fixdfsi
001116e4 g       *ABS*	00000000 __ram_rwdata_end
001116cc g     O .rwdata	00000008 alt_dev_list
0010e884 g     F .text	000000f8 write
001106c4 g       *ABS*	00000000 __ram_rodata_end
0010e17c g     F .text	000000b0 fstat
0010ccfc g     F .text	000000f4 .hidden __ledf2
00107728 g     F .text	00000140 __pow5mult
00108570 g     F .text	0000145c ___vfiprintf_internal_r
00112718 g     O .bss	00000004 __nlocale_changed
00100f48 g     F .text	00000058 .hidden __umodsi3
0011287c g       *ABS*	00000000 end
0010f160 g     F .text	000001ac altera_avalon_uart_write
001001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
001103d4 g       *ABS*	00000000 __CTOR_LIST__
00200000 g       *ABS*	00000000 __alt_stack_pointer
0010ea94 g     F .text	00000060 altera_avalon_uart_write_fd
00101970 g     F .text	00000064 .hidden __clzsi2
0010eaf4 g     F .text	00000050 altera_avalon_uart_close_fd
00105cf4 g     F .text	00000004 __sfp_lock_acquire
00106d94 g     F .text	000000e4 memchr
00101a40 g     F .text	000021f8 ___vfprintf_internal_r
00105e58 g     F .text	00000310 _free_r
00106378 g     F .text	00000010 __locale_mb_cur_max
001003e4 g     F .text	000000d8 f2
00110220 g     F .text	00000180 __call_exitprocs
00112714 g     O .bss	00000004 __mlocale_changed
001116b8 g     O .rwdata	00000004 __malloc_sbrk_base
00100244 g     F .text	0000004c _start
00107868 g     F .text	00000148 __lshift
0010e608 g     F .text	000000fc read
0010e9e8 g     F .text	0000004c alt_sys_init
0010184c g     F .text	00000124 .hidden __floatsisf
00110108 g     F .text	00000118 __register_exitproc
00107530 g     F .text	000001f8 __multiply
001106c4 g       *ABS*	00000000 __ram_rwdata_start
001103d4 g       *ABS*	00000000 __ram_rodata_start
00112754 g     O .bss	00000028 __malloc_current_mallinfo
00107d7c g     F .text	0000014c __d2b
00100290 g     F .text	0000007c find
0010fe70 g     F .text	000000a4 alt_get_fd
0010f30c g     F .text	00000158 alt_busy_sleep
00109b04 g     F .text	00000054 _close_r
0011008c g     F .text	0000007c memcmp
0011287c g       *ABS*	00000000 __alt_stack_base
00112708 g     O .bss	00000004 indexX
00103d10 g     F .text	00000154 __swsetup_r
0010c2b0 g     F .text	000008e8 .hidden __divdf3
00105bb4 g     F .text	00000118 __sfp
00107fe0 g     F .text	00000078 __copybits
00111038 g     O .rwdata	00000408 __malloc_av_
00105d00 g     F .text	00000004 __sinit_lock_release
00110b88 g     O .rwdata	00000014 sb
0010cdf0 g     F .text	00000718 .hidden __muldf3
001081ac g     F .text	00000054 __sread
0010fd68 g     F .text	00000108 alt_find_file
0010f4e8 g     F .text	000000a4 alt_dev_llist_insert
0010e584 g     F .text	00000024 __malloc_lock
0010e768 g     F .text	000000b0 sbrk
001106c4 g     O .rwdata	00000190 hip
00105908 g     F .text	0000005c _fflush_r
00109b58 g     F .text	000000c4 _calloc_r
00112704 g       *ABS*	00000000 __bss_start
00106fc0 g     F .text	00000128 memset
00100bd4 g     F .text	00000218 main
00112734 g     O .bss	00000004 alt_envp
0011271c g     O .bss	00000004 __malloc_max_total_mem
0010ad54 g     F .text	00000018 __swbuf
00110854 g     O .rwdata	00000190 knee
001082e0 g     F .text	00000008 __sclose
00200000 g       *ABS*	00000000 __alt_heap_limit
00109d0c g     F .text	00000014 fclose
00104064 g     F .text	00001688 _dtoa_r
00106588 g     F .text	0000080c _malloc_r
0010aec8 g     F .text	00000030 __ascii_wctomb
001116d8 g     O .rwdata	00000004 alt_errno
00106168 g     F .text	000000c4 _fwalk
00100dec g     F .text	00000084 .hidden __divsi3
00105d34 g     F .text	00000124 _malloc_trim_r
001103d4 g       *ABS*	00000000 __CTOR_END__
001013e0 g     F .text	000003fc .hidden __mulsf3
001082e8 g     F .text	000000dc strcmp
001103d4 g       *ABS*	00000000 __flash_rodata_start
001103d4 g       *ABS*	00000000 __DTOR_LIST__
0010cb98 g     F .text	00000088 .hidden __nedf2
0010e9b0 g     F .text	00000038 alt_irq_init
0010e704 g     F .text	00000064 alt_release_fd
001103d8 g     O .rodata	00000100 .hidden __clz_tab
00112710 g     O .bss	00000004 _PathLocale
00110040 g     F .text	00000014 atexit
00109aa4 g     F .text	00000060 _write_r
001063a8 g     F .text	00000018 setlocale
001116b0 g     O .rwdata	00000004 _impure_ptr
0011272c g     O .bss	00000004 alt_argc
001056ec g     F .text	0000021c __sflush_r
0010f5ec g     F .text	00000060 _do_dtors
00106394 g     F .text	00000008 __locale_cjk_lang
00100020 g       .exceptions	00000000 alt_irq_entry
00107c0c g     F .text	00000064 __ulp
00105d1c g     F .text	00000018 __fp_unlock_all
001116c4 g     O .rwdata	00000008 alt_fs_list
00100020 g       *ABS*	00000000 __ram_exceptions_start
001063c0 g     F .text	0000000c localeconv
00100000 g       *ABS*	00000000 __alt_mem_onchip_memory2
001109e4 g     O .rwdata	00000190 ankle
0010f680 g     F .text	00000050 alt_ic_isr_register
0010030c g     F .text	000000d8 f1
001116e4 g       *ABS*	00000000 _edata
0010ea34 g     F .text	00000060 altera_avalon_uart_read_fd
0011287c g       *ABS*	00000000 _end
00109d20 g     F .text	00000164 __fputwc
00112740 g     O .bss	00000014 hist
00100244 g       *ABS*	00000000 __ram_exceptions_end
0010f758 g     F .text	0000008c alt_ic_irq_disable
00108208 g     F .text	0000007c __swrite
001116bc g     O .rwdata	00000004 __malloc_trim_threshold
00106388 g     F .text	0000000c __locale_msgcharset
00110054 g     F .text	00000038 exit
0010622c g     F .text	000000c4 _fwalk_reent
00107a10 g     F .text	000001fc __mdiff
00100e70 g     F .text	00000074 .hidden __modsi3
00200000 g       *ABS*	00000000 __alt_data_end
00100020 g     F .exceptions	00000000 alt_exception
00105cf8 g     F .text	00000004 __sfp_lock_release
0010eeb8 g     F .text	00000054 altera_avalon_uart_close
001103a0 g     F .text	00000034 _exit
001063cc g     F .text	000001bc __smakebuf_r
001083c4 g     F .text	00000098 strlen
0010fb60 g     F .text	00000154 open
0010cc20 g     F .text	000000dc .hidden __gedf2
001116c0 g     O .rwdata	00000004 __wctomb
00108558 g     F .text	00000018 __sprint_r
0010f64c g     F .text	00000034 alt_icache_flush_all
001004bc g     F .text	00000414 getPos
001116e0 g     O .rwdata	00000004 alt_priority_mask
0010f6d0 g     F .text	00000088 alt_ic_irq_enable
00103c38 g     F .text	0000001c __vfprintf_internal
0010ef48 g     F .text	000001dc altera_avalon_uart_read
0010aef8 g     F .text	0000005c _wctomb_r
0010d508 g     F .text	000008fc .hidden __subdf3
00107444 g     F .text	000000b0 __lo0bits
0011270c g     O .bss	00000004 indexY
0010f58c g     F .text	00000060 _do_ctors
0010ae08 g     F .text	000000c0 wcrtomb
0010e044 g     F .text	000000d0 close
0010e374 g     F .text	00000084 alt_load
00109ea8 g     F .text	00000080 fputwc
00105cfc g     F .text	00000004 __sinit_lock_acquire
001071b8 g     F .text	00000120 __multadd
00107190 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00100000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  100000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
  100004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  100008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  10000c:	00bffd16 	blt	zero,r2,100004 <__alt_data_end+0xfff00004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  100010:	00400434 	movhi	at,16
    ori r1, r1, %lo(_start)
  100014:	08409114 	ori	at,at,580
    jmp r1
  100018:	0800683a 	jmp	at
  10001c:	00000000 	call	0 <__alt_mem_onchip_memory2-0x100000>

Disassembly of section .exceptions:

00100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  10002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  10003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  10004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  10005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  10006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  10007c:	10000326 	beq	r2,zero,10008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  100080:	20000226 	beq	r4,zero,10008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  100084:	01000fc0 	call	1000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  100088:	00000706 	br	1000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  10008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  100098:	01001d00 	call	1001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  10009c:	1000021e 	bne	r2,zero,1000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  1000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  1000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  1000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  1000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  1000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  1000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  1000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  1000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  1000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  1000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  1000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  1000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  1000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  1000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  1000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  1000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  1000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  1000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  1000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  1000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  1000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  1000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  1000f8:	ef80083a 	eret

001000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  1000fc:	defff904 	addi	sp,sp,-28
  100100:	dfc00615 	stw	ra,24(sp)
  100104:	df000515 	stw	fp,20(sp)
  100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  10010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  100110:	0005313a 	rdctl	r2,ipending
  100114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  100118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  10011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  100124:	00800044 	movi	r2,1
  100128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  10012c:	e0fffb17 	ldw	r3,-20(fp)
  100130:	e0bffc17 	ldw	r2,-16(fp)
  100134:	1884703a 	and	r2,r3,r2
  100138:	10001426 	beq	r2,zero,10018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  10013c:	00800474 	movhi	r2,17
  100140:	1089df04 	addi	r2,r2,10108
  100144:	e0fffd17 	ldw	r3,-12(fp)
  100148:	180690fa 	slli	r3,r3,3
  10014c:	10c5883a 	add	r2,r2,r3
  100150:	10c00017 	ldw	r3,0(r2)
  100154:	00800474 	movhi	r2,17
  100158:	1089df04 	addi	r2,r2,10108
  10015c:	e13ffd17 	ldw	r4,-12(fp)
  100160:	200890fa 	slli	r4,r4,3
  100164:	1105883a 	add	r2,r2,r4
  100168:	10800104 	addi	r2,r2,4
  10016c:	10800017 	ldw	r2,0(r2)
  100170:	1009883a 	mov	r4,r2
  100174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  100178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  10017c:	0005313a 	rdctl	r2,ipending
  100180:	e0bfff15 	stw	r2,-4(fp)

  return active;
  100184:	e0bfff17 	ldw	r2,-4(fp)
  100188:	00000706 	br	1001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  10018c:	e0bffc17 	ldw	r2,-16(fp)
  100190:	1085883a 	add	r2,r2,r2
  100194:	e0bffc15 	stw	r2,-16(fp)
      i++;
  100198:	e0bffd17 	ldw	r2,-12(fp)
  10019c:	10800044 	addi	r2,r2,1
  1001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  1001a4:	003fe106 	br	10012c <__alt_data_end+0xfff0012c>

    active = alt_irq_pending ();
  1001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  1001ac:	e0bffb17 	ldw	r2,-20(fp)
  1001b0:	103fdb1e 	bne	r2,zero,100120 <__alt_data_end+0xfff00120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  1001b4:	0001883a 	nop
}
  1001b8:	0001883a 	nop
  1001bc:	e037883a 	mov	sp,fp
  1001c0:	dfc00117 	ldw	ra,4(sp)
  1001c4:	df000017 	ldw	fp,0(sp)
  1001c8:	dec00204 	addi	sp,sp,8
  1001cc:	f800283a 	ret

001001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  1001d0:	defffb04 	addi	sp,sp,-20
  1001d4:	dfc00415 	stw	ra,16(sp)
  1001d8:	df000315 	stw	fp,12(sp)
  1001dc:	df000304 	addi	fp,sp,12
  1001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  1001e4:	000531fa 	rdctl	r2,exception
  1001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  1001ec:	e0bffd17 	ldw	r2,-12(fp)
  1001f0:	10801f0c 	andi	r2,r2,124
  1001f4:	1004d0ba 	srli	r2,r2,2
  1001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  1001fc:	0005333a 	rdctl	r2,badaddr
  100200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  100204:	d0a42417 	ldw	r2,-28528(gp)
  100208:	10000726 	beq	r2,zero,100228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  10020c:	d0a42417 	ldw	r2,-28528(gp)
  100210:	e0fffd17 	ldw	r3,-12(fp)
  100214:	e1bffe17 	ldw	r6,-8(fp)
  100218:	e17fff17 	ldw	r5,-4(fp)
  10021c:	1809883a 	mov	r4,r3
  100220:	103ee83a 	callr	r2
  100224:	00000206 	br	100230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  100228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  10022c:	0005883a 	mov	r2,zero
}
  100230:	e037883a 	mov	sp,fp
  100234:	dfc00117 	ldw	ra,4(sp)
  100238:	df000017 	ldw	fp,0(sp)
  10023c:	dec00204 	addi	sp,sp,8
  100240:	f800283a 	ret

Disassembly of section .text:

00100244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  100244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  100248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  10024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  100250:	00bffd16 	blt	zero,r2,100248 <__alt_data_end+0xfff00248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  100254:	06c00834 	movhi	sp,32
    ori sp, sp, %lo(__alt_stack_pointer)
  100258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  10025c:	06800474 	movhi	gp,17
    ori gp, gp, %lo(_gp)
  100260:	d6a5ab14 	ori	gp,gp,38572
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  100264:	00800474 	movhi	r2,17
    ori r2, r2, %lo(__bss_start)
  100268:	1089c114 	ori	r2,r2,9988

    movhi r3, %hi(__bss_end)
  10026c:	00c00474 	movhi	r3,17
    ori r3, r3, %lo(__bss_end)
  100270:	18ca1f14 	ori	r3,r3,10364

    beq r2, r3, 1f
  100274:	10c00326 	beq	r2,r3,100284 <_start+0x40>

0:
    stw zero, (r2)
  100278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  10027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  100280:	10fffd36 	bltu	r2,r3,100278 <__alt_data_end+0xfff00278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  100284:	010e3740 	call	10e374 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  100288:	010e5080 	call	10e508 <alt_main>

0010028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  10028c:	003fff06 	br	10028c <__alt_data_end+0xfff0028c>

00100290 <find>:

int n;
int indexX,indexY;

int find(int x, int min , int max)
{
  100290:	defffb04 	addi	sp,sp,-20
  100294:	df000415 	stw	fp,16(sp)
  100298:	df000404 	addi	fp,sp,16
  10029c:	e13ffd15 	stw	r4,-12(fp)
  1002a0:	e17ffe15 	stw	r5,-8(fp)
  1002a4:	e1bfff15 	stw	r6,-4(fp)
	for(int i=min;i<max;i++)
  1002a8:	e0bffe17 	ldw	r2,-8(fp)
  1002ac:	e0bffc15 	stw	r2,-16(fp)
  1002b0:	00000e06 	br	1002ec <find+0x5c>
	{
		if(hip[i]==x)
  1002b4:	00800474 	movhi	r2,17
  1002b8:	1081b104 	addi	r2,r2,1732
  1002bc:	e0fffc17 	ldw	r3,-16(fp)
  1002c0:	18c7883a 	add	r3,r3,r3
  1002c4:	18c7883a 	add	r3,r3,r3
  1002c8:	10c5883a 	add	r2,r2,r3
  1002cc:	10c00017 	ldw	r3,0(r2)
  1002d0:	e0bffd17 	ldw	r2,-12(fp)
  1002d4:	1880021e 	bne	r3,r2,1002e0 <find+0x50>
			return i;
  1002d8:	e0bffc17 	ldw	r2,-16(fp)
  1002dc:	00000706 	br	1002fc <find+0x6c>
int n;
int indexX,indexY;

int find(int x, int min , int max)
{
	for(int i=min;i<max;i++)
  1002e0:	e0bffc17 	ldw	r2,-16(fp)
  1002e4:	10800044 	addi	r2,r2,1
  1002e8:	e0bffc15 	stw	r2,-16(fp)
  1002ec:	e0fffc17 	ldw	r3,-16(fp)
  1002f0:	e0bfff17 	ldw	r2,-4(fp)
  1002f4:	18bfef16 	blt	r3,r2,1002b4 <__alt_data_end+0xfff002b4>
	{
		if(hip[i]==x)
			return i;
	}
	return 0;
  1002f8:	0005883a 	mov	r2,zero
}
  1002fc:	e037883a 	mov	sp,fp
  100300:	df000017 	ldw	fp,0(sp)
  100304:	dec00104 	addi	sp,sp,4
  100308:	f800283a 	ret

0010030c <f1>:

int f1(int m)
{
  10030c:	defffd04 	addi	sp,sp,-12
  100310:	dfc00215 	stw	ra,8(sp)
  100314:	df000115 	stw	fp,4(sp)
  100318:	df000104 	addi	fp,sp,4
  10031c:	e13fff15 	stw	r4,-4(fp)
	if(find(m,0,59)!=0)
  100320:	01800ec4 	movi	r6,59
  100324:	000b883a 	mov	r5,zero
  100328:	e13fff17 	ldw	r4,-4(fp)
  10032c:	01002900 	call	100290 <find>
  100330:	10000526 	beq	r2,zero,100348 <f1+0x3c>
	{
		return find(m,0,59);
  100334:	01800ec4 	movi	r6,59
  100338:	000b883a 	mov	r5,zero
  10033c:	e13fff17 	ldw	r4,-4(fp)
  100340:	01002900 	call	100290 <find>
  100344:	00002206 	br	1003d0 <f1+0xc4>
	}
	else if(find(m-1,0,59)!=0)
  100348:	e0bfff17 	ldw	r2,-4(fp)
  10034c:	10bfffc4 	addi	r2,r2,-1
  100350:	01800ec4 	movi	r6,59
  100354:	000b883a 	mov	r5,zero
  100358:	1009883a 	mov	r4,r2
  10035c:	01002900 	call	100290 <find>
  100360:	10000726 	beq	r2,zero,100380 <f1+0x74>
	{
		return find(m-1,0,59);
  100364:	e0bfff17 	ldw	r2,-4(fp)
  100368:	10bfffc4 	addi	r2,r2,-1
  10036c:	01800ec4 	movi	r6,59
  100370:	000b883a 	mov	r5,zero
  100374:	1009883a 	mov	r4,r2
  100378:	01002900 	call	100290 <find>
  10037c:	00001406 	br	1003d0 <f1+0xc4>
	}
	else if(find(m-2,0,59)!=0)
  100380:	e0bfff17 	ldw	r2,-4(fp)
  100384:	10bfff84 	addi	r2,r2,-2
  100388:	01800ec4 	movi	r6,59
  10038c:	000b883a 	mov	r5,zero
  100390:	1009883a 	mov	r4,r2
  100394:	01002900 	call	100290 <find>
  100398:	10000726 	beq	r2,zero,1003b8 <f1+0xac>
	{
		return find(m-2,0,59);
  10039c:	e0bfff17 	ldw	r2,-4(fp)
  1003a0:	10bfff84 	addi	r2,r2,-2
  1003a4:	01800ec4 	movi	r6,59
  1003a8:	000b883a 	mov	r5,zero
  1003ac:	1009883a 	mov	r4,r2
  1003b0:	01002900 	call	100290 <find>
  1003b4:	00000606 	br	1003d0 <f1+0xc4>
	}
	else
	{
		return find(m-3,0,59);
  1003b8:	e0bfff17 	ldw	r2,-4(fp)
  1003bc:	10bfff44 	addi	r2,r2,-3
  1003c0:	01800ec4 	movi	r6,59
  1003c4:	000b883a 	mov	r5,zero
  1003c8:	1009883a 	mov	r4,r2
  1003cc:	01002900 	call	100290 <find>
	}
}
  1003d0:	e037883a 	mov	sp,fp
  1003d4:	dfc00117 	ldw	ra,4(sp)
  1003d8:	df000017 	ldw	fp,0(sp)
  1003dc:	dec00204 	addi	sp,sp,8
  1003e0:	f800283a 	ret

001003e4 <f2>:

int f2(int x)
{
  1003e4:	defffd04 	addi	sp,sp,-12
  1003e8:	dfc00215 	stw	ra,8(sp)
  1003ec:	df000115 	stw	fp,4(sp)
  1003f0:	df000104 	addi	fp,sp,4
  1003f4:	e13fff15 	stw	r4,-4(fp)
	if(find(x,58,100)!=0)
  1003f8:	01801904 	movi	r6,100
  1003fc:	01400e84 	movi	r5,58
  100400:	e13fff17 	ldw	r4,-4(fp)
  100404:	01002900 	call	100290 <find>
  100408:	10000526 	beq	r2,zero,100420 <f2+0x3c>
	{
		return find(x,58,100);
  10040c:	01801904 	movi	r6,100
  100410:	01400e84 	movi	r5,58
  100414:	e13fff17 	ldw	r4,-4(fp)
  100418:	01002900 	call	100290 <find>
  10041c:	00002206 	br	1004a8 <f2+0xc4>
	}
	else if(find(x+1,58,100)!=0)
  100420:	e0bfff17 	ldw	r2,-4(fp)
  100424:	10800044 	addi	r2,r2,1
  100428:	01801904 	movi	r6,100
  10042c:	01400e84 	movi	r5,58
  100430:	1009883a 	mov	r4,r2
  100434:	01002900 	call	100290 <find>
  100438:	10000726 	beq	r2,zero,100458 <f2+0x74>
	{
		return find(x+1,58,100);
  10043c:	e0bfff17 	ldw	r2,-4(fp)
  100440:	10800044 	addi	r2,r2,1
  100444:	01801904 	movi	r6,100
  100448:	01400e84 	movi	r5,58
  10044c:	1009883a 	mov	r4,r2
  100450:	01002900 	call	100290 <find>
  100454:	00001406 	br	1004a8 <f2+0xc4>
	}
	else if(find(x+2,58,100)!=0)
  100458:	e0bfff17 	ldw	r2,-4(fp)
  10045c:	10800084 	addi	r2,r2,2
  100460:	01801904 	movi	r6,100
  100464:	01400e84 	movi	r5,58
  100468:	1009883a 	mov	r4,r2
  10046c:	01002900 	call	100290 <find>
  100470:	10000726 	beq	r2,zero,100490 <f2+0xac>
	{
		return find(x+2,58,100);
  100474:	e0bfff17 	ldw	r2,-4(fp)
  100478:	10800084 	addi	r2,r2,2
  10047c:	01801904 	movi	r6,100
  100480:	01400e84 	movi	r5,58
  100484:	1009883a 	mov	r4,r2
  100488:	01002900 	call	100290 <find>
  10048c:	00000606 	br	1004a8 <f2+0xc4>
	}
	else
	{
		return find(x+3,58,100);
  100490:	e0bfff17 	ldw	r2,-4(fp)
  100494:	108000c4 	addi	r2,r2,3
  100498:	01801904 	movi	r6,100
  10049c:	01400e84 	movi	r5,58
  1004a0:	1009883a 	mov	r4,r2
  1004a4:	01002900 	call	100290 <find>
	}
}
  1004a8:	e037883a 	mov	sp,fp
  1004ac:	dfc00117 	ldw	ra,4(sp)
  1004b0:	df000017 	ldw	fp,0(sp)
  1004b4:	dec00204 	addi	sp,sp,8
  1004b8:	f800283a 	ret

001004bc <getPos>:

int getPos(int m)
{
  1004bc:	defffc04 	addi	sp,sp,-16
  1004c0:	dfc00315 	stw	ra,12(sp)
  1004c4:	df000215 	stw	fp,8(sp)
  1004c8:	df000204 	addi	fp,sp,8
  1004cc:	e13fff15 	stw	r4,-4(fp)
	int ind=0;
  1004d0:	e03ffe15 	stw	zero,-8(fp)
	if(m>=49)
  1004d4:	e0bfff17 	ldw	r2,-4(fp)
  1004d8:	10800c50 	cmplti	r2,r2,49
  1004dc:	1000021e 	bne	r2,zero,1004e8 <getPos+0x2c>
	{
		m=49;
  1004e0:	00800c44 	movi	r2,49
  1004e4:	e0bfff15 	stw	r2,-4(fp)
	}
	indexX=f1(m);
  1004e8:	e13fff17 	ldw	r4,-4(fp)
  1004ec:	010030c0 	call	10030c <f1>
  1004f0:	d0a41715 	stw	r2,-28580(gp)
	indexY=f2(m);
  1004f4:	e13fff17 	ldw	r4,-4(fp)
  1004f8:	01003e40 	call	1003e4 <f2>
  1004fc:	d0a41815 	stw	r2,-28576(gp)
	//printf("%d  %d ",indexX,indexY);

	if( hist[0]>=56 && n<=2)
  100500:	00800474 	movhi	r2,17
  100504:	1089d004 	addi	r2,r2,10048
  100508:	10800017 	ldw	r2,0(r2)
  10050c:	10800e10 	cmplti	r2,r2,56
  100510:	1000771e 	bne	r2,zero,1006f0 <getPos+0x234>
  100514:	d0a41617 	ldw	r2,-28584(gp)
  100518:	108000c8 	cmpgei	r2,r2,3
  10051c:	1000741e 	bne	r2,zero,1006f0 <getPos+0x234>
	{
		if(abs(hist[0]-indexX)<abs(hist[0]-indexY))
  100520:	00800474 	movhi	r2,17
  100524:	1089d004 	addi	r2,r2,10048
  100528:	10c00017 	ldw	r3,0(r2)
  10052c:	d0a41717 	ldw	r2,-28580(gp)
  100530:	1885c83a 	sub	r2,r3,r2
  100534:	1000010e 	bge	r2,zero,10053c <getPos+0x80>
  100538:	0085c83a 	sub	r2,zero,r2
  10053c:	1009883a 	mov	r4,r2
  100540:	00800474 	movhi	r2,17
  100544:	1089d004 	addi	r2,r2,10048
  100548:	10c00017 	ldw	r3,0(r2)
  10054c:	d0a41817 	ldw	r2,-28576(gp)
  100550:	1885c83a 	sub	r2,r3,r2
  100554:	1000010e 	bge	r2,zero,10055c <getPos+0xa0>
  100558:	0085c83a 	sub	r2,zero,r2
  10055c:	20802a0e 	bge	r4,r2,100608 <getPos+0x14c>
		{
			ind=indexY+5;
  100560:	d0a41817 	ldw	r2,-28576(gp)
  100564:	10800144 	addi	r2,r2,5
  100568:	e0bffe15 	stw	r2,-8(fp)
			ind=ind%95;
  10056c:	e0bffe17 	ldw	r2,-8(fp)
  100570:	014017c4 	movi	r5,95
  100574:	1009883a 	mov	r4,r2
  100578:	0100e700 	call	100e70 <__modsi3>
  10057c:	e0bffe15 	stw	r2,-8(fp)
			hist[5]=hist[4];
  100580:	00800474 	movhi	r2,17
  100584:	1089d004 	addi	r2,r2,10048
  100588:	10c00417 	ldw	r3,16(r2)
  10058c:	00800474 	movhi	r2,17
  100590:	1089d004 	addi	r2,r2,10048
  100594:	10c00515 	stw	r3,20(r2)
			hist[4]=hist[3];
  100598:	00800474 	movhi	r2,17
  10059c:	1089d004 	addi	r2,r2,10048
  1005a0:	10c00317 	ldw	r3,12(r2)
  1005a4:	00800474 	movhi	r2,17
  1005a8:	1089d004 	addi	r2,r2,10048
  1005ac:	10c00415 	stw	r3,16(r2)
			hist[3]=hist[2];
  1005b0:	00800474 	movhi	r2,17
  1005b4:	1089d004 	addi	r2,r2,10048
  1005b8:	10c00217 	ldw	r3,8(r2)
  1005bc:	00800474 	movhi	r2,17
  1005c0:	1089d004 	addi	r2,r2,10048
  1005c4:	10c00315 	stw	r3,12(r2)
			hist[2]=hist[1];
  1005c8:	00800474 	movhi	r2,17
  1005cc:	1089d004 	addi	r2,r2,10048
  1005d0:	10c00117 	ldw	r3,4(r2)
  1005d4:	00800474 	movhi	r2,17
  1005d8:	1089d004 	addi	r2,r2,10048
  1005dc:	10c00215 	stw	r3,8(r2)
			hist[1]=hist[0];
  1005e0:	00800474 	movhi	r2,17
  1005e4:	1089d004 	addi	r2,r2,10048
  1005e8:	10c00017 	ldw	r3,0(r2)
  1005ec:	00800474 	movhi	r2,17
  1005f0:	1089d004 	addi	r2,r2,10048
  1005f4:	10c00115 	stw	r3,4(r2)
			hist[0]=ind;
  1005f8:	00800474 	movhi	r2,17
  1005fc:	1089d004 	addi	r2,r2,10048
  100600:	e0fffe17 	ldw	r3,-8(fp)
  100604:	10c00015 	stw	r3,0(r2)
		}
		if(abs(hist[0]-indexX)>abs(hist[0]-indexY))
  100608:	00800474 	movhi	r2,17
  10060c:	1089d004 	addi	r2,r2,10048
  100610:	10c00017 	ldw	r3,0(r2)
  100614:	d0a41717 	ldw	r2,-28580(gp)
  100618:	1885c83a 	sub	r2,r3,r2
  10061c:	1000010e 	bge	r2,zero,100624 <getPos+0x168>
  100620:	0085c83a 	sub	r2,zero,r2
  100624:	1009883a 	mov	r4,r2
  100628:	00800474 	movhi	r2,17
  10062c:	1089d004 	addi	r2,r2,10048
  100630:	10c00017 	ldw	r3,0(r2)
  100634:	d0a41817 	ldw	r2,-28576(gp)
  100638:	1885c83a 	sub	r2,r3,r2
  10063c:	1000010e 	bge	r2,zero,100644 <getPos+0x188>
  100640:	0085c83a 	sub	r2,zero,r2
  100644:	11009c0e 	bge	r2,r4,1008b8 <getPos+0x3fc>
		{
			ind=indexY;
  100648:	d0a41817 	ldw	r2,-28576(gp)
  10064c:	e0bffe15 	stw	r2,-8(fp)
			ind=ind%95;
  100650:	e0bffe17 	ldw	r2,-8(fp)
  100654:	014017c4 	movi	r5,95
  100658:	1009883a 	mov	r4,r2
  10065c:	0100e700 	call	100e70 <__modsi3>
  100660:	e0bffe15 	stw	r2,-8(fp)
			hist[5]=hist[4];
  100664:	00800474 	movhi	r2,17
  100668:	1089d004 	addi	r2,r2,10048
  10066c:	10c00417 	ldw	r3,16(r2)
  100670:	00800474 	movhi	r2,17
  100674:	1089d004 	addi	r2,r2,10048
  100678:	10c00515 	stw	r3,20(r2)
			hist[4]=hist[3];
  10067c:	00800474 	movhi	r2,17
  100680:	1089d004 	addi	r2,r2,10048
  100684:	10c00317 	ldw	r3,12(r2)
  100688:	00800474 	movhi	r2,17
  10068c:	1089d004 	addi	r2,r2,10048
  100690:	10c00415 	stw	r3,16(r2)
			hist[3]=hist[2];
  100694:	00800474 	movhi	r2,17
  100698:	1089d004 	addi	r2,r2,10048
  10069c:	10c00217 	ldw	r3,8(r2)
  1006a0:	00800474 	movhi	r2,17
  1006a4:	1089d004 	addi	r2,r2,10048
  1006a8:	10c00315 	stw	r3,12(r2)
			hist[2]=hist[1];
  1006ac:	00800474 	movhi	r2,17
  1006b0:	1089d004 	addi	r2,r2,10048
  1006b4:	10c00117 	ldw	r3,4(r2)
  1006b8:	00800474 	movhi	r2,17
  1006bc:	1089d004 	addi	r2,r2,10048
  1006c0:	10c00215 	stw	r3,8(r2)
			hist[1]=hist[0];
  1006c4:	00800474 	movhi	r2,17
  1006c8:	1089d004 	addi	r2,r2,10048
  1006cc:	10c00017 	ldw	r3,0(r2)
  1006d0:	00800474 	movhi	r2,17
  1006d4:	1089d004 	addi	r2,r2,10048
  1006d8:	10c00115 	stw	r3,4(r2)
			hist[0]=ind;
  1006dc:	00800474 	movhi	r2,17
  1006e0:	1089d004 	addi	r2,r2,10048
  1006e4:	e0fffe17 	ldw	r3,-8(fp)
  1006e8:	10c00015 	stw	r3,0(r2)
			hist[3]=hist[2];
			hist[2]=hist[1];
			hist[1]=hist[0];
			hist[0]=ind;
		}
		if(abs(hist[0]-indexX)>abs(hist[0]-indexY))
  1006ec:	00007206 	br	1008b8 <getPos+0x3fc>
		}

	}
	else
	{
		if(abs(hist[0]-indexX)<abs(hist[0]-indexY))
  1006f0:	00800474 	movhi	r2,17
  1006f4:	1089d004 	addi	r2,r2,10048
  1006f8:	10c00017 	ldw	r3,0(r2)
  1006fc:	d0a41717 	ldw	r2,-28580(gp)
  100700:	1885c83a 	sub	r2,r3,r2
  100704:	1000010e 	bge	r2,zero,10070c <getPos+0x250>
  100708:	0085c83a 	sub	r2,zero,r2
  10070c:	1009883a 	mov	r4,r2
  100710:	00800474 	movhi	r2,17
  100714:	1089d004 	addi	r2,r2,10048
  100718:	10c00017 	ldw	r3,0(r2)
  10071c:	d0a41817 	ldw	r2,-28576(gp)
  100720:	1885c83a 	sub	r2,r3,r2
  100724:	1000010e 	bge	r2,zero,10072c <getPos+0x270>
  100728:	0085c83a 	sub	r2,zero,r2
  10072c:	2080290e 	bge	r4,r2,1007d4 <getPos+0x318>
		{
			ind=indexX;
  100730:	d0a41717 	ldw	r2,-28580(gp)
  100734:	e0bffe15 	stw	r2,-8(fp)
			ind=ind%95;
  100738:	e0bffe17 	ldw	r2,-8(fp)
  10073c:	014017c4 	movi	r5,95
  100740:	1009883a 	mov	r4,r2
  100744:	0100e700 	call	100e70 <__modsi3>
  100748:	e0bffe15 	stw	r2,-8(fp)
			hist[5]=hist[4];
  10074c:	00800474 	movhi	r2,17
  100750:	1089d004 	addi	r2,r2,10048
  100754:	10c00417 	ldw	r3,16(r2)
  100758:	00800474 	movhi	r2,17
  10075c:	1089d004 	addi	r2,r2,10048
  100760:	10c00515 	stw	r3,20(r2)
			hist[4]=hist[3];
  100764:	00800474 	movhi	r2,17
  100768:	1089d004 	addi	r2,r2,10048
  10076c:	10c00317 	ldw	r3,12(r2)
  100770:	00800474 	movhi	r2,17
  100774:	1089d004 	addi	r2,r2,10048
  100778:	10c00415 	stw	r3,16(r2)
			hist[3]=hist[2];
  10077c:	00800474 	movhi	r2,17
  100780:	1089d004 	addi	r2,r2,10048
  100784:	10c00217 	ldw	r3,8(r2)
  100788:	00800474 	movhi	r2,17
  10078c:	1089d004 	addi	r2,r2,10048
  100790:	10c00315 	stw	r3,12(r2)
			hist[2]=hist[1];
  100794:	00800474 	movhi	r2,17
  100798:	1089d004 	addi	r2,r2,10048
  10079c:	10c00117 	ldw	r3,4(r2)
  1007a0:	00800474 	movhi	r2,17
  1007a4:	1089d004 	addi	r2,r2,10048
  1007a8:	10c00215 	stw	r3,8(r2)
			hist[1]=hist[0];
  1007ac:	00800474 	movhi	r2,17
  1007b0:	1089d004 	addi	r2,r2,10048
  1007b4:	10c00017 	ldw	r3,0(r2)
  1007b8:	00800474 	movhi	r2,17
  1007bc:	1089d004 	addi	r2,r2,10048
  1007c0:	10c00115 	stw	r3,4(r2)
			hist[0]=ind;
  1007c4:	00800474 	movhi	r2,17
  1007c8:	1089d004 	addi	r2,r2,10048
  1007cc:	e0fffe17 	ldw	r3,-8(fp)
  1007d0:	10c00015 	stw	r3,0(r2)
		}
		if(abs(hist[0]-indexX)>abs(hist[0]-indexY))
  1007d4:	00800474 	movhi	r2,17
  1007d8:	1089d004 	addi	r2,r2,10048
  1007dc:	10c00017 	ldw	r3,0(r2)
  1007e0:	d0a41717 	ldw	r2,-28580(gp)
  1007e4:	1885c83a 	sub	r2,r3,r2
  1007e8:	1000010e 	bge	r2,zero,1007f0 <getPos+0x334>
  1007ec:	0085c83a 	sub	r2,zero,r2
  1007f0:	1009883a 	mov	r4,r2
  1007f4:	00800474 	movhi	r2,17
  1007f8:	1089d004 	addi	r2,r2,10048
  1007fc:	10c00017 	ldw	r3,0(r2)
  100800:	d0a41817 	ldw	r2,-28576(gp)
  100804:	1885c83a 	sub	r2,r3,r2
  100808:	1000010e 	bge	r2,zero,100810 <getPos+0x354>
  10080c:	0085c83a 	sub	r2,zero,r2
  100810:	1100290e 	bge	r2,r4,1008b8 <getPos+0x3fc>
		{
			ind=indexY;
  100814:	d0a41817 	ldw	r2,-28576(gp)
  100818:	e0bffe15 	stw	r2,-8(fp)
			ind=ind%95;
  10081c:	e0bffe17 	ldw	r2,-8(fp)
  100820:	014017c4 	movi	r5,95
  100824:	1009883a 	mov	r4,r2
  100828:	0100e700 	call	100e70 <__modsi3>
  10082c:	e0bffe15 	stw	r2,-8(fp)
			hist[5]=hist[4];
  100830:	00800474 	movhi	r2,17
  100834:	1089d004 	addi	r2,r2,10048
  100838:	10c00417 	ldw	r3,16(r2)
  10083c:	00800474 	movhi	r2,17
  100840:	1089d004 	addi	r2,r2,10048
  100844:	10c00515 	stw	r3,20(r2)
			hist[4]=hist[3];
  100848:	00800474 	movhi	r2,17
  10084c:	1089d004 	addi	r2,r2,10048
  100850:	10c00317 	ldw	r3,12(r2)
  100854:	00800474 	movhi	r2,17
  100858:	1089d004 	addi	r2,r2,10048
  10085c:	10c00415 	stw	r3,16(r2)
			hist[3]=hist[2];
  100860:	00800474 	movhi	r2,17
  100864:	1089d004 	addi	r2,r2,10048
  100868:	10c00217 	ldw	r3,8(r2)
  10086c:	00800474 	movhi	r2,17
  100870:	1089d004 	addi	r2,r2,10048
  100874:	10c00315 	stw	r3,12(r2)
			hist[2]=hist[1];
  100878:	00800474 	movhi	r2,17
  10087c:	1089d004 	addi	r2,r2,10048
  100880:	10c00117 	ldw	r3,4(r2)
  100884:	00800474 	movhi	r2,17
  100888:	1089d004 	addi	r2,r2,10048
  10088c:	10c00215 	stw	r3,8(r2)
			hist[1]=hist[0];
  100890:	00800474 	movhi	r2,17
  100894:	1089d004 	addi	r2,r2,10048
  100898:	10c00017 	ldw	r3,0(r2)
  10089c:	00800474 	movhi	r2,17
  1008a0:	1089d004 	addi	r2,r2,10048
  1008a4:	10c00115 	stw	r3,4(r2)
			hist[0]=ind;
  1008a8:	00800474 	movhi	r2,17
  1008ac:	1089d004 	addi	r2,r2,10048
  1008b0:	e0fffe17 	ldw	r3,-8(fp)
  1008b4:	10c00015 	stw	r3,0(r2)
		}

	}

	return ind;
  1008b8:	e0bffe17 	ldw	r2,-8(fp)
}
  1008bc:	e037883a 	mov	sp,fp
  1008c0:	dfc00117 	ldw	ra,4(sp)
  1008c4:	df000017 	ldw	fp,0(sp)
  1008c8:	dec00204 	addi	sp,sp,8
  1008cc:	f800283a 	ret

001008d0 <GetAngle>:

int GetAngle(int pin){
  1008d0:	defffa04 	addi	sp,sp,-24
  1008d4:	dfc00515 	stw	ra,20(sp)
  1008d8:	df000415 	stw	fp,16(sp)
  1008dc:	df000404 	addi	fp,sp,16
  1008e0:	e13fff15 	stw	r4,-4(fp)
	int ch=pin;
  1008e4:	e0bfff17 	ldw	r2,-4(fp)
  1008e8:	e0bffd15 	stw	r2,-12(fp)
	float Value;
	int ang;

	IOWR(ADC_LTC2308_BASE, 0x01, 10);
  1008ec:	00c00284 	movi	r3,10
  1008f0:	00800834 	movhi	r2,32
  1008f4:	10840d04 	addi	r2,r2,4148
  1008f8:	10c00035 	stwio	r3,0(r2)
	IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x00);
  1008fc:	e0bffd17 	ldw	r2,-12(fp)
  100900:	1085883a 	add	r2,r2,r2
  100904:	1007883a 	mov	r3,r2
  100908:	00800834 	movhi	r2,32
  10090c:	10840c04 	addi	r2,r2,4144
  100910:	10c00035 	stwio	r3,0(r2)
	IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x01);
  100914:	e0bffd17 	ldw	r2,-12(fp)
  100918:	1085883a 	add	r2,r2,r2
  10091c:	10c00054 	ori	r3,r2,1
  100920:	00800834 	movhi	r2,32
  100924:	10840c04 	addi	r2,r2,4144
  100928:	10c00035 	stwio	r3,0(r2)
	IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x00);
  10092c:	e0bffd17 	ldw	r2,-12(fp)
  100930:	1085883a 	add	r2,r2,r2
  100934:	1007883a 	mov	r3,r2
  100938:	00800834 	movhi	r2,32
  10093c:	10840c04 	addi	r2,r2,4144
  100940:	10c00035 	stwio	r3,0(r2)
	usleep(1);
  100944:	01000044 	movi	r4,1
  100948:	010e8180 	call	10e818 <usleep>

	while ((IORD(ADC_LTC2308_BASE,0x00) & 0x01) == 0x00);
  10094c:	0001883a 	nop
  100950:	00800834 	movhi	r2,32
  100954:	10840c04 	addi	r2,r2,4144
  100958:	10800037 	ldwio	r2,0(r2)
  10095c:	1080004c 	andi	r2,r2,1
  100960:	103ffb26 	beq	r2,zero,100950 <__alt_data_end+0xfff00950>
	Value = IORD(ADC_LTC2308_BASE, 0x01);
  100964:	00800834 	movhi	r2,32
  100968:	10840d04 	addi	r2,r2,4148
  10096c:	10800037 	ldwio	r2,0(r2)
  100970:	1009883a 	mov	r4,r2
  100974:	010184c0 	call	10184c <__floatsisf>
  100978:	1007883a 	mov	r3,r2
  10097c:	e0fffe15 	stw	r3,-8(fp)

	Value=Value/3850;
  100980:	01515c74 	movhi	r5,17777
  100984:	29680004 	addi	r5,r5,-24576
  100988:	e13ffe17 	ldw	r4,-8(fp)
  10098c:	0100fa00 	call	100fa0 <__divsf3>
  100990:	1007883a 	mov	r3,r2
  100994:	e0fffe15 	stw	r3,-8(fp)
	Value=Value*180;
  100998:	0150cd34 	movhi	r5,17204
  10099c:	e13ffe17 	ldw	r4,-8(fp)
  1009a0:	01013e00 	call	1013e0 <__mulsf3>
  1009a4:	1007883a 	mov	r3,r2
  1009a8:	e0fffe15 	stw	r3,-8(fp)
	ang=Value/1;
  1009ac:	e13ffe17 	ldw	r4,-8(fp)
  1009b0:	01017dc0 	call	1017dc <__fixsfsi>
  1009b4:	e0bffc15 	stw	r2,-16(fp)
	if(ch==0)ang=ang-4;
  1009b8:	e0bffd17 	ldw	r2,-12(fp)
  1009bc:	1000031e 	bne	r2,zero,1009cc <GetAngle+0xfc>
  1009c0:	e0bffc17 	ldw	r2,-16(fp)
  1009c4:	10bfff04 	addi	r2,r2,-4
  1009c8:	e0bffc15 	stw	r2,-16(fp)
	if(ang<=0)ang=1;
  1009cc:	e0bffc17 	ldw	r2,-16(fp)
  1009d0:	00800216 	blt	zero,r2,1009dc <GetAngle+0x10c>
  1009d4:	00800044 	movi	r2,1
  1009d8:	e0bffc15 	stw	r2,-16(fp)
	return ang;
  1009dc:	e0bffc17 	ldw	r2,-16(fp)
}
  1009e0:	e037883a 	mov	sp,fp
  1009e4:	dfc00117 	ldw	ra,4(sp)
  1009e8:	df000017 	ldw	fp,0(sp)
  1009ec:	dec00204 	addi	sp,sp,8
  1009f0:	f800283a 	ret

001009f4 <SetMotorPosition>:

void SetMotorPosition(int a,int b){
  1009f4:	defffa04 	addi	sp,sp,-24
  1009f8:	dfc00515 	stw	ra,20(sp)
  1009fc:	df000415 	stw	fp,16(sp)
  100a00:	df000404 	addi	fp,sp,16
  100a04:	e13ffe15 	stw	r4,-8(fp)
  100a08:	e17fff15 	stw	r5,-4(fp)
	int x=GetAngle(2);
  100a0c:	01000084 	movi	r4,2
  100a10:	01008d00 	call	1008d0 <GetAngle>
  100a14:	e0bffc15 	stw	r2,-16(fp)
	int y=GetAngle(1);
  100a18:	01000044 	movi	r4,1
  100a1c:	01008d00 	call	1008d0 <GetAngle>
  100a20:	e0bffd15 	stw	r2,-12(fp)
	x=(x/9)*9;
  100a24:	e0bffc17 	ldw	r2,-16(fp)
  100a28:	01400244 	movi	r5,9
  100a2c:	1009883a 	mov	r4,r2
  100a30:	0100dec0 	call	100dec <__divsi3>
  100a34:	10800264 	muli	r2,r2,9
  100a38:	e0bffc15 	stw	r2,-16(fp)
	y=(y/12)*12;
  100a3c:	e0bffd17 	ldw	r2,-12(fp)
  100a40:	01400304 	movi	r5,12
  100a44:	1009883a 	mov	r4,r2
  100a48:	0100dec0 	call	100dec <__divsi3>
  100a4c:	10800324 	muli	r2,r2,12
  100a50:	e0bffd15 	stw	r2,-12(fp)
	a=(a/9)*9;
  100a54:	e0bffe17 	ldw	r2,-8(fp)
  100a58:	01400244 	movi	r5,9
  100a5c:	1009883a 	mov	r4,r2
  100a60:	0100dec0 	call	100dec <__divsi3>
  100a64:	10800264 	muli	r2,r2,9
  100a68:	e0bffe15 	stw	r2,-8(fp)
	b=(b/12)*12;
  100a6c:	e0bfff17 	ldw	r2,-4(fp)
  100a70:	01400304 	movi	r5,12
  100a74:	1009883a 	mov	r4,r2
  100a78:	0100dec0 	call	100dec <__divsi3>
  100a7c:	10800324 	muli	r2,r2,12
  100a80:	e0bfff15 	stw	r2,-4(fp)
	if(x<a){
  100a84:	e0fffc17 	ldw	r3,-16(fp)
  100a88:	e0bffe17 	ldw	r2,-8(fp)
  100a8c:	1880150e 	bge	r3,r2,100ae4 <SetMotorPosition+0xf0>
		if(y<b){
  100a90:	e0fffd17 	ldw	r3,-12(fp)
  100a94:	e0bfff17 	ldw	r2,-4(fp)
  100a98:	1880040e 	bge	r3,r2,100aac <SetMotorPosition+0xb8>
			IOWR(MOTOR_BASE, 0x00, 10);
  100a9c:	00c00284 	movi	r3,10
  100aa0:	00800834 	movhi	r2,32
  100aa4:	10840804 	addi	r2,r2,4128
  100aa8:	10c00035 	stwio	r3,0(r2)
		}
		if(y>b){
  100aac:	e0bffd17 	ldw	r2,-12(fp)
  100ab0:	e0ffff17 	ldw	r3,-4(fp)
  100ab4:	1880040e 	bge	r3,r2,100ac8 <SetMotorPosition+0xd4>
			IOWR(MOTOR_BASE, 0x00, 9);
  100ab8:	00c00244 	movi	r3,9
  100abc:	00800834 	movhi	r2,32
  100ac0:	10840804 	addi	r2,r2,4128
  100ac4:	10c00035 	stwio	r3,0(r2)
		}
		if(y==b){
  100ac8:	e0fffd17 	ldw	r3,-12(fp)
  100acc:	e0bfff17 	ldw	r2,-4(fp)
  100ad0:	1880041e 	bne	r3,r2,100ae4 <SetMotorPosition+0xf0>
			IOWR(MOTOR_BASE, 0x00, 8);
  100ad4:	00c00204 	movi	r3,8
  100ad8:	00800834 	movhi	r2,32
  100adc:	10840804 	addi	r2,r2,4128
  100ae0:	10c00035 	stwio	r3,0(r2)
		}
	}
	if(x>a){
  100ae4:	e0bffc17 	ldw	r2,-16(fp)
  100ae8:	e0fffe17 	ldw	r3,-8(fp)
  100aec:	1880150e 	bge	r3,r2,100b44 <SetMotorPosition+0x150>
		if(y<b){
  100af0:	e0fffd17 	ldw	r3,-12(fp)
  100af4:	e0bfff17 	ldw	r2,-4(fp)
  100af8:	1880040e 	bge	r3,r2,100b0c <SetMotorPosition+0x118>
			IOWR(MOTOR_BASE, 0x00, 6);
  100afc:	00c00184 	movi	r3,6
  100b00:	00800834 	movhi	r2,32
  100b04:	10840804 	addi	r2,r2,4128
  100b08:	10c00035 	stwio	r3,0(r2)
		}
		if(y>b){
  100b0c:	e0bffd17 	ldw	r2,-12(fp)
  100b10:	e0ffff17 	ldw	r3,-4(fp)
  100b14:	1880040e 	bge	r3,r2,100b28 <SetMotorPosition+0x134>
			IOWR(MOTOR_BASE, 0x00, 5);
  100b18:	00c00144 	movi	r3,5
  100b1c:	00800834 	movhi	r2,32
  100b20:	10840804 	addi	r2,r2,4128
  100b24:	10c00035 	stwio	r3,0(r2)
		}
		if(y==b){
  100b28:	e0fffd17 	ldw	r3,-12(fp)
  100b2c:	e0bfff17 	ldw	r2,-4(fp)
  100b30:	1880041e 	bne	r3,r2,100b44 <SetMotorPosition+0x150>
			IOWR(MOTOR_BASE, 0x00, 4);
  100b34:	00c00104 	movi	r3,4
  100b38:	00800834 	movhi	r2,32
  100b3c:	10840804 	addi	r2,r2,4128
  100b40:	10c00035 	stwio	r3,0(r2)
		}
	}
	if(x==a){
  100b44:	e0fffc17 	ldw	r3,-16(fp)
  100b48:	e0bffe17 	ldw	r2,-8(fp)
  100b4c:	1880151e 	bne	r3,r2,100ba4 <SetMotorPosition+0x1b0>
		if(y<b){
  100b50:	e0fffd17 	ldw	r3,-12(fp)
  100b54:	e0bfff17 	ldw	r2,-4(fp)
  100b58:	1880040e 	bge	r3,r2,100b6c <SetMotorPosition+0x178>
			IOWR(MOTOR_BASE, 0x00, 2);
  100b5c:	00c00084 	movi	r3,2
  100b60:	00800834 	movhi	r2,32
  100b64:	10840804 	addi	r2,r2,4128
  100b68:	10c00035 	stwio	r3,0(r2)
		}
		if(y>b){
  100b6c:	e0bffd17 	ldw	r2,-12(fp)
  100b70:	e0ffff17 	ldw	r3,-4(fp)
  100b74:	1880040e 	bge	r3,r2,100b88 <SetMotorPosition+0x194>
			IOWR(MOTOR_BASE, 0x00, 1);
  100b78:	00c00044 	movi	r3,1
  100b7c:	00800834 	movhi	r2,32
  100b80:	10840804 	addi	r2,r2,4128
  100b84:	10c00035 	stwio	r3,0(r2)
		}
		if(y==b){
  100b88:	e0fffd17 	ldw	r3,-12(fp)
  100b8c:	e0bfff17 	ldw	r2,-4(fp)
  100b90:	1880041e 	bne	r3,r2,100ba4 <SetMotorPosition+0x1b0>
			IOWR(MOTOR_BASE, 0x00, 0);
  100b94:	0007883a 	mov	r3,zero
  100b98:	00800834 	movhi	r2,32
  100b9c:	10840804 	addi	r2,r2,4128
  100ba0:	10c00035 	stwio	r3,0(r2)
		}
	}
	usleep(19000);
  100ba4:	01128e04 	movi	r4,19000
  100ba8:	010e8180 	call	10e818 <usleep>
	IOWR(MOTOR_BASE, 0x00, 0);
  100bac:	0007883a 	mov	r3,zero
  100bb0:	00800834 	movhi	r2,32
  100bb4:	10840804 	addi	r2,r2,4128
  100bb8:	10c00035 	stwio	r3,0(r2)
}
  100bbc:	0001883a 	nop
  100bc0:	e037883a 	mov	sp,fp
  100bc4:	dfc00117 	ldw	ra,4(sp)
  100bc8:	df000017 	ldw	fp,0(sp)
  100bcc:	dec00204 	addi	sp,sp,8
  100bd0:	f800283a 	ret

00100bd4 <main>:


int main()
{
  100bd4:	defffa04 	addi	sp,sp,-24
  100bd8:	dfc00515 	stw	ra,20(sp)
  100bdc:	df000415 	stw	fp,16(sp)
  100be0:	df000404 	addi	fp,sp,16
	int index=0;
  100be4:	e03fff15 	stw	zero,-4(fp)

	for(int i=0;i<100;i++){
  100be8:	e03ffc15 	stw	zero,-16(fp)
  100bec:	00001306 	br	100c3c <main+0x68>
		ankle[i]=180-47-ankle[i];
  100bf0:	00800474 	movhi	r2,17
  100bf4:	10827904 	addi	r2,r2,2532
  100bf8:	e0fffc17 	ldw	r3,-16(fp)
  100bfc:	18c7883a 	add	r3,r3,r3
  100c00:	18c7883a 	add	r3,r3,r3
  100c04:	10c5883a 	add	r2,r2,r3
  100c08:	10800017 	ldw	r2,0(r2)
  100c0c:	00c02144 	movi	r3,133
  100c10:	1889c83a 	sub	r4,r3,r2
  100c14:	00800474 	movhi	r2,17
  100c18:	10827904 	addi	r2,r2,2532
  100c1c:	e0fffc17 	ldw	r3,-16(fp)
  100c20:	18c7883a 	add	r3,r3,r3
  100c24:	18c7883a 	add	r3,r3,r3
  100c28:	10c5883a 	add	r2,r2,r3
  100c2c:	11000015 	stw	r4,0(r2)

int main()
{
	int index=0;

	for(int i=0;i<100;i++){
  100c30:	e0bffc17 	ldw	r2,-16(fp)
  100c34:	10800044 	addi	r2,r2,1
  100c38:	e0bffc15 	stw	r2,-16(fp)
  100c3c:	e0bffc17 	ldw	r2,-16(fp)
  100c40:	10801910 	cmplti	r2,r2,100
  100c44:	103fea1e 	bne	r2,zero,100bf0 <__alt_data_end+0xfff00bf0>
		ankle[i]=180-47-ankle[i];
	}

	//printf("start");
	n=GetAngle(0);
  100c48:	0009883a 	mov	r4,zero
  100c4c:	01008d00 	call	1008d0 <GetAngle>
  100c50:	d0a41615 	stw	r2,-28584(gp)
	indexX=f1(n);
  100c54:	d0a41617 	ldw	r2,-28584(gp)
  100c58:	1009883a 	mov	r4,r2
  100c5c:	010030c0 	call	10030c <f1>
  100c60:	d0a41715 	stw	r2,-28580(gp)
	indexY=f2(n);
  100c64:	d0a41617 	ldw	r2,-28584(gp)
  100c68:	1009883a 	mov	r4,r2
  100c6c:	01003e40 	call	1003e4 <f2>
  100c70:	d0a41815 	stw	r2,-28576(gp)
	//initialization
	if(n>=sf[0])
  100c74:	00800474 	movhi	r2,17
  100c78:	1082dd04 	addi	r2,r2,2932
  100c7c:	10800017 	ldw	r2,0(r2)
  100c80:	d0e41617 	ldw	r3,-28584(gp)
  100c84:	18801b16 	blt	r3,r2,100cf4 <main+0x120>
	{
	    for(int i=0;i<5;i++)
  100c88:	e03ffd15 	stw	zero,-12(fp)
  100c8c:	00001606 	br	100ce8 <main+0x114>
	    {
	    	hist[i]=find(sf[i],57,100);
  100c90:	00800474 	movhi	r2,17
  100c94:	1082dd04 	addi	r2,r2,2932
  100c98:	e0fffd17 	ldw	r3,-12(fp)
  100c9c:	18c7883a 	add	r3,r3,r3
  100ca0:	18c7883a 	add	r3,r3,r3
  100ca4:	10c5883a 	add	r2,r2,r3
  100ca8:	10800017 	ldw	r2,0(r2)
  100cac:	01801904 	movi	r6,100
  100cb0:	01400e44 	movi	r5,57
  100cb4:	1009883a 	mov	r4,r2
  100cb8:	01002900 	call	100290 <find>
  100cbc:	1009883a 	mov	r4,r2
  100cc0:	00800474 	movhi	r2,17
  100cc4:	1089d004 	addi	r2,r2,10048
  100cc8:	e0fffd17 	ldw	r3,-12(fp)
  100ccc:	18c7883a 	add	r3,r3,r3
  100cd0:	18c7883a 	add	r3,r3,r3
  100cd4:	10c5883a 	add	r2,r2,r3
  100cd8:	11000015 	stw	r4,0(r2)
	indexX=f1(n);
	indexY=f2(n);
	//initialization
	if(n>=sf[0])
	{
	    for(int i=0;i<5;i++)
  100cdc:	e0bffd17 	ldw	r2,-12(fp)
  100ce0:	10800044 	addi	r2,r2,1
  100ce4:	e0bffd15 	stw	r2,-12(fp)
  100ce8:	e0bffd17 	ldw	r2,-12(fp)
  100cec:	10800150 	cmplti	r2,r2,5
  100cf0:	103fe71e 	bne	r2,zero,100c90 <__alt_data_end+0xfff00c90>
	    {
	    	hist[i]=find(sf[i],57,100);
	    }
	}
	if(n<=sb[0])
  100cf4:	00800474 	movhi	r2,17
  100cf8:	1082e204 	addi	r2,r2,2952
  100cfc:	10c00017 	ldw	r3,0(r2)
  100d00:	d0a41617 	ldw	r2,-28584(gp)
  100d04:	18801b16 	blt	r3,r2,100d74 <main+0x1a0>
	{
	    for(int i=0;i<5;i++)
  100d08:	e03ffe15 	stw	zero,-8(fp)
  100d0c:	00001606 	br	100d68 <main+0x194>
	    {
	    	hist[i]=find(sb[i],0,57);
  100d10:	00800474 	movhi	r2,17
  100d14:	1082e204 	addi	r2,r2,2952
  100d18:	e0fffe17 	ldw	r3,-8(fp)
  100d1c:	18c7883a 	add	r3,r3,r3
  100d20:	18c7883a 	add	r3,r3,r3
  100d24:	10c5883a 	add	r2,r2,r3
  100d28:	10800017 	ldw	r2,0(r2)
  100d2c:	01800e44 	movi	r6,57
  100d30:	000b883a 	mov	r5,zero
  100d34:	1009883a 	mov	r4,r2
  100d38:	01002900 	call	100290 <find>
  100d3c:	1009883a 	mov	r4,r2
  100d40:	00800474 	movhi	r2,17
  100d44:	1089d004 	addi	r2,r2,10048
  100d48:	e0fffe17 	ldw	r3,-8(fp)
  100d4c:	18c7883a 	add	r3,r3,r3
  100d50:	18c7883a 	add	r3,r3,r3
  100d54:	10c5883a 	add	r2,r2,r3
  100d58:	11000015 	stw	r4,0(r2)
	    	hist[i]=find(sf[i],57,100);
	    }
	}
	if(n<=sb[0])
	{
	    for(int i=0;i<5;i++)
  100d5c:	e0bffe17 	ldw	r2,-8(fp)
  100d60:	10800044 	addi	r2,r2,1
  100d64:	e0bffe15 	stw	r2,-8(fp)
  100d68:	e0bffe17 	ldw	r2,-8(fp)
  100d6c:	10800150 	cmplti	r2,r2,5
  100d70:	103fe71e 	bne	r2,zero,100d10 <__alt_data_end+0xfff00d10>
	    	hist[i]=find(sb[i],0,57);
	    }
	}
	//printf("\n\nStart \n\n");
	while(1){
		n=GetAngle(0);
  100d74:	0009883a 	mov	r4,zero
  100d78:	01008d00 	call	1008d0 <GetAngle>
  100d7c:	d0a41615 	stw	r2,-28584(gp)
		index=getPos(n);
  100d80:	d0a41617 	ldw	r2,-28584(gp)
  100d84:	1009883a 	mov	r4,r2
  100d88:	01004bc0 	call	1004bc <getPos>
  100d8c:	e0bfff15 	stw	r2,-4(fp)
		SetMotorPosition(knee[index],ankle[index]);
  100d90:	00800474 	movhi	r2,17
  100d94:	10821504 	addi	r2,r2,2132
  100d98:	e0ffff17 	ldw	r3,-4(fp)
  100d9c:	18c7883a 	add	r3,r3,r3
  100da0:	18c7883a 	add	r3,r3,r3
  100da4:	10c5883a 	add	r2,r2,r3
  100da8:	11000017 	ldw	r4,0(r2)
  100dac:	00800474 	movhi	r2,17
  100db0:	10827904 	addi	r2,r2,2532
  100db4:	e0ffff17 	ldw	r3,-4(fp)
  100db8:	18c7883a 	add	r3,r3,r3
  100dbc:	18c7883a 	add	r3,r3,r3
  100dc0:	10c5883a 	add	r2,r2,r3
  100dc4:	10800017 	ldw	r2,0(r2)
  100dc8:	100b883a 	mov	r5,r2
  100dcc:	01009f40 	call	1009f4 <SetMotorPosition>
		printf("%d\n",index);
  100dd0:	e17fff17 	ldw	r5,-4(fp)
  100dd4:	01000474 	movhi	r4,17
  100dd8:	2100f504 	addi	r4,r4,980
  100ddc:	0101a040 	call	101a04 <printf>
		usleep(20000);
  100de0:	01138804 	movi	r4,20000
  100de4:	010e8180 	call	10e818 <usleep>
	}
  100de8:	003fe206 	br	100d74 <__alt_data_end+0xfff00d74>

00100dec <__divsi3>:
  100dec:	20001b16 	blt	r4,zero,100e5c <__divsi3+0x70>
  100df0:	000f883a 	mov	r7,zero
  100df4:	28001616 	blt	r5,zero,100e50 <__divsi3+0x64>
  100df8:	200d883a 	mov	r6,r4
  100dfc:	29001a2e 	bgeu	r5,r4,100e68 <__divsi3+0x7c>
  100e00:	00800804 	movi	r2,32
  100e04:	00c00044 	movi	r3,1
  100e08:	00000106 	br	100e10 <__divsi3+0x24>
  100e0c:	10000d26 	beq	r2,zero,100e44 <__divsi3+0x58>
  100e10:	294b883a 	add	r5,r5,r5
  100e14:	10bfffc4 	addi	r2,r2,-1
  100e18:	18c7883a 	add	r3,r3,r3
  100e1c:	293ffb36 	bltu	r5,r4,100e0c <__alt_data_end+0xfff00e0c>
  100e20:	0005883a 	mov	r2,zero
  100e24:	18000726 	beq	r3,zero,100e44 <__divsi3+0x58>
  100e28:	0005883a 	mov	r2,zero
  100e2c:	31400236 	bltu	r6,r5,100e38 <__divsi3+0x4c>
  100e30:	314dc83a 	sub	r6,r6,r5
  100e34:	10c4b03a 	or	r2,r2,r3
  100e38:	1806d07a 	srli	r3,r3,1
  100e3c:	280ad07a 	srli	r5,r5,1
  100e40:	183ffa1e 	bne	r3,zero,100e2c <__alt_data_end+0xfff00e2c>
  100e44:	38000126 	beq	r7,zero,100e4c <__divsi3+0x60>
  100e48:	0085c83a 	sub	r2,zero,r2
  100e4c:	f800283a 	ret
  100e50:	014bc83a 	sub	r5,zero,r5
  100e54:	39c0005c 	xori	r7,r7,1
  100e58:	003fe706 	br	100df8 <__alt_data_end+0xfff00df8>
  100e5c:	0109c83a 	sub	r4,zero,r4
  100e60:	01c00044 	movi	r7,1
  100e64:	003fe306 	br	100df4 <__alt_data_end+0xfff00df4>
  100e68:	00c00044 	movi	r3,1
  100e6c:	003fee06 	br	100e28 <__alt_data_end+0xfff00e28>

00100e70 <__modsi3>:
  100e70:	20001716 	blt	r4,zero,100ed0 <__modsi3+0x60>
  100e74:	000f883a 	mov	r7,zero
  100e78:	2005883a 	mov	r2,r4
  100e7c:	28001216 	blt	r5,zero,100ec8 <__modsi3+0x58>
  100e80:	2900162e 	bgeu	r5,r4,100edc <__modsi3+0x6c>
  100e84:	01800804 	movi	r6,32
  100e88:	00c00044 	movi	r3,1
  100e8c:	00000106 	br	100e94 <__modsi3+0x24>
  100e90:	30000a26 	beq	r6,zero,100ebc <__modsi3+0x4c>
  100e94:	294b883a 	add	r5,r5,r5
  100e98:	31bfffc4 	addi	r6,r6,-1
  100e9c:	18c7883a 	add	r3,r3,r3
  100ea0:	293ffb36 	bltu	r5,r4,100e90 <__alt_data_end+0xfff00e90>
  100ea4:	18000526 	beq	r3,zero,100ebc <__modsi3+0x4c>
  100ea8:	1806d07a 	srli	r3,r3,1
  100eac:	11400136 	bltu	r2,r5,100eb4 <__modsi3+0x44>
  100eb0:	1145c83a 	sub	r2,r2,r5
  100eb4:	280ad07a 	srli	r5,r5,1
  100eb8:	183ffb1e 	bne	r3,zero,100ea8 <__alt_data_end+0xfff00ea8>
  100ebc:	38000126 	beq	r7,zero,100ec4 <__modsi3+0x54>
  100ec0:	0085c83a 	sub	r2,zero,r2
  100ec4:	f800283a 	ret
  100ec8:	014bc83a 	sub	r5,zero,r5
  100ecc:	003fec06 	br	100e80 <__alt_data_end+0xfff00e80>
  100ed0:	0109c83a 	sub	r4,zero,r4
  100ed4:	01c00044 	movi	r7,1
  100ed8:	003fe706 	br	100e78 <__alt_data_end+0xfff00e78>
  100edc:	00c00044 	movi	r3,1
  100ee0:	003ff106 	br	100ea8 <__alt_data_end+0xfff00ea8>

00100ee4 <__udivsi3>:
  100ee4:	200d883a 	mov	r6,r4
  100ee8:	2900152e 	bgeu	r5,r4,100f40 <__udivsi3+0x5c>
  100eec:	28001416 	blt	r5,zero,100f40 <__udivsi3+0x5c>
  100ef0:	00800804 	movi	r2,32
  100ef4:	00c00044 	movi	r3,1
  100ef8:	00000206 	br	100f04 <__udivsi3+0x20>
  100efc:	10000e26 	beq	r2,zero,100f38 <__udivsi3+0x54>
  100f00:	28000516 	blt	r5,zero,100f18 <__udivsi3+0x34>
  100f04:	294b883a 	add	r5,r5,r5
  100f08:	10bfffc4 	addi	r2,r2,-1
  100f0c:	18c7883a 	add	r3,r3,r3
  100f10:	293ffa36 	bltu	r5,r4,100efc <__alt_data_end+0xfff00efc>
  100f14:	18000826 	beq	r3,zero,100f38 <__udivsi3+0x54>
  100f18:	0005883a 	mov	r2,zero
  100f1c:	31400236 	bltu	r6,r5,100f28 <__udivsi3+0x44>
  100f20:	314dc83a 	sub	r6,r6,r5
  100f24:	10c4b03a 	or	r2,r2,r3
  100f28:	1806d07a 	srli	r3,r3,1
  100f2c:	280ad07a 	srli	r5,r5,1
  100f30:	183ffa1e 	bne	r3,zero,100f1c <__alt_data_end+0xfff00f1c>
  100f34:	f800283a 	ret
  100f38:	0005883a 	mov	r2,zero
  100f3c:	f800283a 	ret
  100f40:	00c00044 	movi	r3,1
  100f44:	003ff406 	br	100f18 <__alt_data_end+0xfff00f18>

00100f48 <__umodsi3>:
  100f48:	2005883a 	mov	r2,r4
  100f4c:	2900122e 	bgeu	r5,r4,100f98 <__umodsi3+0x50>
  100f50:	28001116 	blt	r5,zero,100f98 <__umodsi3+0x50>
  100f54:	01800804 	movi	r6,32
  100f58:	00c00044 	movi	r3,1
  100f5c:	00000206 	br	100f68 <__umodsi3+0x20>
  100f60:	30000c26 	beq	r6,zero,100f94 <__umodsi3+0x4c>
  100f64:	28000516 	blt	r5,zero,100f7c <__umodsi3+0x34>
  100f68:	294b883a 	add	r5,r5,r5
  100f6c:	31bfffc4 	addi	r6,r6,-1
  100f70:	18c7883a 	add	r3,r3,r3
  100f74:	293ffa36 	bltu	r5,r4,100f60 <__alt_data_end+0xfff00f60>
  100f78:	18000626 	beq	r3,zero,100f94 <__umodsi3+0x4c>
  100f7c:	1806d07a 	srli	r3,r3,1
  100f80:	11400136 	bltu	r2,r5,100f88 <__umodsi3+0x40>
  100f84:	1145c83a 	sub	r2,r2,r5
  100f88:	280ad07a 	srli	r5,r5,1
  100f8c:	183ffb1e 	bne	r3,zero,100f7c <__alt_data_end+0xfff00f7c>
  100f90:	f800283a 	ret
  100f94:	f800283a 	ret
  100f98:	00c00044 	movi	r3,1
  100f9c:	003ff706 	br	100f7c <__alt_data_end+0xfff00f7c>

00100fa0 <__divsf3>:
  100fa0:	defff504 	addi	sp,sp,-44
  100fa4:	200cd5fa 	srli	r6,r4,23
  100fa8:	dcc00415 	stw	r19,16(sp)
  100fac:	2026d7fa 	srli	r19,r4,31
  100fb0:	00c02034 	movhi	r3,128
  100fb4:	dd800715 	stw	r22,28(sp)
  100fb8:	dd000515 	stw	r20,20(sp)
  100fbc:	dc800315 	stw	r18,12(sp)
  100fc0:	18ffffc4 	addi	r3,r3,-1
  100fc4:	dfc00a15 	stw	ra,40(sp)
  100fc8:	df000915 	stw	fp,36(sp)
  100fcc:	ddc00815 	stw	r23,32(sp)
  100fd0:	dd400615 	stw	r21,24(sp)
  100fd4:	dc400215 	stw	r17,8(sp)
  100fd8:	dc000115 	stw	r16,4(sp)
  100fdc:	35003fcc 	andi	r20,r6,255
  100fe0:	1924703a 	and	r18,r3,r4
  100fe4:	9d803fcc 	andi	r22,r19,255
  100fe8:	a0005226 	beq	r20,zero,101134 <__divsf3+0x194>
  100fec:	00803fc4 	movi	r2,255
  100ff0:	a0802e26 	beq	r20,r2,1010ac <__divsf3+0x10c>
  100ff4:	91002034 	orhi	r4,r18,128
  100ff8:	202490fa 	slli	r18,r4,3
  100ffc:	a53fe044 	addi	r20,r20,-127
  101000:	0021883a 	mov	r16,zero
  101004:	002f883a 	mov	r23,zero
  101008:	280cd5fa 	srli	r6,r5,23
  10100c:	282ad7fa 	srli	r21,r5,31
  101010:	00c02034 	movhi	r3,128
  101014:	18ffffc4 	addi	r3,r3,-1
  101018:	31803fcc 	andi	r6,r6,255
  10101c:	1962703a 	and	r17,r3,r5
  101020:	af003fcc 	andi	fp,r21,255
  101024:	30004a26 	beq	r6,zero,101150 <__divsf3+0x1b0>
  101028:	00803fc4 	movi	r2,255
  10102c:	30804526 	beq	r6,r2,101144 <__divsf3+0x1a4>
  101030:	89402034 	orhi	r5,r17,128
  101034:	282290fa 	slli	r17,r5,3
  101038:	31bfe044 	addi	r6,r6,-127
  10103c:	000b883a 	mov	r5,zero
  101040:	2c20b03a 	or	r16,r5,r16
  101044:	802090ba 	slli	r16,r16,2
  101048:	00800434 	movhi	r2,16
  10104c:	10841b04 	addi	r2,r2,4204
  101050:	80a1883a 	add	r16,r16,r2
  101054:	81000017 	ldw	r4,0(r16)
  101058:	9d46f03a 	xor	r3,r19,r21
  10105c:	180f883a 	mov	r7,r3
  101060:	18803fcc 	andi	r2,r3,255
  101064:	a18dc83a 	sub	r6,r20,r6
  101068:	2000683a 	jmp	r4
  10106c:	00101250 	cmplti	zero,zero,16457
  101070:	001010d4 	movui	zero,16451
  101074:	00101244 	movi	zero,16457
  101078:	001010c0 	call	1010c <__alt_mem_onchip_memory2-0xefef4>
  10107c:	00101244 	movi	zero,16457
  101080:	0010121c 	xori	zero,zero,16456
  101084:	00101244 	movi	zero,16457
  101088:	001010c0 	call	1010c <__alt_mem_onchip_memory2-0xefef4>
  10108c:	001010d4 	movui	zero,16451
  101090:	001010d4 	movui	zero,16451
  101094:	0010121c 	xori	zero,zero,16456
  101098:	001010c0 	call	1010c <__alt_mem_onchip_memory2-0xefef4>
  10109c:	00101330 	cmpltui	zero,zero,16460
  1010a0:	00101330 	cmpltui	zero,zero,16460
  1010a4:	00101330 	cmpltui	zero,zero,16460
  1010a8:	001012e4 	muli	zero,zero,16459
  1010ac:	9000581e 	bne	r18,zero,101210 <__divsf3+0x270>
  1010b0:	04000204 	movi	r16,8
  1010b4:	05c00084 	movi	r23,2
  1010b8:	003fd306 	br	101008 <__alt_data_end+0xfff01008>
  1010bc:	0023883a 	mov	r17,zero
  1010c0:	e02d883a 	mov	r22,fp
  1010c4:	282f883a 	mov	r23,r5
  1010c8:	00800084 	movi	r2,2
  1010cc:	b8808f1e 	bne	r23,r2,10130c <__divsf3+0x36c>
  1010d0:	b005883a 	mov	r2,r22
  1010d4:	11c0004c 	andi	r7,r2,1
  1010d8:	013fffc4 	movi	r4,-1
  1010dc:	000d883a 	mov	r6,zero
  1010e0:	21003fcc 	andi	r4,r4,255
  1010e4:	200895fa 	slli	r4,r4,23
  1010e8:	38803fcc 	andi	r2,r7,255
  1010ec:	00c02034 	movhi	r3,128
  1010f0:	100497fa 	slli	r2,r2,31
  1010f4:	18ffffc4 	addi	r3,r3,-1
  1010f8:	30c6703a 	and	r3,r6,r3
  1010fc:	1906b03a 	or	r3,r3,r4
  101100:	1884b03a 	or	r2,r3,r2
  101104:	dfc00a17 	ldw	ra,40(sp)
  101108:	df000917 	ldw	fp,36(sp)
  10110c:	ddc00817 	ldw	r23,32(sp)
  101110:	dd800717 	ldw	r22,28(sp)
  101114:	dd400617 	ldw	r21,24(sp)
  101118:	dd000517 	ldw	r20,20(sp)
  10111c:	dcc00417 	ldw	r19,16(sp)
  101120:	dc800317 	ldw	r18,12(sp)
  101124:	dc400217 	ldw	r17,8(sp)
  101128:	dc000117 	ldw	r16,4(sp)
  10112c:	dec00b04 	addi	sp,sp,44
  101130:	f800283a 	ret
  101134:	90002b1e 	bne	r18,zero,1011e4 <__divsf3+0x244>
  101138:	04000104 	movi	r16,4
  10113c:	05c00044 	movi	r23,1
  101140:	003fb106 	br	101008 <__alt_data_end+0xfff01008>
  101144:	8800251e 	bne	r17,zero,1011dc <__divsf3+0x23c>
  101148:	01400084 	movi	r5,2
  10114c:	00000206 	br	101158 <__divsf3+0x1b8>
  101150:	88001a1e 	bne	r17,zero,1011bc <__divsf3+0x21c>
  101154:	01400044 	movi	r5,1
  101158:	8160b03a 	or	r16,r16,r5
  10115c:	802090ba 	slli	r16,r16,2
  101160:	00c00434 	movhi	r3,16
  101164:	18c45f04 	addi	r3,r3,4476
  101168:	80e1883a 	add	r16,r16,r3
  10116c:	80c00017 	ldw	r3,0(r16)
  101170:	9d44f03a 	xor	r2,r19,r21
  101174:	a18dc83a 	sub	r6,r20,r6
  101178:	1800683a 	jmp	r3
  10117c:	001010d4 	movui	zero,16451
  101180:	001010d4 	movui	zero,16451
  101184:	00101320 	cmpeqi	zero,zero,16460
  101188:	001010bc 	xorhi	zero,zero,16450
  10118c:	00101320 	cmpeqi	zero,zero,16460
  101190:	0010121c 	xori	zero,zero,16456
  101194:	00101320 	cmpeqi	zero,zero,16460
  101198:	001010bc 	xorhi	zero,zero,16450
  10119c:	001010d4 	movui	zero,16451
  1011a0:	001010d4 	movui	zero,16451
  1011a4:	0010121c 	xori	zero,zero,16456
  1011a8:	001010bc 	xorhi	zero,zero,16450
  1011ac:	00101330 	cmpltui	zero,zero,16460
  1011b0:	00101330 	cmpltui	zero,zero,16460
  1011b4:	00101330 	cmpltui	zero,zero,16460
  1011b8:	00101348 	cmpgei	zero,zero,16461
  1011bc:	8809883a 	mov	r4,r17
  1011c0:	01019700 	call	101970 <__clzsi2>
  1011c4:	10fffec4 	addi	r3,r2,-5
  1011c8:	10801d84 	addi	r2,r2,118
  1011cc:	88e2983a 	sll	r17,r17,r3
  1011d0:	008dc83a 	sub	r6,zero,r2
  1011d4:	000b883a 	mov	r5,zero
  1011d8:	003f9906 	br	101040 <__alt_data_end+0xfff01040>
  1011dc:	014000c4 	movi	r5,3
  1011e0:	003f9706 	br	101040 <__alt_data_end+0xfff01040>
  1011e4:	9009883a 	mov	r4,r18
  1011e8:	d9400015 	stw	r5,0(sp)
  1011ec:	01019700 	call	101970 <__clzsi2>
  1011f0:	10fffec4 	addi	r3,r2,-5
  1011f4:	11801d84 	addi	r6,r2,118
  1011f8:	90e4983a 	sll	r18,r18,r3
  1011fc:	01a9c83a 	sub	r20,zero,r6
  101200:	0021883a 	mov	r16,zero
  101204:	002f883a 	mov	r23,zero
  101208:	d9400017 	ldw	r5,0(sp)
  10120c:	003f7e06 	br	101008 <__alt_data_end+0xfff01008>
  101210:	04000304 	movi	r16,12
  101214:	05c000c4 	movi	r23,3
  101218:	003f7b06 	br	101008 <__alt_data_end+0xfff01008>
  10121c:	01802034 	movhi	r6,128
  101220:	000f883a 	mov	r7,zero
  101224:	31bfffc4 	addi	r6,r6,-1
  101228:	013fffc4 	movi	r4,-1
  10122c:	003fac06 	br	1010e0 <__alt_data_end+0xfff010e0>
  101230:	01400044 	movi	r5,1
  101234:	2909c83a 	sub	r4,r5,r4
  101238:	00c006c4 	movi	r3,27
  10123c:	19004b0e 	bge	r3,r4,10136c <__divsf3+0x3cc>
  101240:	114e703a 	and	r7,r2,r5
  101244:	0009883a 	mov	r4,zero
  101248:	000d883a 	mov	r6,zero
  10124c:	003fa406 	br	1010e0 <__alt_data_end+0xfff010e0>
  101250:	9006917a 	slli	r3,r18,5
  101254:	8822917a 	slli	r17,r17,5
  101258:	1c40372e 	bgeu	r3,r17,101338 <__divsf3+0x398>
  10125c:	31bfffc4 	addi	r6,r6,-1
  101260:	010006c4 	movi	r4,27
  101264:	000b883a 	mov	r5,zero
  101268:	180f883a 	mov	r7,r3
  10126c:	294b883a 	add	r5,r5,r5
  101270:	18c7883a 	add	r3,r3,r3
  101274:	38000116 	blt	r7,zero,10127c <__divsf3+0x2dc>
  101278:	1c400236 	bltu	r3,r17,101284 <__divsf3+0x2e4>
  10127c:	1c47c83a 	sub	r3,r3,r17
  101280:	29400054 	ori	r5,r5,1
  101284:	213fffc4 	addi	r4,r4,-1
  101288:	203ff71e 	bne	r4,zero,101268 <__alt_data_end+0xfff01268>
  10128c:	1806c03a 	cmpne	r3,r3,zero
  101290:	1962b03a 	or	r17,r3,r5
  101294:	31001fc4 	addi	r4,r6,127
  101298:	013fe50e 	bge	zero,r4,101230 <__alt_data_end+0xfff01230>
  10129c:	88c001cc 	andi	r3,r17,7
  1012a0:	18000426 	beq	r3,zero,1012b4 <__divsf3+0x314>
  1012a4:	88c003cc 	andi	r3,r17,15
  1012a8:	01400104 	movi	r5,4
  1012ac:	19400126 	beq	r3,r5,1012b4 <__divsf3+0x314>
  1012b0:	8963883a 	add	r17,r17,r5
  1012b4:	88c2002c 	andhi	r3,r17,2048
  1012b8:	18000426 	beq	r3,zero,1012cc <__divsf3+0x32c>
  1012bc:	00fe0034 	movhi	r3,63488
  1012c0:	18ffffc4 	addi	r3,r3,-1
  1012c4:	31002004 	addi	r4,r6,128
  1012c8:	88e2703a 	and	r17,r17,r3
  1012cc:	00c03f84 	movi	r3,254
  1012d0:	193f8016 	blt	r3,r4,1010d4 <__alt_data_end+0xfff010d4>
  1012d4:	880c91ba 	slli	r6,r17,6
  1012d8:	11c0004c 	andi	r7,r2,1
  1012dc:	300cd27a 	srli	r6,r6,9
  1012e0:	003f7f06 	br	1010e0 <__alt_data_end+0xfff010e0>
  1012e4:	9080102c 	andhi	r2,r18,64
  1012e8:	10000226 	beq	r2,zero,1012f4 <__divsf3+0x354>
  1012ec:	8880102c 	andhi	r2,r17,64
  1012f0:	10001826 	beq	r2,zero,101354 <__divsf3+0x3b4>
  1012f4:	00802034 	movhi	r2,128
  1012f8:	91801034 	orhi	r6,r18,64
  1012fc:	10bfffc4 	addi	r2,r2,-1
  101300:	980f883a 	mov	r7,r19
  101304:	308c703a 	and	r6,r6,r2
  101308:	003fc706 	br	101228 <__alt_data_end+0xfff01228>
  10130c:	008000c4 	movi	r2,3
  101310:	b8802d26 	beq	r23,r2,1013c8 <__divsf3+0x428>
  101314:	00c00044 	movi	r3,1
  101318:	b005883a 	mov	r2,r22
  10131c:	b8ffdd1e 	bne	r23,r3,101294 <__alt_data_end+0xfff01294>
  101320:	11c0004c 	andi	r7,r2,1
  101324:	0009883a 	mov	r4,zero
  101328:	000d883a 	mov	r6,zero
  10132c:	003f6c06 	br	1010e0 <__alt_data_end+0xfff010e0>
  101330:	9023883a 	mov	r17,r18
  101334:	003f6406 	br	1010c8 <__alt_data_end+0xfff010c8>
  101338:	1c47c83a 	sub	r3,r3,r17
  10133c:	01000684 	movi	r4,26
  101340:	01400044 	movi	r5,1
  101344:	003fc806 	br	101268 <__alt_data_end+0xfff01268>
  101348:	9080102c 	andhi	r2,r18,64
  10134c:	103fe926 	beq	r2,zero,1012f4 <__alt_data_end+0xfff012f4>
  101350:	0023883a 	mov	r17,zero
  101354:	00802034 	movhi	r2,128
  101358:	89801034 	orhi	r6,r17,64
  10135c:	10bfffc4 	addi	r2,r2,-1
  101360:	a80f883a 	mov	r7,r21
  101364:	308c703a 	and	r6,r6,r2
  101368:	003faf06 	br	101228 <__alt_data_end+0xfff01228>
  10136c:	01c00804 	movi	r7,32
  101370:	390fc83a 	sub	r7,r7,r4
  101374:	89ce983a 	sll	r7,r17,r7
  101378:	890ad83a 	srl	r5,r17,r4
  10137c:	380ec03a 	cmpne	r7,r7,zero
  101380:	29cab03a 	or	r5,r5,r7
  101384:	28c001cc 	andi	r3,r5,7
  101388:	18000426 	beq	r3,zero,10139c <__divsf3+0x3fc>
  10138c:	28c003cc 	andi	r3,r5,15
  101390:	01000104 	movi	r4,4
  101394:	19000126 	beq	r3,r4,10139c <__divsf3+0x3fc>
  101398:	290b883a 	add	r5,r5,r4
  10139c:	28c1002c 	andhi	r3,r5,1024
  1013a0:	18000426 	beq	r3,zero,1013b4 <__divsf3+0x414>
  1013a4:	11c0004c 	andi	r7,r2,1
  1013a8:	01000044 	movi	r4,1
  1013ac:	000d883a 	mov	r6,zero
  1013b0:	003f4b06 	br	1010e0 <__alt_data_end+0xfff010e0>
  1013b4:	280a91ba 	slli	r5,r5,6
  1013b8:	11c0004c 	andi	r7,r2,1
  1013bc:	0009883a 	mov	r4,zero
  1013c0:	280cd27a 	srli	r6,r5,9
  1013c4:	003f4606 	br	1010e0 <__alt_data_end+0xfff010e0>
  1013c8:	00802034 	movhi	r2,128
  1013cc:	89801034 	orhi	r6,r17,64
  1013d0:	10bfffc4 	addi	r2,r2,-1
  1013d4:	b00f883a 	mov	r7,r22
  1013d8:	308c703a 	and	r6,r6,r2
  1013dc:	003f9206 	br	101228 <__alt_data_end+0xfff01228>

001013e0 <__mulsf3>:
  1013e0:	defff504 	addi	sp,sp,-44
  1013e4:	dc000115 	stw	r16,4(sp)
  1013e8:	2020d5fa 	srli	r16,r4,23
  1013ec:	dd400615 	stw	r21,24(sp)
  1013f0:	202ad7fa 	srli	r21,r4,31
  1013f4:	dc800315 	stw	r18,12(sp)
  1013f8:	04802034 	movhi	r18,128
  1013fc:	df000915 	stw	fp,36(sp)
  101400:	dd000515 	stw	r20,20(sp)
  101404:	94bfffc4 	addi	r18,r18,-1
  101408:	dfc00a15 	stw	ra,40(sp)
  10140c:	ddc00815 	stw	r23,32(sp)
  101410:	dd800715 	stw	r22,28(sp)
  101414:	dcc00415 	stw	r19,16(sp)
  101418:	dc400215 	stw	r17,8(sp)
  10141c:	84003fcc 	andi	r16,r16,255
  101420:	9124703a 	and	r18,r18,r4
  101424:	a829883a 	mov	r20,r21
  101428:	af003fcc 	andi	fp,r21,255
  10142c:	80005426 	beq	r16,zero,101580 <__mulsf3+0x1a0>
  101430:	00803fc4 	movi	r2,255
  101434:	80802f26 	beq	r16,r2,1014f4 <__mulsf3+0x114>
  101438:	91002034 	orhi	r4,r18,128
  10143c:	202490fa 	slli	r18,r4,3
  101440:	843fe044 	addi	r16,r16,-127
  101444:	0023883a 	mov	r17,zero
  101448:	002f883a 	mov	r23,zero
  10144c:	2804d5fa 	srli	r2,r5,23
  101450:	282cd7fa 	srli	r22,r5,31
  101454:	01002034 	movhi	r4,128
  101458:	213fffc4 	addi	r4,r4,-1
  10145c:	10803fcc 	andi	r2,r2,255
  101460:	2166703a 	and	r19,r4,r5
  101464:	b1803fcc 	andi	r6,r22,255
  101468:	10004c26 	beq	r2,zero,10159c <__mulsf3+0x1bc>
  10146c:	00c03fc4 	movi	r3,255
  101470:	10c04726 	beq	r2,r3,101590 <__mulsf3+0x1b0>
  101474:	99002034 	orhi	r4,r19,128
  101478:	202690fa 	slli	r19,r4,3
  10147c:	10bfe044 	addi	r2,r2,-127
  101480:	0007883a 	mov	r3,zero
  101484:	80a1883a 	add	r16,r16,r2
  101488:	010003c4 	movi	r4,15
  10148c:	1c44b03a 	or	r2,r3,r17
  101490:	b56af03a 	xor	r21,r22,r21
  101494:	81c00044 	addi	r7,r16,1
  101498:	20806b36 	bltu	r4,r2,101648 <__mulsf3+0x268>
  10149c:	100490ba 	slli	r2,r2,2
  1014a0:	01000434 	movhi	r4,16
  1014a4:	21052d04 	addi	r4,r4,5300
  1014a8:	1105883a 	add	r2,r2,r4
  1014ac:	10800017 	ldw	r2,0(r2)
  1014b0:	1000683a 	jmp	r2
  1014b4:	00101648 	cmpgei	zero,zero,16473
  1014b8:	00101508 	cmpgei	zero,zero,16468
  1014bc:	00101508 	cmpgei	zero,zero,16468
  1014c0:	00101504 	movi	zero,16468
  1014c4:	0010162c 	andhi	zero,zero,16472
  1014c8:	0010162c 	andhi	zero,zero,16472
  1014cc:	00101618 	cmpnei	zero,zero,16472
  1014d0:	00101504 	movi	zero,16468
  1014d4:	0010162c 	andhi	zero,zero,16472
  1014d8:	00101618 	cmpnei	zero,zero,16472
  1014dc:	0010162c 	andhi	zero,zero,16472
  1014e0:	00101504 	movi	zero,16468
  1014e4:	00101638 	rdprs	zero,zero,16472
  1014e8:	00101638 	rdprs	zero,zero,16472
  1014ec:	00101638 	rdprs	zero,zero,16472
  1014f0:	00101714 	movui	zero,16476
  1014f4:	90003b1e 	bne	r18,zero,1015e4 <__mulsf3+0x204>
  1014f8:	04400204 	movi	r17,8
  1014fc:	05c00084 	movi	r23,2
  101500:	003fd206 	br	10144c <__alt_data_end+0xfff0144c>
  101504:	302b883a 	mov	r21,r6
  101508:	00800084 	movi	r2,2
  10150c:	18802626 	beq	r3,r2,1015a8 <__mulsf3+0x1c8>
  101510:	008000c4 	movi	r2,3
  101514:	1880ab26 	beq	r3,r2,1017c4 <__mulsf3+0x3e4>
  101518:	00800044 	movi	r2,1
  10151c:	1880a21e 	bne	r3,r2,1017a8 <__mulsf3+0x3c8>
  101520:	a829883a 	mov	r20,r21
  101524:	0007883a 	mov	r3,zero
  101528:	0009883a 	mov	r4,zero
  10152c:	18803fcc 	andi	r2,r3,255
  101530:	100695fa 	slli	r3,r2,23
  101534:	a0803fcc 	andi	r2,r20,255
  101538:	100a97fa 	slli	r5,r2,31
  10153c:	00802034 	movhi	r2,128
  101540:	10bfffc4 	addi	r2,r2,-1
  101544:	2084703a 	and	r2,r4,r2
  101548:	10c4b03a 	or	r2,r2,r3
  10154c:	1144b03a 	or	r2,r2,r5
  101550:	dfc00a17 	ldw	ra,40(sp)
  101554:	df000917 	ldw	fp,36(sp)
  101558:	ddc00817 	ldw	r23,32(sp)
  10155c:	dd800717 	ldw	r22,28(sp)
  101560:	dd400617 	ldw	r21,24(sp)
  101564:	dd000517 	ldw	r20,20(sp)
  101568:	dcc00417 	ldw	r19,16(sp)
  10156c:	dc800317 	ldw	r18,12(sp)
  101570:	dc400217 	ldw	r17,8(sp)
  101574:	dc000117 	ldw	r16,4(sp)
  101578:	dec00b04 	addi	sp,sp,44
  10157c:	f800283a 	ret
  101580:	90000d1e 	bne	r18,zero,1015b8 <__mulsf3+0x1d8>
  101584:	04400104 	movi	r17,4
  101588:	05c00044 	movi	r23,1
  10158c:	003faf06 	br	10144c <__alt_data_end+0xfff0144c>
  101590:	9806c03a 	cmpne	r3,r19,zero
  101594:	18c00084 	addi	r3,r3,2
  101598:	003fba06 	br	101484 <__alt_data_end+0xfff01484>
  10159c:	9800141e 	bne	r19,zero,1015f0 <__mulsf3+0x210>
  1015a0:	00c00044 	movi	r3,1
  1015a4:	003fb706 	br	101484 <__alt_data_end+0xfff01484>
  1015a8:	a829883a 	mov	r20,r21
  1015ac:	00ffffc4 	movi	r3,-1
  1015b0:	0009883a 	mov	r4,zero
  1015b4:	003fdd06 	br	10152c <__alt_data_end+0xfff0152c>
  1015b8:	9009883a 	mov	r4,r18
  1015bc:	d9400015 	stw	r5,0(sp)
  1015c0:	01019700 	call	101970 <__clzsi2>
  1015c4:	10fffec4 	addi	r3,r2,-5
  1015c8:	10801d84 	addi	r2,r2,118
  1015cc:	90e4983a 	sll	r18,r18,r3
  1015d0:	00a1c83a 	sub	r16,zero,r2
  1015d4:	0023883a 	mov	r17,zero
  1015d8:	002f883a 	mov	r23,zero
  1015dc:	d9400017 	ldw	r5,0(sp)
  1015e0:	003f9a06 	br	10144c <__alt_data_end+0xfff0144c>
  1015e4:	04400304 	movi	r17,12
  1015e8:	05c000c4 	movi	r23,3
  1015ec:	003f9706 	br	10144c <__alt_data_end+0xfff0144c>
  1015f0:	9809883a 	mov	r4,r19
  1015f4:	d9800015 	stw	r6,0(sp)
  1015f8:	01019700 	call	101970 <__clzsi2>
  1015fc:	10fffec4 	addi	r3,r2,-5
  101600:	10801d84 	addi	r2,r2,118
  101604:	98e6983a 	sll	r19,r19,r3
  101608:	0085c83a 	sub	r2,zero,r2
  10160c:	0007883a 	mov	r3,zero
  101610:	d9800017 	ldw	r6,0(sp)
  101614:	003f9b06 	br	101484 <__alt_data_end+0xfff01484>
  101618:	01002034 	movhi	r4,128
  10161c:	0029883a 	mov	r20,zero
  101620:	213fffc4 	addi	r4,r4,-1
  101624:	00ffffc4 	movi	r3,-1
  101628:	003fc006 	br	10152c <__alt_data_end+0xfff0152c>
  10162c:	9027883a 	mov	r19,r18
  101630:	b807883a 	mov	r3,r23
  101634:	003fb406 	br	101508 <__alt_data_end+0xfff01508>
  101638:	9027883a 	mov	r19,r18
  10163c:	e02b883a 	mov	r21,fp
  101640:	b807883a 	mov	r3,r23
  101644:	003fb006 	br	101508 <__alt_data_end+0xfff01508>
  101648:	9004d43a 	srli	r2,r18,16
  10164c:	9810d43a 	srli	r8,r19,16
  101650:	94bfffcc 	andi	r18,r18,65535
  101654:	993fffcc 	andi	r4,r19,65535
  101658:	910d383a 	mul	r6,r18,r4
  10165c:	20a7383a 	mul	r19,r4,r2
  101660:	9225383a 	mul	r18,r18,r8
  101664:	3006d43a 	srli	r3,r6,16
  101668:	1211383a 	mul	r8,r2,r8
  10166c:	94e5883a 	add	r18,r18,r19
  101670:	1c87883a 	add	r3,r3,r18
  101674:	1cc0022e 	bgeu	r3,r19,101680 <__mulsf3+0x2a0>
  101678:	00800074 	movhi	r2,1
  10167c:	4091883a 	add	r8,r8,r2
  101680:	1804943a 	slli	r2,r3,16
  101684:	31bfffcc 	andi	r6,r6,65535
  101688:	1806d43a 	srli	r3,r3,16
  10168c:	1185883a 	add	r2,r2,r6
  101690:	102691ba 	slli	r19,r2,6
  101694:	1a07883a 	add	r3,r3,r8
  101698:	1004d6ba 	srli	r2,r2,26
  10169c:	180891ba 	slli	r4,r3,6
  1016a0:	9826c03a 	cmpne	r19,r19,zero
  1016a4:	9884b03a 	or	r2,r19,r2
  1016a8:	1126b03a 	or	r19,r2,r4
  1016ac:	9882002c 	andhi	r2,r19,2048
  1016b0:	10000426 	beq	r2,zero,1016c4 <__mulsf3+0x2e4>
  1016b4:	9804d07a 	srli	r2,r19,1
  1016b8:	9900004c 	andi	r4,r19,1
  1016bc:	3821883a 	mov	r16,r7
  1016c0:	1126b03a 	or	r19,r2,r4
  1016c4:	80c01fc4 	addi	r3,r16,127
  1016c8:	00c0210e 	bge	zero,r3,101750 <__mulsf3+0x370>
  1016cc:	988001cc 	andi	r2,r19,7
  1016d0:	10000426 	beq	r2,zero,1016e4 <__mulsf3+0x304>
  1016d4:	988003cc 	andi	r2,r19,15
  1016d8:	01000104 	movi	r4,4
  1016dc:	11000126 	beq	r2,r4,1016e4 <__mulsf3+0x304>
  1016e0:	9927883a 	add	r19,r19,r4
  1016e4:	9882002c 	andhi	r2,r19,2048
  1016e8:	10000426 	beq	r2,zero,1016fc <__mulsf3+0x31c>
  1016ec:	00be0034 	movhi	r2,63488
  1016f0:	10bfffc4 	addi	r2,r2,-1
  1016f4:	80c02004 	addi	r3,r16,128
  1016f8:	98a6703a 	and	r19,r19,r2
  1016fc:	00803f84 	movi	r2,254
  101700:	10ffa916 	blt	r2,r3,1015a8 <__alt_data_end+0xfff015a8>
  101704:	980891ba 	slli	r4,r19,6
  101708:	a829883a 	mov	r20,r21
  10170c:	2008d27a 	srli	r4,r4,9
  101710:	003f8606 	br	10152c <__alt_data_end+0xfff0152c>
  101714:	9080102c 	andhi	r2,r18,64
  101718:	10000826 	beq	r2,zero,10173c <__mulsf3+0x35c>
  10171c:	9880102c 	andhi	r2,r19,64
  101720:	1000061e 	bne	r2,zero,10173c <__mulsf3+0x35c>
  101724:	00802034 	movhi	r2,128
  101728:	99001034 	orhi	r4,r19,64
  10172c:	10bfffc4 	addi	r2,r2,-1
  101730:	b029883a 	mov	r20,r22
  101734:	2088703a 	and	r4,r4,r2
  101738:	003fba06 	br	101624 <__alt_data_end+0xfff01624>
  10173c:	00802034 	movhi	r2,128
  101740:	91001034 	orhi	r4,r18,64
  101744:	10bfffc4 	addi	r2,r2,-1
  101748:	2088703a 	and	r4,r4,r2
  10174c:	003fb506 	br	101624 <__alt_data_end+0xfff01624>
  101750:	00800044 	movi	r2,1
  101754:	10c7c83a 	sub	r3,r2,r3
  101758:	008006c4 	movi	r2,27
  10175c:	10ff7016 	blt	r2,r3,101520 <__alt_data_end+0xfff01520>
  101760:	00800804 	movi	r2,32
  101764:	10c5c83a 	sub	r2,r2,r3
  101768:	9884983a 	sll	r2,r19,r2
  10176c:	98c6d83a 	srl	r3,r19,r3
  101770:	1004c03a 	cmpne	r2,r2,zero
  101774:	1884b03a 	or	r2,r3,r2
  101778:	10c001cc 	andi	r3,r2,7
  10177c:	18000426 	beq	r3,zero,101790 <__mulsf3+0x3b0>
  101780:	10c003cc 	andi	r3,r2,15
  101784:	01000104 	movi	r4,4
  101788:	19000126 	beq	r3,r4,101790 <__mulsf3+0x3b0>
  10178c:	1105883a 	add	r2,r2,r4
  101790:	10c1002c 	andhi	r3,r2,1024
  101794:	18000626 	beq	r3,zero,1017b0 <__mulsf3+0x3d0>
  101798:	a829883a 	mov	r20,r21
  10179c:	00c00044 	movi	r3,1
  1017a0:	0009883a 	mov	r4,zero
  1017a4:	003f6106 	br	10152c <__alt_data_end+0xfff0152c>
  1017a8:	3821883a 	mov	r16,r7
  1017ac:	003fc506 	br	1016c4 <__alt_data_end+0xfff016c4>
  1017b0:	100491ba 	slli	r2,r2,6
  1017b4:	a829883a 	mov	r20,r21
  1017b8:	0007883a 	mov	r3,zero
  1017bc:	1008d27a 	srli	r4,r2,9
  1017c0:	003f5a06 	br	10152c <__alt_data_end+0xfff0152c>
  1017c4:	00802034 	movhi	r2,128
  1017c8:	99001034 	orhi	r4,r19,64
  1017cc:	10bfffc4 	addi	r2,r2,-1
  1017d0:	a829883a 	mov	r20,r21
  1017d4:	2088703a 	and	r4,r4,r2
  1017d8:	003f9206 	br	101624 <__alt_data_end+0xfff01624>

001017dc <__fixsfsi>:
  1017dc:	200ad5fa 	srli	r5,r4,23
  1017e0:	00c02034 	movhi	r3,128
  1017e4:	18ffffc4 	addi	r3,r3,-1
  1017e8:	29403fcc 	andi	r5,r5,255
  1017ec:	00801f84 	movi	r2,126
  1017f0:	1906703a 	and	r3,r3,r4
  1017f4:	2008d7fa 	srli	r4,r4,31
  1017f8:	11400e0e 	bge	r2,r5,101834 <__fixsfsi+0x58>
  1017fc:	00802744 	movi	r2,157
  101800:	11400816 	blt	r2,r5,101824 <__fixsfsi+0x48>
  101804:	00802544 	movi	r2,149
  101808:	18c02034 	orhi	r3,r3,128
  10180c:	11400b0e 	bge	r2,r5,10183c <__fixsfsi+0x60>
  101810:	28bfda84 	addi	r2,r5,-150
  101814:	1884983a 	sll	r2,r3,r2
  101818:	20000726 	beq	r4,zero,101838 <__fixsfsi+0x5c>
  10181c:	0085c83a 	sub	r2,zero,r2
  101820:	f800283a 	ret
  101824:	00a00034 	movhi	r2,32768
  101828:	10bfffc4 	addi	r2,r2,-1
  10182c:	2085883a 	add	r2,r4,r2
  101830:	f800283a 	ret
  101834:	0005883a 	mov	r2,zero
  101838:	f800283a 	ret
  10183c:	00802584 	movi	r2,150
  101840:	1145c83a 	sub	r2,r2,r5
  101844:	1884d83a 	srl	r2,r3,r2
  101848:	003ff306 	br	101818 <__alt_data_end+0xfff01818>

0010184c <__floatsisf>:
  10184c:	defffd04 	addi	sp,sp,-12
  101850:	dfc00215 	stw	ra,8(sp)
  101854:	dc400115 	stw	r17,4(sp)
  101858:	dc000015 	stw	r16,0(sp)
  10185c:	20003526 	beq	r4,zero,101934 <__floatsisf+0xe8>
  101860:	2021883a 	mov	r16,r4
  101864:	2022d7fa 	srli	r17,r4,31
  101868:	20003616 	blt	r4,zero,101944 <__floatsisf+0xf8>
  10186c:	8009883a 	mov	r4,r16
  101870:	01019700 	call	101970 <__clzsi2>
  101874:	00c02784 	movi	r3,158
  101878:	1887c83a 	sub	r3,r3,r2
  10187c:	01002584 	movi	r4,150
  101880:	20c01416 	blt	r4,r3,1018d4 <__floatsisf+0x88>
  101884:	20c9c83a 	sub	r4,r4,r3
  101888:	8120983a 	sll	r16,r16,r4
  10188c:	00802034 	movhi	r2,128
  101890:	10bfffc4 	addi	r2,r2,-1
  101894:	8809883a 	mov	r4,r17
  101898:	80a0703a 	and	r16,r16,r2
  10189c:	18803fcc 	andi	r2,r3,255
  1018a0:	100695fa 	slli	r3,r2,23
  1018a4:	20803fcc 	andi	r2,r4,255
  1018a8:	100897fa 	slli	r4,r2,31
  1018ac:	00802034 	movhi	r2,128
  1018b0:	10bfffc4 	addi	r2,r2,-1
  1018b4:	8084703a 	and	r2,r16,r2
  1018b8:	10c4b03a 	or	r2,r2,r3
  1018bc:	1104b03a 	or	r2,r2,r4
  1018c0:	dfc00217 	ldw	ra,8(sp)
  1018c4:	dc400117 	ldw	r17,4(sp)
  1018c8:	dc000017 	ldw	r16,0(sp)
  1018cc:	dec00304 	addi	sp,sp,12
  1018d0:	f800283a 	ret
  1018d4:	01002644 	movi	r4,153
  1018d8:	20c01c16 	blt	r4,r3,10194c <__floatsisf+0x100>
  1018dc:	20c9c83a 	sub	r4,r4,r3
  1018e0:	8120983a 	sll	r16,r16,r4
  1018e4:	013f0034 	movhi	r4,64512
  1018e8:	213fffc4 	addi	r4,r4,-1
  1018ec:	814001cc 	andi	r5,r16,7
  1018f0:	8108703a 	and	r4,r16,r4
  1018f4:	28000426 	beq	r5,zero,101908 <__floatsisf+0xbc>
  1018f8:	840003cc 	andi	r16,r16,15
  1018fc:	01400104 	movi	r5,4
  101900:	81400126 	beq	r16,r5,101908 <__floatsisf+0xbc>
  101904:	2149883a 	add	r4,r4,r5
  101908:	2141002c 	andhi	r5,r4,1024
  10190c:	28000526 	beq	r5,zero,101924 <__floatsisf+0xd8>
  101910:	00c027c4 	movi	r3,159
  101914:	1887c83a 	sub	r3,r3,r2
  101918:	00bf0034 	movhi	r2,64512
  10191c:	10bfffc4 	addi	r2,r2,-1
  101920:	2088703a 	and	r4,r4,r2
  101924:	202091ba 	slli	r16,r4,6
  101928:	8809883a 	mov	r4,r17
  10192c:	8020d27a 	srli	r16,r16,9
  101930:	003fda06 	br	10189c <__alt_data_end+0xfff0189c>
  101934:	0009883a 	mov	r4,zero
  101938:	0007883a 	mov	r3,zero
  10193c:	0021883a 	mov	r16,zero
  101940:	003fd606 	br	10189c <__alt_data_end+0xfff0189c>
  101944:	0121c83a 	sub	r16,zero,r4
  101948:	003fc806 	br	10186c <__alt_data_end+0xfff0186c>
  10194c:	01002e44 	movi	r4,185
  101950:	20c9c83a 	sub	r4,r4,r3
  101954:	01400144 	movi	r5,5
  101958:	8108983a 	sll	r4,r16,r4
  10195c:	288bc83a 	sub	r5,r5,r2
  101960:	8160d83a 	srl	r16,r16,r5
  101964:	2008c03a 	cmpne	r4,r4,zero
  101968:	8120b03a 	or	r16,r16,r4
  10196c:	003fdd06 	br	1018e4 <__alt_data_end+0xfff018e4>

00101970 <__clzsi2>:
  101970:	00bfffd4 	movui	r2,65535
  101974:	11000536 	bltu	r2,r4,10198c <__clzsi2+0x1c>
  101978:	00803fc4 	movi	r2,255
  10197c:	11000f36 	bltu	r2,r4,1019bc <__clzsi2+0x4c>
  101980:	00800804 	movi	r2,32
  101984:	0007883a 	mov	r3,zero
  101988:	00000506 	br	1019a0 <__clzsi2+0x30>
  10198c:	00804034 	movhi	r2,256
  101990:	10bfffc4 	addi	r2,r2,-1
  101994:	11000c2e 	bgeu	r2,r4,1019c8 <__clzsi2+0x58>
  101998:	00800204 	movi	r2,8
  10199c:	00c00604 	movi	r3,24
  1019a0:	20c8d83a 	srl	r4,r4,r3
  1019a4:	00c00474 	movhi	r3,17
  1019a8:	18c0f604 	addi	r3,r3,984
  1019ac:	1909883a 	add	r4,r3,r4
  1019b0:	20c00003 	ldbu	r3,0(r4)
  1019b4:	10c5c83a 	sub	r2,r2,r3
  1019b8:	f800283a 	ret
  1019bc:	00800604 	movi	r2,24
  1019c0:	00c00204 	movi	r3,8
  1019c4:	003ff606 	br	1019a0 <__alt_data_end+0xfff019a0>
  1019c8:	00800404 	movi	r2,16
  1019cc:	1007883a 	mov	r3,r2
  1019d0:	003ff306 	br	1019a0 <__alt_data_end+0xfff019a0>

001019d4 <_printf_r>:
  1019d4:	defffd04 	addi	sp,sp,-12
  1019d8:	2805883a 	mov	r2,r5
  1019dc:	dfc00015 	stw	ra,0(sp)
  1019e0:	d9800115 	stw	r6,4(sp)
  1019e4:	d9c00215 	stw	r7,8(sp)
  1019e8:	21400217 	ldw	r5,8(r4)
  1019ec:	d9c00104 	addi	r7,sp,4
  1019f0:	100d883a 	mov	r6,r2
  1019f4:	0101a400 	call	101a40 <___vfprintf_internal_r>
  1019f8:	dfc00017 	ldw	ra,0(sp)
  1019fc:	dec00304 	addi	sp,sp,12
  101a00:	f800283a 	ret

00101a04 <printf>:
  101a04:	defffc04 	addi	sp,sp,-16
  101a08:	dfc00015 	stw	ra,0(sp)
  101a0c:	d9400115 	stw	r5,4(sp)
  101a10:	d9800215 	stw	r6,8(sp)
  101a14:	d9c00315 	stw	r7,12(sp)
  101a18:	00800474 	movhi	r2,17
  101a1c:	1085ac04 	addi	r2,r2,5808
  101a20:	10800017 	ldw	r2,0(r2)
  101a24:	200b883a 	mov	r5,r4
  101a28:	d9800104 	addi	r6,sp,4
  101a2c:	11000217 	ldw	r4,8(r2)
  101a30:	0103c380 	call	103c38 <__vfprintf_internal>
  101a34:	dfc00017 	ldw	ra,0(sp)
  101a38:	dec00404 	addi	sp,sp,16
  101a3c:	f800283a 	ret

00101a40 <___vfprintf_internal_r>:
  101a40:	deffb804 	addi	sp,sp,-288
  101a44:	dfc04715 	stw	ra,284(sp)
  101a48:	ddc04515 	stw	r23,276(sp)
  101a4c:	dd404315 	stw	r21,268(sp)
  101a50:	d9002c15 	stw	r4,176(sp)
  101a54:	282f883a 	mov	r23,r5
  101a58:	302b883a 	mov	r21,r6
  101a5c:	d9c02d15 	stw	r7,180(sp)
  101a60:	df004615 	stw	fp,280(sp)
  101a64:	dd804415 	stw	r22,272(sp)
  101a68:	dd004215 	stw	r20,264(sp)
  101a6c:	dcc04115 	stw	r19,260(sp)
  101a70:	dc804015 	stw	r18,256(sp)
  101a74:	dc403f15 	stw	r17,252(sp)
  101a78:	dc003e15 	stw	r16,248(sp)
  101a7c:	010639c0 	call	10639c <_localeconv_r>
  101a80:	10800017 	ldw	r2,0(r2)
  101a84:	1009883a 	mov	r4,r2
  101a88:	d8803415 	stw	r2,208(sp)
  101a8c:	01083c40 	call	1083c4 <strlen>
  101a90:	d8803715 	stw	r2,220(sp)
  101a94:	d8802c17 	ldw	r2,176(sp)
  101a98:	10000226 	beq	r2,zero,101aa4 <___vfprintf_internal_r+0x64>
  101a9c:	10800e17 	ldw	r2,56(r2)
  101aa0:	1000f926 	beq	r2,zero,101e88 <___vfprintf_internal_r+0x448>
  101aa4:	b880030b 	ldhu	r2,12(r23)
  101aa8:	10c8000c 	andi	r3,r2,8192
  101aac:	1800061e 	bne	r3,zero,101ac8 <___vfprintf_internal_r+0x88>
  101ab0:	b9001917 	ldw	r4,100(r23)
  101ab4:	00f7ffc4 	movi	r3,-8193
  101ab8:	10880014 	ori	r2,r2,8192
  101abc:	20c6703a 	and	r3,r4,r3
  101ac0:	b880030d 	sth	r2,12(r23)
  101ac4:	b8c01915 	stw	r3,100(r23)
  101ac8:	10c0020c 	andi	r3,r2,8
  101acc:	1800c126 	beq	r3,zero,101dd4 <___vfprintf_internal_r+0x394>
  101ad0:	b8c00417 	ldw	r3,16(r23)
  101ad4:	1800bf26 	beq	r3,zero,101dd4 <___vfprintf_internal_r+0x394>
  101ad8:	1080068c 	andi	r2,r2,26
  101adc:	00c00284 	movi	r3,10
  101ae0:	10c0c426 	beq	r2,r3,101df4 <___vfprintf_internal_r+0x3b4>
  101ae4:	d8c00404 	addi	r3,sp,16
  101ae8:	05000474 	movhi	r20,17
  101aec:	d9001e04 	addi	r4,sp,120
  101af0:	a5014684 	addi	r20,r20,1306
  101af4:	d8c01e15 	stw	r3,120(sp)
  101af8:	d8002015 	stw	zero,128(sp)
  101afc:	d8001f15 	stw	zero,124(sp)
  101b00:	d8003315 	stw	zero,204(sp)
  101b04:	d8003615 	stw	zero,216(sp)
  101b08:	d8003815 	stw	zero,224(sp)
  101b0c:	1811883a 	mov	r8,r3
  101b10:	d8003915 	stw	zero,228(sp)
  101b14:	d8003a15 	stw	zero,232(sp)
  101b18:	d8002f15 	stw	zero,188(sp)
  101b1c:	d9002815 	stw	r4,160(sp)
  101b20:	a8800007 	ldb	r2,0(r21)
  101b24:	10027b26 	beq	r2,zero,102514 <___vfprintf_internal_r+0xad4>
  101b28:	00c00944 	movi	r3,37
  101b2c:	a821883a 	mov	r16,r21
  101b30:	10c0021e 	bne	r2,r3,101b3c <___vfprintf_internal_r+0xfc>
  101b34:	00001406 	br	101b88 <___vfprintf_internal_r+0x148>
  101b38:	10c00326 	beq	r2,r3,101b48 <___vfprintf_internal_r+0x108>
  101b3c:	84000044 	addi	r16,r16,1
  101b40:	80800007 	ldb	r2,0(r16)
  101b44:	103ffc1e 	bne	r2,zero,101b38 <__alt_data_end+0xfff01b38>
  101b48:	8563c83a 	sub	r17,r16,r21
  101b4c:	88000e26 	beq	r17,zero,101b88 <___vfprintf_internal_r+0x148>
  101b50:	d8c02017 	ldw	r3,128(sp)
  101b54:	d8801f17 	ldw	r2,124(sp)
  101b58:	45400015 	stw	r21,0(r8)
  101b5c:	1c47883a 	add	r3,r3,r17
  101b60:	10800044 	addi	r2,r2,1
  101b64:	d8c02015 	stw	r3,128(sp)
  101b68:	44400115 	stw	r17,4(r8)
  101b6c:	d8801f15 	stw	r2,124(sp)
  101b70:	00c001c4 	movi	r3,7
  101b74:	1880a716 	blt	r3,r2,101e14 <___vfprintf_internal_r+0x3d4>
  101b78:	42000204 	addi	r8,r8,8
  101b7c:	d9402f17 	ldw	r5,188(sp)
  101b80:	2c4b883a 	add	r5,r5,r17
  101b84:	d9402f15 	stw	r5,188(sp)
  101b88:	80800007 	ldb	r2,0(r16)
  101b8c:	1000a826 	beq	r2,zero,101e30 <___vfprintf_internal_r+0x3f0>
  101b90:	84400047 	ldb	r17,1(r16)
  101b94:	00bfffc4 	movi	r2,-1
  101b98:	85400044 	addi	r21,r16,1
  101b9c:	d8002785 	stb	zero,158(sp)
  101ba0:	0007883a 	mov	r3,zero
  101ba4:	000f883a 	mov	r7,zero
  101ba8:	d8802915 	stw	r2,164(sp)
  101bac:	d8003115 	stw	zero,196(sp)
  101bb0:	0025883a 	mov	r18,zero
  101bb4:	01401604 	movi	r5,88
  101bb8:	01800244 	movi	r6,9
  101bbc:	02800a84 	movi	r10,42
  101bc0:	02401b04 	movi	r9,108
  101bc4:	ad400044 	addi	r21,r21,1
  101bc8:	88bff804 	addi	r2,r17,-32
  101bcc:	28830436 	bltu	r5,r2,1027e0 <___vfprintf_internal_r+0xda0>
  101bd0:	100490ba 	slli	r2,r2,2
  101bd4:	01000434 	movhi	r4,16
  101bd8:	2106fa04 	addi	r4,r4,7144
  101bdc:	1105883a 	add	r2,r2,r4
  101be0:	10800017 	ldw	r2,0(r2)
  101be4:	1000683a 	jmp	r2
  101be8:	00102700 	call	10270 <__alt_mem_onchip_memory2-0xefd90>
  101bec:	001027e0 	cmpeqi	zero,zero,16543
  101bf0:	001027e0 	cmpeqi	zero,zero,16543
  101bf4:	00102720 	cmpeqi	zero,zero,16540
  101bf8:	001027e0 	cmpeqi	zero,zero,16543
  101bfc:	001027e0 	cmpeqi	zero,zero,16543
  101c00:	001027e0 	cmpeqi	zero,zero,16543
  101c04:	001027e0 	cmpeqi	zero,zero,16543
  101c08:	001027e0 	cmpeqi	zero,zero,16543
  101c0c:	001027e0 	cmpeqi	zero,zero,16543
  101c10:	00101e94 	movui	zero,16506
  101c14:	0010263c 	xorhi	zero,zero,16536
  101c18:	001027e0 	cmpeqi	zero,zero,16543
  101c1c:	00101d5c 	xori	zero,zero,16501
  101c20:	00101ebc 	xorhi	zero,zero,16506
  101c24:	001027e0 	cmpeqi	zero,zero,16543
  101c28:	00101efc 	xorhi	zero,zero,16507
  101c2c:	00101f08 	cmpgei	zero,zero,16508
  101c30:	00101f08 	cmpgei	zero,zero,16508
  101c34:	00101f08 	cmpgei	zero,zero,16508
  101c38:	00101f08 	cmpgei	zero,zero,16508
  101c3c:	00101f08 	cmpgei	zero,zero,16508
  101c40:	00101f08 	cmpgei	zero,zero,16508
  101c44:	00101f08 	cmpgei	zero,zero,16508
  101c48:	00101f08 	cmpgei	zero,zero,16508
  101c4c:	00101f08 	cmpgei	zero,zero,16508
  101c50:	001027e0 	cmpeqi	zero,zero,16543
  101c54:	001027e0 	cmpeqi	zero,zero,16543
  101c58:	001027e0 	cmpeqi	zero,zero,16543
  101c5c:	001027e0 	cmpeqi	zero,zero,16543
  101c60:	001027e0 	cmpeqi	zero,zero,16543
  101c64:	001027e0 	cmpeqi	zero,zero,16543
  101c68:	001027e0 	cmpeqi	zero,zero,16543
  101c6c:	001027e0 	cmpeqi	zero,zero,16543
  101c70:	001027e0 	cmpeqi	zero,zero,16543
  101c74:	001027e0 	cmpeqi	zero,zero,16543
  101c78:	00101f3c 	xorhi	zero,zero,16508
  101c7c:	00101ff8 	rdprs	zero,zero,16511
  101c80:	001027e0 	cmpeqi	zero,zero,16543
  101c84:	00101ff8 	rdprs	zero,zero,16511
  101c88:	001027e0 	cmpeqi	zero,zero,16543
  101c8c:	001027e0 	cmpeqi	zero,zero,16543
  101c90:	001027e0 	cmpeqi	zero,zero,16543
  101c94:	001027e0 	cmpeqi	zero,zero,16543
  101c98:	00102098 	cmpnei	zero,zero,16514
  101c9c:	001027e0 	cmpeqi	zero,zero,16543
  101ca0:	001027e0 	cmpeqi	zero,zero,16543
  101ca4:	001020a4 	muli	zero,zero,16514
  101ca8:	001027e0 	cmpeqi	zero,zero,16543
  101cac:	001027e0 	cmpeqi	zero,zero,16543
  101cb0:	001027e0 	cmpeqi	zero,zero,16543
  101cb4:	001027e0 	cmpeqi	zero,zero,16543
  101cb8:	001027e0 	cmpeqi	zero,zero,16543
  101cbc:	0010251c 	xori	zero,zero,16532
  101cc0:	001027e0 	cmpeqi	zero,zero,16543
  101cc4:	001027e0 	cmpeqi	zero,zero,16543
  101cc8:	0010257c 	xorhi	zero,zero,16533
  101ccc:	001027e0 	cmpeqi	zero,zero,16543
  101cd0:	001027e0 	cmpeqi	zero,zero,16543
  101cd4:	001027e0 	cmpeqi	zero,zero,16543
  101cd8:	001027e0 	cmpeqi	zero,zero,16543
  101cdc:	001027e0 	cmpeqi	zero,zero,16543
  101ce0:	001027e0 	cmpeqi	zero,zero,16543
  101ce4:	001027e0 	cmpeqi	zero,zero,16543
  101ce8:	001027e0 	cmpeqi	zero,zero,16543
  101cec:	001027e0 	cmpeqi	zero,zero,16543
  101cf0:	001027e0 	cmpeqi	zero,zero,16543
  101cf4:	0010278c 	andi	zero,zero,16542
  101cf8:	0010272c 	andhi	zero,zero,16540
  101cfc:	00101ff8 	rdprs	zero,zero,16511
  101d00:	00101ff8 	rdprs	zero,zero,16511
  101d04:	00101ff8 	rdprs	zero,zero,16511
  101d08:	0010273c 	xorhi	zero,zero,16540
  101d0c:	0010272c 	andhi	zero,zero,16540
  101d10:	001027e0 	cmpeqi	zero,zero,16543
  101d14:	001027e0 	cmpeqi	zero,zero,16543
  101d18:	00102748 	cmpgei	zero,zero,16541
  101d1c:	001027e0 	cmpeqi	zero,zero,16543
  101d20:	00102758 	cmpnei	zero,zero,16541
  101d24:	0010262c 	andhi	zero,zero,16536
  101d28:	00101d68 	cmpgeui	zero,zero,16501
  101d2c:	0010264c 	andi	zero,zero,16537
  101d30:	001027e0 	cmpeqi	zero,zero,16543
  101d34:	00102658 	cmpnei	zero,zero,16537
  101d38:	001027e0 	cmpeqi	zero,zero,16543
  101d3c:	001026b4 	movhi	zero,16538
  101d40:	001027e0 	cmpeqi	zero,zero,16543
  101d44:	001027e0 	cmpeqi	zero,zero,16543
  101d48:	001026c4 	movi	zero,16539
  101d4c:	d9003117 	ldw	r4,196(sp)
  101d50:	d8802d15 	stw	r2,180(sp)
  101d54:	0109c83a 	sub	r4,zero,r4
  101d58:	d9003115 	stw	r4,196(sp)
  101d5c:	94800114 	ori	r18,r18,4
  101d60:	ac400007 	ldb	r17,0(r21)
  101d64:	003f9706 	br	101bc4 <__alt_data_end+0xfff01bc4>
  101d68:	00800c04 	movi	r2,48
  101d6c:	d9002d17 	ldw	r4,180(sp)
  101d70:	d9402917 	ldw	r5,164(sp)
  101d74:	d8802705 	stb	r2,156(sp)
  101d78:	00801e04 	movi	r2,120
  101d7c:	d8802745 	stb	r2,157(sp)
  101d80:	d8002785 	stb	zero,158(sp)
  101d84:	20c00104 	addi	r3,r4,4
  101d88:	24c00017 	ldw	r19,0(r4)
  101d8c:	002d883a 	mov	r22,zero
  101d90:	90800094 	ori	r2,r18,2
  101d94:	28029a16 	blt	r5,zero,102800 <___vfprintf_internal_r+0xdc0>
  101d98:	00bfdfc4 	movi	r2,-129
  101d9c:	90a4703a 	and	r18,r18,r2
  101da0:	d8c02d15 	stw	r3,180(sp)
  101da4:	94800094 	ori	r18,r18,2
  101da8:	9802871e 	bne	r19,zero,1027c8 <___vfprintf_internal_r+0xd88>
  101dac:	00800474 	movhi	r2,17
  101db0:	10813f04 	addi	r2,r2,1276
  101db4:	d8803915 	stw	r2,228(sp)
  101db8:	04401e04 	movi	r17,120
  101dbc:	d8802917 	ldw	r2,164(sp)
  101dc0:	0039883a 	mov	fp,zero
  101dc4:	1001e926 	beq	r2,zero,10256c <___vfprintf_internal_r+0xb2c>
  101dc8:	0027883a 	mov	r19,zero
  101dcc:	002d883a 	mov	r22,zero
  101dd0:	00020506 	br	1025e8 <___vfprintf_internal_r+0xba8>
  101dd4:	d9002c17 	ldw	r4,176(sp)
  101dd8:	b80b883a 	mov	r5,r23
  101ddc:	0103d100 	call	103d10 <__swsetup_r>
  101de0:	1005ac1e 	bne	r2,zero,103494 <___vfprintf_internal_r+0x1a54>
  101de4:	b880030b 	ldhu	r2,12(r23)
  101de8:	00c00284 	movi	r3,10
  101dec:	1080068c 	andi	r2,r2,26
  101df0:	10ff3c1e 	bne	r2,r3,101ae4 <__alt_data_end+0xfff01ae4>
  101df4:	b880038f 	ldh	r2,14(r23)
  101df8:	103f3a16 	blt	r2,zero,101ae4 <__alt_data_end+0xfff01ae4>
  101dfc:	d9c02d17 	ldw	r7,180(sp)
  101e00:	d9002c17 	ldw	r4,176(sp)
  101e04:	a80d883a 	mov	r6,r21
  101e08:	b80b883a 	mov	r5,r23
  101e0c:	0103c540 	call	103c54 <__sbprintf>
  101e10:	00001106 	br	101e58 <___vfprintf_internal_r+0x418>
  101e14:	d9002c17 	ldw	r4,176(sp)
  101e18:	d9801e04 	addi	r6,sp,120
  101e1c:	b80b883a 	mov	r5,r23
  101e20:	01085580 	call	108558 <__sprint_r>
  101e24:	1000081e 	bne	r2,zero,101e48 <___vfprintf_internal_r+0x408>
  101e28:	da000404 	addi	r8,sp,16
  101e2c:	003f5306 	br	101b7c <__alt_data_end+0xfff01b7c>
  101e30:	d8802017 	ldw	r2,128(sp)
  101e34:	10000426 	beq	r2,zero,101e48 <___vfprintf_internal_r+0x408>
  101e38:	d9002c17 	ldw	r4,176(sp)
  101e3c:	d9801e04 	addi	r6,sp,120
  101e40:	b80b883a 	mov	r5,r23
  101e44:	01085580 	call	108558 <__sprint_r>
  101e48:	b880030b 	ldhu	r2,12(r23)
  101e4c:	1080100c 	andi	r2,r2,64
  101e50:	1005901e 	bne	r2,zero,103494 <___vfprintf_internal_r+0x1a54>
  101e54:	d8802f17 	ldw	r2,188(sp)
  101e58:	dfc04717 	ldw	ra,284(sp)
  101e5c:	df004617 	ldw	fp,280(sp)
  101e60:	ddc04517 	ldw	r23,276(sp)
  101e64:	dd804417 	ldw	r22,272(sp)
  101e68:	dd404317 	ldw	r21,268(sp)
  101e6c:	dd004217 	ldw	r20,264(sp)
  101e70:	dcc04117 	ldw	r19,260(sp)
  101e74:	dc804017 	ldw	r18,256(sp)
  101e78:	dc403f17 	ldw	r17,252(sp)
  101e7c:	dc003e17 	ldw	r16,248(sp)
  101e80:	dec04804 	addi	sp,sp,288
  101e84:	f800283a 	ret
  101e88:	d9002c17 	ldw	r4,176(sp)
  101e8c:	0105ce40 	call	105ce4 <__sinit>
  101e90:	003f0406 	br	101aa4 <__alt_data_end+0xfff01aa4>
  101e94:	d8802d17 	ldw	r2,180(sp)
  101e98:	d9002d17 	ldw	r4,180(sp)
  101e9c:	10800017 	ldw	r2,0(r2)
  101ea0:	d8803115 	stw	r2,196(sp)
  101ea4:	20800104 	addi	r2,r4,4
  101ea8:	d9003117 	ldw	r4,196(sp)
  101eac:	203fa716 	blt	r4,zero,101d4c <__alt_data_end+0xfff01d4c>
  101eb0:	d8802d15 	stw	r2,180(sp)
  101eb4:	ac400007 	ldb	r17,0(r21)
  101eb8:	003f4206 	br	101bc4 <__alt_data_end+0xfff01bc4>
  101ebc:	ac400007 	ldb	r17,0(r21)
  101ec0:	aac00044 	addi	r11,r21,1
  101ec4:	8a872826 	beq	r17,r10,103b68 <___vfprintf_internal_r+0x2128>
  101ec8:	88bff404 	addi	r2,r17,-48
  101ecc:	0009883a 	mov	r4,zero
  101ed0:	30867d36 	bltu	r6,r2,1038c8 <___vfprintf_internal_r+0x1e88>
  101ed4:	5c400007 	ldb	r17,0(r11)
  101ed8:	210002a4 	muli	r4,r4,10
  101edc:	5d400044 	addi	r21,r11,1
  101ee0:	a817883a 	mov	r11,r21
  101ee4:	2089883a 	add	r4,r4,r2
  101ee8:	88bff404 	addi	r2,r17,-48
  101eec:	30bff92e 	bgeu	r6,r2,101ed4 <__alt_data_end+0xfff01ed4>
  101ef0:	2005c916 	blt	r4,zero,103618 <___vfprintf_internal_r+0x1bd8>
  101ef4:	d9002915 	stw	r4,164(sp)
  101ef8:	003f3306 	br	101bc8 <__alt_data_end+0xfff01bc8>
  101efc:	94802014 	ori	r18,r18,128
  101f00:	ac400007 	ldb	r17,0(r21)
  101f04:	003f2f06 	br	101bc4 <__alt_data_end+0xfff01bc4>
  101f08:	a809883a 	mov	r4,r21
  101f0c:	d8003115 	stw	zero,196(sp)
  101f10:	88bff404 	addi	r2,r17,-48
  101f14:	0017883a 	mov	r11,zero
  101f18:	24400007 	ldb	r17,0(r4)
  101f1c:	5ac002a4 	muli	r11,r11,10
  101f20:	ad400044 	addi	r21,r21,1
  101f24:	a809883a 	mov	r4,r21
  101f28:	12d7883a 	add	r11,r2,r11
  101f2c:	88bff404 	addi	r2,r17,-48
  101f30:	30bff92e 	bgeu	r6,r2,101f18 <__alt_data_end+0xfff01f18>
  101f34:	dac03115 	stw	r11,196(sp)
  101f38:	003f2306 	br	101bc8 <__alt_data_end+0xfff01bc8>
  101f3c:	18c03fcc 	andi	r3,r3,255
  101f40:	18072b1e 	bne	r3,zero,103bf0 <___vfprintf_internal_r+0x21b0>
  101f44:	94800414 	ori	r18,r18,16
  101f48:	9080080c 	andi	r2,r18,32
  101f4c:	10037b26 	beq	r2,zero,102d3c <___vfprintf_internal_r+0x12fc>
  101f50:	d9402d17 	ldw	r5,180(sp)
  101f54:	28800117 	ldw	r2,4(r5)
  101f58:	2cc00017 	ldw	r19,0(r5)
  101f5c:	29400204 	addi	r5,r5,8
  101f60:	d9402d15 	stw	r5,180(sp)
  101f64:	102d883a 	mov	r22,r2
  101f68:	10044b16 	blt	r2,zero,103098 <___vfprintf_internal_r+0x1658>
  101f6c:	d9402917 	ldw	r5,164(sp)
  101f70:	df002783 	ldbu	fp,158(sp)
  101f74:	2803bc16 	blt	r5,zero,102e68 <___vfprintf_internal_r+0x1428>
  101f78:	00ffdfc4 	movi	r3,-129
  101f7c:	9d84b03a 	or	r2,r19,r22
  101f80:	90e4703a 	and	r18,r18,r3
  101f84:	10017726 	beq	r2,zero,102564 <___vfprintf_internal_r+0xb24>
  101f88:	b0038326 	beq	r22,zero,102d98 <___vfprintf_internal_r+0x1358>
  101f8c:	dc402a15 	stw	r17,168(sp)
  101f90:	dc001e04 	addi	r16,sp,120
  101f94:	b023883a 	mov	r17,r22
  101f98:	402d883a 	mov	r22,r8
  101f9c:	9809883a 	mov	r4,r19
  101fa0:	880b883a 	mov	r5,r17
  101fa4:	01800284 	movi	r6,10
  101fa8:	000f883a 	mov	r7,zero
  101fac:	010b4cc0 	call	10b4cc <__umoddi3>
  101fb0:	10800c04 	addi	r2,r2,48
  101fb4:	843fffc4 	addi	r16,r16,-1
  101fb8:	9809883a 	mov	r4,r19
  101fbc:	880b883a 	mov	r5,r17
  101fc0:	80800005 	stb	r2,0(r16)
  101fc4:	01800284 	movi	r6,10
  101fc8:	000f883a 	mov	r7,zero
  101fcc:	010af540 	call	10af54 <__udivdi3>
  101fd0:	1027883a 	mov	r19,r2
  101fd4:	10c4b03a 	or	r2,r2,r3
  101fd8:	1823883a 	mov	r17,r3
  101fdc:	103fef1e 	bne	r2,zero,101f9c <__alt_data_end+0xfff01f9c>
  101fe0:	d8c02817 	ldw	r3,160(sp)
  101fe4:	dc402a17 	ldw	r17,168(sp)
  101fe8:	b011883a 	mov	r8,r22
  101fec:	1c07c83a 	sub	r3,r3,r16
  101ff0:	d8c02e15 	stw	r3,184(sp)
  101ff4:	00005906 	br	10215c <___vfprintf_internal_r+0x71c>
  101ff8:	18c03fcc 	andi	r3,r3,255
  101ffc:	1806fa1e 	bne	r3,zero,103be8 <___vfprintf_internal_r+0x21a8>
  102000:	9080020c 	andi	r2,r18,8
  102004:	10048a26 	beq	r2,zero,103230 <___vfprintf_internal_r+0x17f0>
  102008:	d8c02d17 	ldw	r3,180(sp)
  10200c:	d9002d17 	ldw	r4,180(sp)
  102010:	d9402d17 	ldw	r5,180(sp)
  102014:	18c00017 	ldw	r3,0(r3)
  102018:	21000117 	ldw	r4,4(r4)
  10201c:	29400204 	addi	r5,r5,8
  102020:	d8c03615 	stw	r3,216(sp)
  102024:	d9003815 	stw	r4,224(sp)
  102028:	d9402d15 	stw	r5,180(sp)
  10202c:	d9003617 	ldw	r4,216(sp)
  102030:	d9403817 	ldw	r5,224(sp)
  102034:	da003d15 	stw	r8,244(sp)
  102038:	04000044 	movi	r16,1
  10203c:	01080e40 	call	1080e4 <__fpclassifyd>
  102040:	da003d17 	ldw	r8,244(sp)
  102044:	14041f1e 	bne	r2,r16,1030c4 <___vfprintf_internal_r+0x1684>
  102048:	d9003617 	ldw	r4,216(sp)
  10204c:	d9403817 	ldw	r5,224(sp)
  102050:	000d883a 	mov	r6,zero
  102054:	000f883a 	mov	r7,zero
  102058:	010ccfc0 	call	10ccfc <__ledf2>
  10205c:	da003d17 	ldw	r8,244(sp)
  102060:	1005be16 	blt	r2,zero,10375c <___vfprintf_internal_r+0x1d1c>
  102064:	df002783 	ldbu	fp,158(sp)
  102068:	008011c4 	movi	r2,71
  10206c:	1445330e 	bge	r2,r17,10353c <___vfprintf_internal_r+0x1afc>
  102070:	04000474 	movhi	r16,17
  102074:	84013704 	addi	r16,r16,1244
  102078:	00c000c4 	movi	r3,3
  10207c:	00bfdfc4 	movi	r2,-129
  102080:	d8c02a15 	stw	r3,168(sp)
  102084:	90a4703a 	and	r18,r18,r2
  102088:	d8c02e15 	stw	r3,184(sp)
  10208c:	d8002915 	stw	zero,164(sp)
  102090:	d8003215 	stw	zero,200(sp)
  102094:	00003706 	br	102174 <___vfprintf_internal_r+0x734>
  102098:	94800214 	ori	r18,r18,8
  10209c:	ac400007 	ldb	r17,0(r21)
  1020a0:	003ec806 	br	101bc4 <__alt_data_end+0xfff01bc4>
  1020a4:	18c03fcc 	andi	r3,r3,255
  1020a8:	1806db1e 	bne	r3,zero,103c18 <___vfprintf_internal_r+0x21d8>
  1020ac:	94800414 	ori	r18,r18,16
  1020b0:	9080080c 	andi	r2,r18,32
  1020b4:	1002d826 	beq	r2,zero,102c18 <___vfprintf_internal_r+0x11d8>
  1020b8:	d9402d17 	ldw	r5,180(sp)
  1020bc:	d8c02917 	ldw	r3,164(sp)
  1020c0:	d8002785 	stb	zero,158(sp)
  1020c4:	28800204 	addi	r2,r5,8
  1020c8:	2cc00017 	ldw	r19,0(r5)
  1020cc:	2d800117 	ldw	r22,4(r5)
  1020d0:	18048f16 	blt	r3,zero,103310 <___vfprintf_internal_r+0x18d0>
  1020d4:	013fdfc4 	movi	r4,-129
  1020d8:	9d86b03a 	or	r3,r19,r22
  1020dc:	d8802d15 	stw	r2,180(sp)
  1020e0:	9124703a 	and	r18,r18,r4
  1020e4:	1802d91e 	bne	r3,zero,102c4c <___vfprintf_internal_r+0x120c>
  1020e8:	d8c02917 	ldw	r3,164(sp)
  1020ec:	0039883a 	mov	fp,zero
  1020f0:	1805c326 	beq	r3,zero,103800 <___vfprintf_internal_r+0x1dc0>
  1020f4:	0027883a 	mov	r19,zero
  1020f8:	002d883a 	mov	r22,zero
  1020fc:	dc001e04 	addi	r16,sp,120
  102100:	9806d0fa 	srli	r3,r19,3
  102104:	b008977a 	slli	r4,r22,29
  102108:	b02cd0fa 	srli	r22,r22,3
  10210c:	9cc001cc 	andi	r19,r19,7
  102110:	98800c04 	addi	r2,r19,48
  102114:	843fffc4 	addi	r16,r16,-1
  102118:	20e6b03a 	or	r19,r4,r3
  10211c:	80800005 	stb	r2,0(r16)
  102120:	9d86b03a 	or	r3,r19,r22
  102124:	183ff61e 	bne	r3,zero,102100 <__alt_data_end+0xfff02100>
  102128:	90c0004c 	andi	r3,r18,1
  10212c:	18013b26 	beq	r3,zero,10261c <___vfprintf_internal_r+0xbdc>
  102130:	10803fcc 	andi	r2,r2,255
  102134:	1080201c 	xori	r2,r2,128
  102138:	10bfe004 	addi	r2,r2,-128
  10213c:	00c00c04 	movi	r3,48
  102140:	10c13626 	beq	r2,r3,10261c <___vfprintf_internal_r+0xbdc>
  102144:	80ffffc5 	stb	r3,-1(r16)
  102148:	d8c02817 	ldw	r3,160(sp)
  10214c:	80bfffc4 	addi	r2,r16,-1
  102150:	1021883a 	mov	r16,r2
  102154:	1887c83a 	sub	r3,r3,r2
  102158:	d8c02e15 	stw	r3,184(sp)
  10215c:	d8802e17 	ldw	r2,184(sp)
  102160:	d9002917 	ldw	r4,164(sp)
  102164:	1100010e 	bge	r2,r4,10216c <___vfprintf_internal_r+0x72c>
  102168:	2005883a 	mov	r2,r4
  10216c:	d8802a15 	stw	r2,168(sp)
  102170:	d8003215 	stw	zero,200(sp)
  102174:	e7003fcc 	andi	fp,fp,255
  102178:	e700201c 	xori	fp,fp,128
  10217c:	e73fe004 	addi	fp,fp,-128
  102180:	e0000326 	beq	fp,zero,102190 <___vfprintf_internal_r+0x750>
  102184:	d8c02a17 	ldw	r3,168(sp)
  102188:	18c00044 	addi	r3,r3,1
  10218c:	d8c02a15 	stw	r3,168(sp)
  102190:	90c0008c 	andi	r3,r18,2
  102194:	d8c02b15 	stw	r3,172(sp)
  102198:	18000326 	beq	r3,zero,1021a8 <___vfprintf_internal_r+0x768>
  10219c:	d8c02a17 	ldw	r3,168(sp)
  1021a0:	18c00084 	addi	r3,r3,2
  1021a4:	d8c02a15 	stw	r3,168(sp)
  1021a8:	90c0210c 	andi	r3,r18,132
  1021ac:	d8c03015 	stw	r3,192(sp)
  1021b0:	1801a31e 	bne	r3,zero,102840 <___vfprintf_internal_r+0xe00>
  1021b4:	d9003117 	ldw	r4,196(sp)
  1021b8:	d8c02a17 	ldw	r3,168(sp)
  1021bc:	20e7c83a 	sub	r19,r4,r3
  1021c0:	04c19f0e 	bge	zero,r19,102840 <___vfprintf_internal_r+0xe00>
  1021c4:	02400404 	movi	r9,16
  1021c8:	d8c02017 	ldw	r3,128(sp)
  1021cc:	d8801f17 	ldw	r2,124(sp)
  1021d0:	4cc50d0e 	bge	r9,r19,103608 <___vfprintf_internal_r+0x1bc8>
  1021d4:	01400474 	movhi	r5,17
  1021d8:	29414a84 	addi	r5,r5,1322
  1021dc:	dc403b15 	stw	r17,236(sp)
  1021e0:	d9403515 	stw	r5,212(sp)
  1021e4:	9823883a 	mov	r17,r19
  1021e8:	482d883a 	mov	r22,r9
  1021ec:	9027883a 	mov	r19,r18
  1021f0:	070001c4 	movi	fp,7
  1021f4:	8025883a 	mov	r18,r16
  1021f8:	dc002c17 	ldw	r16,176(sp)
  1021fc:	00000306 	br	10220c <___vfprintf_internal_r+0x7cc>
  102200:	8c7ffc04 	addi	r17,r17,-16
  102204:	42000204 	addi	r8,r8,8
  102208:	b440130e 	bge	r22,r17,102258 <___vfprintf_internal_r+0x818>
  10220c:	01000474 	movhi	r4,17
  102210:	18c00404 	addi	r3,r3,16
  102214:	10800044 	addi	r2,r2,1
  102218:	21014a84 	addi	r4,r4,1322
  10221c:	41000015 	stw	r4,0(r8)
  102220:	45800115 	stw	r22,4(r8)
  102224:	d8c02015 	stw	r3,128(sp)
  102228:	d8801f15 	stw	r2,124(sp)
  10222c:	e0bff40e 	bge	fp,r2,102200 <__alt_data_end+0xfff02200>
  102230:	d9801e04 	addi	r6,sp,120
  102234:	b80b883a 	mov	r5,r23
  102238:	8009883a 	mov	r4,r16
  10223c:	01085580 	call	108558 <__sprint_r>
  102240:	103f011e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102244:	8c7ffc04 	addi	r17,r17,-16
  102248:	d8c02017 	ldw	r3,128(sp)
  10224c:	d8801f17 	ldw	r2,124(sp)
  102250:	da000404 	addi	r8,sp,16
  102254:	b47fed16 	blt	r22,r17,10220c <__alt_data_end+0xfff0220c>
  102258:	9021883a 	mov	r16,r18
  10225c:	9825883a 	mov	r18,r19
  102260:	8827883a 	mov	r19,r17
  102264:	dc403b17 	ldw	r17,236(sp)
  102268:	d9403517 	ldw	r5,212(sp)
  10226c:	98c7883a 	add	r3,r19,r3
  102270:	10800044 	addi	r2,r2,1
  102274:	41400015 	stw	r5,0(r8)
  102278:	44c00115 	stw	r19,4(r8)
  10227c:	d8c02015 	stw	r3,128(sp)
  102280:	d8801f15 	stw	r2,124(sp)
  102284:	010001c4 	movi	r4,7
  102288:	2082a316 	blt	r4,r2,102d18 <___vfprintf_internal_r+0x12d8>
  10228c:	df002787 	ldb	fp,158(sp)
  102290:	42000204 	addi	r8,r8,8
  102294:	e0000c26 	beq	fp,zero,1022c8 <___vfprintf_internal_r+0x888>
  102298:	d8801f17 	ldw	r2,124(sp)
  10229c:	d9002784 	addi	r4,sp,158
  1022a0:	18c00044 	addi	r3,r3,1
  1022a4:	10800044 	addi	r2,r2,1
  1022a8:	41000015 	stw	r4,0(r8)
  1022ac:	01000044 	movi	r4,1
  1022b0:	41000115 	stw	r4,4(r8)
  1022b4:	d8c02015 	stw	r3,128(sp)
  1022b8:	d8801f15 	stw	r2,124(sp)
  1022bc:	010001c4 	movi	r4,7
  1022c0:	20823c16 	blt	r4,r2,102bb4 <___vfprintf_internal_r+0x1174>
  1022c4:	42000204 	addi	r8,r8,8
  1022c8:	d8802b17 	ldw	r2,172(sp)
  1022cc:	10000c26 	beq	r2,zero,102300 <___vfprintf_internal_r+0x8c0>
  1022d0:	d8801f17 	ldw	r2,124(sp)
  1022d4:	d9002704 	addi	r4,sp,156
  1022d8:	18c00084 	addi	r3,r3,2
  1022dc:	10800044 	addi	r2,r2,1
  1022e0:	41000015 	stw	r4,0(r8)
  1022e4:	01000084 	movi	r4,2
  1022e8:	41000115 	stw	r4,4(r8)
  1022ec:	d8c02015 	stw	r3,128(sp)
  1022f0:	d8801f15 	stw	r2,124(sp)
  1022f4:	010001c4 	movi	r4,7
  1022f8:	20823616 	blt	r4,r2,102bd4 <___vfprintf_internal_r+0x1194>
  1022fc:	42000204 	addi	r8,r8,8
  102300:	d9003017 	ldw	r4,192(sp)
  102304:	00802004 	movi	r2,128
  102308:	20819926 	beq	r4,r2,102970 <___vfprintf_internal_r+0xf30>
  10230c:	d9402917 	ldw	r5,164(sp)
  102310:	d8802e17 	ldw	r2,184(sp)
  102314:	28adc83a 	sub	r22,r5,r2
  102318:	0580310e 	bge	zero,r22,1023e0 <___vfprintf_internal_r+0x9a0>
  10231c:	07000404 	movi	fp,16
  102320:	d8801f17 	ldw	r2,124(sp)
  102324:	e584140e 	bge	fp,r22,103378 <___vfprintf_internal_r+0x1938>
  102328:	01400474 	movhi	r5,17
  10232c:	29414684 	addi	r5,r5,1306
  102330:	dc402915 	stw	r17,164(sp)
  102334:	d9402b15 	stw	r5,172(sp)
  102338:	b023883a 	mov	r17,r22
  10233c:	04c001c4 	movi	r19,7
  102340:	a82d883a 	mov	r22,r21
  102344:	902b883a 	mov	r21,r18
  102348:	8025883a 	mov	r18,r16
  10234c:	dc002c17 	ldw	r16,176(sp)
  102350:	00000306 	br	102360 <___vfprintf_internal_r+0x920>
  102354:	8c7ffc04 	addi	r17,r17,-16
  102358:	42000204 	addi	r8,r8,8
  10235c:	e440110e 	bge	fp,r17,1023a4 <___vfprintf_internal_r+0x964>
  102360:	18c00404 	addi	r3,r3,16
  102364:	10800044 	addi	r2,r2,1
  102368:	45000015 	stw	r20,0(r8)
  10236c:	47000115 	stw	fp,4(r8)
  102370:	d8c02015 	stw	r3,128(sp)
  102374:	d8801f15 	stw	r2,124(sp)
  102378:	98bff60e 	bge	r19,r2,102354 <__alt_data_end+0xfff02354>
  10237c:	d9801e04 	addi	r6,sp,120
  102380:	b80b883a 	mov	r5,r23
  102384:	8009883a 	mov	r4,r16
  102388:	01085580 	call	108558 <__sprint_r>
  10238c:	103eae1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102390:	8c7ffc04 	addi	r17,r17,-16
  102394:	d8c02017 	ldw	r3,128(sp)
  102398:	d8801f17 	ldw	r2,124(sp)
  10239c:	da000404 	addi	r8,sp,16
  1023a0:	e47fef16 	blt	fp,r17,102360 <__alt_data_end+0xfff02360>
  1023a4:	9021883a 	mov	r16,r18
  1023a8:	a825883a 	mov	r18,r21
  1023ac:	b02b883a 	mov	r21,r22
  1023b0:	882d883a 	mov	r22,r17
  1023b4:	dc402917 	ldw	r17,164(sp)
  1023b8:	d9002b17 	ldw	r4,172(sp)
  1023bc:	1d87883a 	add	r3,r3,r22
  1023c0:	10800044 	addi	r2,r2,1
  1023c4:	41000015 	stw	r4,0(r8)
  1023c8:	45800115 	stw	r22,4(r8)
  1023cc:	d8c02015 	stw	r3,128(sp)
  1023d0:	d8801f15 	stw	r2,124(sp)
  1023d4:	010001c4 	movi	r4,7
  1023d8:	2081ee16 	blt	r4,r2,102b94 <___vfprintf_internal_r+0x1154>
  1023dc:	42000204 	addi	r8,r8,8
  1023e0:	9080400c 	andi	r2,r18,256
  1023e4:	1001181e 	bne	r2,zero,102848 <___vfprintf_internal_r+0xe08>
  1023e8:	d9402e17 	ldw	r5,184(sp)
  1023ec:	d8801f17 	ldw	r2,124(sp)
  1023f0:	44000015 	stw	r16,0(r8)
  1023f4:	1947883a 	add	r3,r3,r5
  1023f8:	10800044 	addi	r2,r2,1
  1023fc:	41400115 	stw	r5,4(r8)
  102400:	d8c02015 	stw	r3,128(sp)
  102404:	d8801f15 	stw	r2,124(sp)
  102408:	010001c4 	movi	r4,7
  10240c:	2081d316 	blt	r4,r2,102b5c <___vfprintf_internal_r+0x111c>
  102410:	42000204 	addi	r8,r8,8
  102414:	9480010c 	andi	r18,r18,4
  102418:	90003226 	beq	r18,zero,1024e4 <___vfprintf_internal_r+0xaa4>
  10241c:	d9403117 	ldw	r5,196(sp)
  102420:	d8802a17 	ldw	r2,168(sp)
  102424:	28a1c83a 	sub	r16,r5,r2
  102428:	04002e0e 	bge	zero,r16,1024e4 <___vfprintf_internal_r+0xaa4>
  10242c:	04400404 	movi	r17,16
  102430:	d8801f17 	ldw	r2,124(sp)
  102434:	8c04a20e 	bge	r17,r16,1036c0 <___vfprintf_internal_r+0x1c80>
  102438:	01400474 	movhi	r5,17
  10243c:	29414a84 	addi	r5,r5,1322
  102440:	d9403515 	stw	r5,212(sp)
  102444:	048001c4 	movi	r18,7
  102448:	dcc02c17 	ldw	r19,176(sp)
  10244c:	00000306 	br	10245c <___vfprintf_internal_r+0xa1c>
  102450:	843ffc04 	addi	r16,r16,-16
  102454:	42000204 	addi	r8,r8,8
  102458:	8c00130e 	bge	r17,r16,1024a8 <___vfprintf_internal_r+0xa68>
  10245c:	01000474 	movhi	r4,17
  102460:	18c00404 	addi	r3,r3,16
  102464:	10800044 	addi	r2,r2,1
  102468:	21014a84 	addi	r4,r4,1322
  10246c:	41000015 	stw	r4,0(r8)
  102470:	44400115 	stw	r17,4(r8)
  102474:	d8c02015 	stw	r3,128(sp)
  102478:	d8801f15 	stw	r2,124(sp)
  10247c:	90bff40e 	bge	r18,r2,102450 <__alt_data_end+0xfff02450>
  102480:	d9801e04 	addi	r6,sp,120
  102484:	b80b883a 	mov	r5,r23
  102488:	9809883a 	mov	r4,r19
  10248c:	01085580 	call	108558 <__sprint_r>
  102490:	103e6d1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102494:	843ffc04 	addi	r16,r16,-16
  102498:	d8c02017 	ldw	r3,128(sp)
  10249c:	d8801f17 	ldw	r2,124(sp)
  1024a0:	da000404 	addi	r8,sp,16
  1024a4:	8c3fed16 	blt	r17,r16,10245c <__alt_data_end+0xfff0245c>
  1024a8:	d9403517 	ldw	r5,212(sp)
  1024ac:	1c07883a 	add	r3,r3,r16
  1024b0:	10800044 	addi	r2,r2,1
  1024b4:	41400015 	stw	r5,0(r8)
  1024b8:	44000115 	stw	r16,4(r8)
  1024bc:	d8c02015 	stw	r3,128(sp)
  1024c0:	d8801f15 	stw	r2,124(sp)
  1024c4:	010001c4 	movi	r4,7
  1024c8:	2080060e 	bge	r4,r2,1024e4 <___vfprintf_internal_r+0xaa4>
  1024cc:	d9002c17 	ldw	r4,176(sp)
  1024d0:	d9801e04 	addi	r6,sp,120
  1024d4:	b80b883a 	mov	r5,r23
  1024d8:	01085580 	call	108558 <__sprint_r>
  1024dc:	103e5a1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  1024e0:	d8c02017 	ldw	r3,128(sp)
  1024e4:	d8803117 	ldw	r2,196(sp)
  1024e8:	d9002a17 	ldw	r4,168(sp)
  1024ec:	1100010e 	bge	r2,r4,1024f4 <___vfprintf_internal_r+0xab4>
  1024f0:	2005883a 	mov	r2,r4
  1024f4:	d9402f17 	ldw	r5,188(sp)
  1024f8:	288b883a 	add	r5,r5,r2
  1024fc:	d9402f15 	stw	r5,188(sp)
  102500:	18019e1e 	bne	r3,zero,102b7c <___vfprintf_internal_r+0x113c>
  102504:	a8800007 	ldb	r2,0(r21)
  102508:	d8001f15 	stw	zero,124(sp)
  10250c:	da000404 	addi	r8,sp,16
  102510:	103d851e 	bne	r2,zero,101b28 <__alt_data_end+0xfff01b28>
  102514:	a821883a 	mov	r16,r21
  102518:	003d9b06 	br	101b88 <__alt_data_end+0xfff01b88>
  10251c:	18c03fcc 	andi	r3,r3,255
  102520:	1805c11e 	bne	r3,zero,103c28 <___vfprintf_internal_r+0x21e8>
  102524:	94800414 	ori	r18,r18,16
  102528:	9080080c 	andi	r2,r18,32
  10252c:	10020c26 	beq	r2,zero,102d60 <___vfprintf_internal_r+0x1320>
  102530:	d8802d17 	ldw	r2,180(sp)
  102534:	d9002917 	ldw	r4,164(sp)
  102538:	d8002785 	stb	zero,158(sp)
  10253c:	10c00204 	addi	r3,r2,8
  102540:	14c00017 	ldw	r19,0(r2)
  102544:	15800117 	ldw	r22,4(r2)
  102548:	20040f16 	blt	r4,zero,103588 <___vfprintf_internal_r+0x1b48>
  10254c:	013fdfc4 	movi	r4,-129
  102550:	9d84b03a 	or	r2,r19,r22
  102554:	d8c02d15 	stw	r3,180(sp)
  102558:	9124703a 	and	r18,r18,r4
  10255c:	0039883a 	mov	fp,zero
  102560:	103e891e 	bne	r2,zero,101f88 <__alt_data_end+0xfff01f88>
  102564:	d9002917 	ldw	r4,164(sp)
  102568:	2002c11e 	bne	r4,zero,103070 <___vfprintf_internal_r+0x1630>
  10256c:	d8002915 	stw	zero,164(sp)
  102570:	d8002e15 	stw	zero,184(sp)
  102574:	dc001e04 	addi	r16,sp,120
  102578:	003ef806 	br	10215c <__alt_data_end+0xfff0215c>
  10257c:	18c03fcc 	andi	r3,r3,255
  102580:	18059d1e 	bne	r3,zero,103bf8 <___vfprintf_internal_r+0x21b8>
  102584:	01400474 	movhi	r5,17
  102588:	29413a04 	addi	r5,r5,1256
  10258c:	d9403915 	stw	r5,228(sp)
  102590:	9080080c 	andi	r2,r18,32
  102594:	10005226 	beq	r2,zero,1026e0 <___vfprintf_internal_r+0xca0>
  102598:	d8802d17 	ldw	r2,180(sp)
  10259c:	14c00017 	ldw	r19,0(r2)
  1025a0:	15800117 	ldw	r22,4(r2)
  1025a4:	10800204 	addi	r2,r2,8
  1025a8:	d8802d15 	stw	r2,180(sp)
  1025ac:	9080004c 	andi	r2,r18,1
  1025b0:	10019026 	beq	r2,zero,102bf4 <___vfprintf_internal_r+0x11b4>
  1025b4:	9d84b03a 	or	r2,r19,r22
  1025b8:	10036926 	beq	r2,zero,103360 <___vfprintf_internal_r+0x1920>
  1025bc:	d8c02917 	ldw	r3,164(sp)
  1025c0:	00800c04 	movi	r2,48
  1025c4:	d8802705 	stb	r2,156(sp)
  1025c8:	dc402745 	stb	r17,157(sp)
  1025cc:	d8002785 	stb	zero,158(sp)
  1025d0:	90800094 	ori	r2,r18,2
  1025d4:	18045d16 	blt	r3,zero,10374c <___vfprintf_internal_r+0x1d0c>
  1025d8:	00bfdfc4 	movi	r2,-129
  1025dc:	90a4703a 	and	r18,r18,r2
  1025e0:	94800094 	ori	r18,r18,2
  1025e4:	0039883a 	mov	fp,zero
  1025e8:	d9003917 	ldw	r4,228(sp)
  1025ec:	dc001e04 	addi	r16,sp,120
  1025f0:	988003cc 	andi	r2,r19,15
  1025f4:	b006973a 	slli	r3,r22,28
  1025f8:	2085883a 	add	r2,r4,r2
  1025fc:	9826d13a 	srli	r19,r19,4
  102600:	10800003 	ldbu	r2,0(r2)
  102604:	b02cd13a 	srli	r22,r22,4
  102608:	843fffc4 	addi	r16,r16,-1
  10260c:	1ce6b03a 	or	r19,r3,r19
  102610:	80800005 	stb	r2,0(r16)
  102614:	9d84b03a 	or	r2,r19,r22
  102618:	103ff51e 	bne	r2,zero,1025f0 <__alt_data_end+0xfff025f0>
  10261c:	d8c02817 	ldw	r3,160(sp)
  102620:	1c07c83a 	sub	r3,r3,r16
  102624:	d8c02e15 	stw	r3,184(sp)
  102628:	003ecc06 	br	10215c <__alt_data_end+0xfff0215c>
  10262c:	18c03fcc 	andi	r3,r3,255
  102630:	183e9f26 	beq	r3,zero,1020b0 <__alt_data_end+0xfff020b0>
  102634:	d9c02785 	stb	r7,158(sp)
  102638:	003e9d06 	br	1020b0 <__alt_data_end+0xfff020b0>
  10263c:	00c00044 	movi	r3,1
  102640:	01c00ac4 	movi	r7,43
  102644:	ac400007 	ldb	r17,0(r21)
  102648:	003d5e06 	br	101bc4 <__alt_data_end+0xfff01bc4>
  10264c:	94800814 	ori	r18,r18,32
  102650:	ac400007 	ldb	r17,0(r21)
  102654:	003d5b06 	br	101bc4 <__alt_data_end+0xfff01bc4>
  102658:	d8c02d17 	ldw	r3,180(sp)
  10265c:	d8002785 	stb	zero,158(sp)
  102660:	1c000017 	ldw	r16,0(r3)
  102664:	1cc00104 	addi	r19,r3,4
  102668:	80041926 	beq	r16,zero,1036d0 <___vfprintf_internal_r+0x1c90>
  10266c:	d9002917 	ldw	r4,164(sp)
  102670:	2003d016 	blt	r4,zero,1035b4 <___vfprintf_internal_r+0x1b74>
  102674:	200d883a 	mov	r6,r4
  102678:	000b883a 	mov	r5,zero
  10267c:	8009883a 	mov	r4,r16
  102680:	da003d15 	stw	r8,244(sp)
  102684:	0106d940 	call	106d94 <memchr>
  102688:	da003d17 	ldw	r8,244(sp)
  10268c:	10045426 	beq	r2,zero,1037e0 <___vfprintf_internal_r+0x1da0>
  102690:	1405c83a 	sub	r2,r2,r16
  102694:	d8802e15 	stw	r2,184(sp)
  102698:	1003cc16 	blt	r2,zero,1035cc <___vfprintf_internal_r+0x1b8c>
  10269c:	df002783 	ldbu	fp,158(sp)
  1026a0:	d8802a15 	stw	r2,168(sp)
  1026a4:	dcc02d15 	stw	r19,180(sp)
  1026a8:	d8002915 	stw	zero,164(sp)
  1026ac:	d8003215 	stw	zero,200(sp)
  1026b0:	003eb006 	br	102174 <__alt_data_end+0xfff02174>
  1026b4:	18c03fcc 	andi	r3,r3,255
  1026b8:	183f9b26 	beq	r3,zero,102528 <__alt_data_end+0xfff02528>
  1026bc:	d9c02785 	stb	r7,158(sp)
  1026c0:	003f9906 	br	102528 <__alt_data_end+0xfff02528>
  1026c4:	18c03fcc 	andi	r3,r3,255
  1026c8:	1805551e 	bne	r3,zero,103c20 <___vfprintf_internal_r+0x21e0>
  1026cc:	01400474 	movhi	r5,17
  1026d0:	29413f04 	addi	r5,r5,1276
  1026d4:	d9403915 	stw	r5,228(sp)
  1026d8:	9080080c 	andi	r2,r18,32
  1026dc:	103fae1e 	bne	r2,zero,102598 <__alt_data_end+0xfff02598>
  1026e0:	9080040c 	andi	r2,r18,16
  1026e4:	1002de26 	beq	r2,zero,103260 <___vfprintf_internal_r+0x1820>
  1026e8:	d8c02d17 	ldw	r3,180(sp)
  1026ec:	002d883a 	mov	r22,zero
  1026f0:	1cc00017 	ldw	r19,0(r3)
  1026f4:	18c00104 	addi	r3,r3,4
  1026f8:	d8c02d15 	stw	r3,180(sp)
  1026fc:	003fab06 	br	1025ac <__alt_data_end+0xfff025ac>
  102700:	38803fcc 	andi	r2,r7,255
  102704:	1080201c 	xori	r2,r2,128
  102708:	10bfe004 	addi	r2,r2,-128
  10270c:	1002d21e 	bne	r2,zero,103258 <___vfprintf_internal_r+0x1818>
  102710:	00c00044 	movi	r3,1
  102714:	01c00804 	movi	r7,32
  102718:	ac400007 	ldb	r17,0(r21)
  10271c:	003d2906 	br	101bc4 <__alt_data_end+0xfff01bc4>
  102720:	94800054 	ori	r18,r18,1
  102724:	ac400007 	ldb	r17,0(r21)
  102728:	003d2606 	br	101bc4 <__alt_data_end+0xfff01bc4>
  10272c:	18c03fcc 	andi	r3,r3,255
  102730:	183e0526 	beq	r3,zero,101f48 <__alt_data_end+0xfff01f48>
  102734:	d9c02785 	stb	r7,158(sp)
  102738:	003e0306 	br	101f48 <__alt_data_end+0xfff01f48>
  10273c:	94801014 	ori	r18,r18,64
  102740:	ac400007 	ldb	r17,0(r21)
  102744:	003d1f06 	br	101bc4 <__alt_data_end+0xfff01bc4>
  102748:	ac400007 	ldb	r17,0(r21)
  10274c:	8a438726 	beq	r17,r9,10356c <___vfprintf_internal_r+0x1b2c>
  102750:	94800414 	ori	r18,r18,16
  102754:	003d1b06 	br	101bc4 <__alt_data_end+0xfff01bc4>
  102758:	18c03fcc 	andi	r3,r3,255
  10275c:	1805341e 	bne	r3,zero,103c30 <___vfprintf_internal_r+0x21f0>
  102760:	9080080c 	andi	r2,r18,32
  102764:	1002cd26 	beq	r2,zero,10329c <___vfprintf_internal_r+0x185c>
  102768:	d9402d17 	ldw	r5,180(sp)
  10276c:	d9002f17 	ldw	r4,188(sp)
  102770:	28800017 	ldw	r2,0(r5)
  102774:	2007d7fa 	srai	r3,r4,31
  102778:	29400104 	addi	r5,r5,4
  10277c:	d9402d15 	stw	r5,180(sp)
  102780:	11000015 	stw	r4,0(r2)
  102784:	10c00115 	stw	r3,4(r2)
  102788:	003ce506 	br	101b20 <__alt_data_end+0xfff01b20>
  10278c:	d8c02d17 	ldw	r3,180(sp)
  102790:	d9002d17 	ldw	r4,180(sp)
  102794:	d8002785 	stb	zero,158(sp)
  102798:	18800017 	ldw	r2,0(r3)
  10279c:	21000104 	addi	r4,r4,4
  1027a0:	00c00044 	movi	r3,1
  1027a4:	d8c02a15 	stw	r3,168(sp)
  1027a8:	d8801405 	stb	r2,80(sp)
  1027ac:	d9002d15 	stw	r4,180(sp)
  1027b0:	d8c02e15 	stw	r3,184(sp)
  1027b4:	d8002915 	stw	zero,164(sp)
  1027b8:	d8003215 	stw	zero,200(sp)
  1027bc:	dc001404 	addi	r16,sp,80
  1027c0:	0039883a 	mov	fp,zero
  1027c4:	003e7206 	br	102190 <__alt_data_end+0xfff02190>
  1027c8:	01000474 	movhi	r4,17
  1027cc:	21013f04 	addi	r4,r4,1276
  1027d0:	0039883a 	mov	fp,zero
  1027d4:	d9003915 	stw	r4,228(sp)
  1027d8:	04401e04 	movi	r17,120
  1027dc:	003f8206 	br	1025e8 <__alt_data_end+0xfff025e8>
  1027e0:	18c03fcc 	andi	r3,r3,255
  1027e4:	1805061e 	bne	r3,zero,103c00 <___vfprintf_internal_r+0x21c0>
  1027e8:	883d9126 	beq	r17,zero,101e30 <__alt_data_end+0xfff01e30>
  1027ec:	00c00044 	movi	r3,1
  1027f0:	d8c02a15 	stw	r3,168(sp)
  1027f4:	dc401405 	stb	r17,80(sp)
  1027f8:	d8002785 	stb	zero,158(sp)
  1027fc:	003fec06 	br	1027b0 <__alt_data_end+0xfff027b0>
  102800:	01400474 	movhi	r5,17
  102804:	29413f04 	addi	r5,r5,1276
  102808:	d9403915 	stw	r5,228(sp)
  10280c:	d8c02d15 	stw	r3,180(sp)
  102810:	1025883a 	mov	r18,r2
  102814:	04401e04 	movi	r17,120
  102818:	9d84b03a 	or	r2,r19,r22
  10281c:	1000fc1e 	bne	r2,zero,102c10 <___vfprintf_internal_r+0x11d0>
  102820:	0039883a 	mov	fp,zero
  102824:	00800084 	movi	r2,2
  102828:	10803fcc 	andi	r2,r2,255
  10282c:	00c00044 	movi	r3,1
  102830:	10c20f26 	beq	r2,r3,103070 <___vfprintf_internal_r+0x1630>
  102834:	00c00084 	movi	r3,2
  102838:	10fd6326 	beq	r2,r3,101dc8 <__alt_data_end+0xfff01dc8>
  10283c:	003e2d06 	br	1020f4 <__alt_data_end+0xfff020f4>
  102840:	d8c02017 	ldw	r3,128(sp)
  102844:	003e9306 	br	102294 <__alt_data_end+0xfff02294>
  102848:	00801944 	movi	r2,101
  10284c:	14407e0e 	bge	r2,r17,102a48 <___vfprintf_internal_r+0x1008>
  102850:	d9003617 	ldw	r4,216(sp)
  102854:	d9403817 	ldw	r5,224(sp)
  102858:	000d883a 	mov	r6,zero
  10285c:	000f883a 	mov	r7,zero
  102860:	d8c03c15 	stw	r3,240(sp)
  102864:	da003d15 	stw	r8,244(sp)
  102868:	010cb980 	call	10cb98 <__eqdf2>
  10286c:	d8c03c17 	ldw	r3,240(sp)
  102870:	da003d17 	ldw	r8,244(sp)
  102874:	1000f71e 	bne	r2,zero,102c54 <___vfprintf_internal_r+0x1214>
  102878:	d8801f17 	ldw	r2,124(sp)
  10287c:	01000474 	movhi	r4,17
  102880:	21014604 	addi	r4,r4,1304
  102884:	18c00044 	addi	r3,r3,1
  102888:	10800044 	addi	r2,r2,1
  10288c:	41000015 	stw	r4,0(r8)
  102890:	01000044 	movi	r4,1
  102894:	41000115 	stw	r4,4(r8)
  102898:	d8c02015 	stw	r3,128(sp)
  10289c:	d8801f15 	stw	r2,124(sp)
  1028a0:	010001c4 	movi	r4,7
  1028a4:	2082b816 	blt	r4,r2,103388 <___vfprintf_internal_r+0x1948>
  1028a8:	42000204 	addi	r8,r8,8
  1028ac:	d8802617 	ldw	r2,152(sp)
  1028b0:	d9403317 	ldw	r5,204(sp)
  1028b4:	11400216 	blt	r2,r5,1028c0 <___vfprintf_internal_r+0xe80>
  1028b8:	9080004c 	andi	r2,r18,1
  1028bc:	103ed526 	beq	r2,zero,102414 <__alt_data_end+0xfff02414>
  1028c0:	d8803717 	ldw	r2,220(sp)
  1028c4:	d9003417 	ldw	r4,208(sp)
  1028c8:	d9403717 	ldw	r5,220(sp)
  1028cc:	1887883a 	add	r3,r3,r2
  1028d0:	d8801f17 	ldw	r2,124(sp)
  1028d4:	41000015 	stw	r4,0(r8)
  1028d8:	41400115 	stw	r5,4(r8)
  1028dc:	10800044 	addi	r2,r2,1
  1028e0:	d8c02015 	stw	r3,128(sp)
  1028e4:	d8801f15 	stw	r2,124(sp)
  1028e8:	010001c4 	movi	r4,7
  1028ec:	20832916 	blt	r4,r2,103594 <___vfprintf_internal_r+0x1b54>
  1028f0:	42000204 	addi	r8,r8,8
  1028f4:	d8803317 	ldw	r2,204(sp)
  1028f8:	143fffc4 	addi	r16,r2,-1
  1028fc:	043ec50e 	bge	zero,r16,102414 <__alt_data_end+0xfff02414>
  102900:	04400404 	movi	r17,16
  102904:	d8801f17 	ldw	r2,124(sp)
  102908:	8c00880e 	bge	r17,r16,102b2c <___vfprintf_internal_r+0x10ec>
  10290c:	01400474 	movhi	r5,17
  102910:	29414684 	addi	r5,r5,1306
  102914:	d9402b15 	stw	r5,172(sp)
  102918:	058001c4 	movi	r22,7
  10291c:	dcc02c17 	ldw	r19,176(sp)
  102920:	00000306 	br	102930 <___vfprintf_internal_r+0xef0>
  102924:	42000204 	addi	r8,r8,8
  102928:	843ffc04 	addi	r16,r16,-16
  10292c:	8c00820e 	bge	r17,r16,102b38 <___vfprintf_internal_r+0x10f8>
  102930:	18c00404 	addi	r3,r3,16
  102934:	10800044 	addi	r2,r2,1
  102938:	45000015 	stw	r20,0(r8)
  10293c:	44400115 	stw	r17,4(r8)
  102940:	d8c02015 	stw	r3,128(sp)
  102944:	d8801f15 	stw	r2,124(sp)
  102948:	b0bff60e 	bge	r22,r2,102924 <__alt_data_end+0xfff02924>
  10294c:	d9801e04 	addi	r6,sp,120
  102950:	b80b883a 	mov	r5,r23
  102954:	9809883a 	mov	r4,r19
  102958:	01085580 	call	108558 <__sprint_r>
  10295c:	103d3a1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102960:	d8c02017 	ldw	r3,128(sp)
  102964:	d8801f17 	ldw	r2,124(sp)
  102968:	da000404 	addi	r8,sp,16
  10296c:	003fee06 	br	102928 <__alt_data_end+0xfff02928>
  102970:	d9403117 	ldw	r5,196(sp)
  102974:	d8802a17 	ldw	r2,168(sp)
  102978:	28adc83a 	sub	r22,r5,r2
  10297c:	05be630e 	bge	zero,r22,10230c <__alt_data_end+0xfff0230c>
  102980:	07000404 	movi	fp,16
  102984:	d8801f17 	ldw	r2,124(sp)
  102988:	e5838f0e 	bge	fp,r22,1037c8 <___vfprintf_internal_r+0x1d88>
  10298c:	01400474 	movhi	r5,17
  102990:	29414684 	addi	r5,r5,1306
  102994:	dc403015 	stw	r17,192(sp)
  102998:	d9402b15 	stw	r5,172(sp)
  10299c:	b023883a 	mov	r17,r22
  1029a0:	04c001c4 	movi	r19,7
  1029a4:	a82d883a 	mov	r22,r21
  1029a8:	902b883a 	mov	r21,r18
  1029ac:	8025883a 	mov	r18,r16
  1029b0:	dc002c17 	ldw	r16,176(sp)
  1029b4:	00000306 	br	1029c4 <___vfprintf_internal_r+0xf84>
  1029b8:	8c7ffc04 	addi	r17,r17,-16
  1029bc:	42000204 	addi	r8,r8,8
  1029c0:	e440110e 	bge	fp,r17,102a08 <___vfprintf_internal_r+0xfc8>
  1029c4:	18c00404 	addi	r3,r3,16
  1029c8:	10800044 	addi	r2,r2,1
  1029cc:	45000015 	stw	r20,0(r8)
  1029d0:	47000115 	stw	fp,4(r8)
  1029d4:	d8c02015 	stw	r3,128(sp)
  1029d8:	d8801f15 	stw	r2,124(sp)
  1029dc:	98bff60e 	bge	r19,r2,1029b8 <__alt_data_end+0xfff029b8>
  1029e0:	d9801e04 	addi	r6,sp,120
  1029e4:	b80b883a 	mov	r5,r23
  1029e8:	8009883a 	mov	r4,r16
  1029ec:	01085580 	call	108558 <__sprint_r>
  1029f0:	103d151e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  1029f4:	8c7ffc04 	addi	r17,r17,-16
  1029f8:	d8c02017 	ldw	r3,128(sp)
  1029fc:	d8801f17 	ldw	r2,124(sp)
  102a00:	da000404 	addi	r8,sp,16
  102a04:	e47fef16 	blt	fp,r17,1029c4 <__alt_data_end+0xfff029c4>
  102a08:	9021883a 	mov	r16,r18
  102a0c:	a825883a 	mov	r18,r21
  102a10:	b02b883a 	mov	r21,r22
  102a14:	882d883a 	mov	r22,r17
  102a18:	dc403017 	ldw	r17,192(sp)
  102a1c:	d9002b17 	ldw	r4,172(sp)
  102a20:	1d87883a 	add	r3,r3,r22
  102a24:	10800044 	addi	r2,r2,1
  102a28:	41000015 	stw	r4,0(r8)
  102a2c:	45800115 	stw	r22,4(r8)
  102a30:	d8c02015 	stw	r3,128(sp)
  102a34:	d8801f15 	stw	r2,124(sp)
  102a38:	010001c4 	movi	r4,7
  102a3c:	20818e16 	blt	r4,r2,103078 <___vfprintf_internal_r+0x1638>
  102a40:	42000204 	addi	r8,r8,8
  102a44:	003e3106 	br	10230c <__alt_data_end+0xfff0230c>
  102a48:	d9403317 	ldw	r5,204(sp)
  102a4c:	00800044 	movi	r2,1
  102a50:	18c00044 	addi	r3,r3,1
  102a54:	1141530e 	bge	r2,r5,102fa4 <___vfprintf_internal_r+0x1564>
  102a58:	dc401f17 	ldw	r17,124(sp)
  102a5c:	00800044 	movi	r2,1
  102a60:	40800115 	stw	r2,4(r8)
  102a64:	8c400044 	addi	r17,r17,1
  102a68:	44000015 	stw	r16,0(r8)
  102a6c:	d8c02015 	stw	r3,128(sp)
  102a70:	dc401f15 	stw	r17,124(sp)
  102a74:	008001c4 	movi	r2,7
  102a78:	14416b16 	blt	r2,r17,103028 <___vfprintf_internal_r+0x15e8>
  102a7c:	42000204 	addi	r8,r8,8
  102a80:	d8803717 	ldw	r2,220(sp)
  102a84:	d9003417 	ldw	r4,208(sp)
  102a88:	8c400044 	addi	r17,r17,1
  102a8c:	10c7883a 	add	r3,r2,r3
  102a90:	40800115 	stw	r2,4(r8)
  102a94:	41000015 	stw	r4,0(r8)
  102a98:	d8c02015 	stw	r3,128(sp)
  102a9c:	dc401f15 	stw	r17,124(sp)
  102aa0:	008001c4 	movi	r2,7
  102aa4:	14416916 	blt	r2,r17,10304c <___vfprintf_internal_r+0x160c>
  102aa8:	45800204 	addi	r22,r8,8
  102aac:	d9003617 	ldw	r4,216(sp)
  102ab0:	d9403817 	ldw	r5,224(sp)
  102ab4:	000d883a 	mov	r6,zero
  102ab8:	000f883a 	mov	r7,zero
  102abc:	d8c03c15 	stw	r3,240(sp)
  102ac0:	010cb980 	call	10cb98 <__eqdf2>
  102ac4:	d8c03c17 	ldw	r3,240(sp)
  102ac8:	1000bc26 	beq	r2,zero,102dbc <___vfprintf_internal_r+0x137c>
  102acc:	d9403317 	ldw	r5,204(sp)
  102ad0:	84000044 	addi	r16,r16,1
  102ad4:	8c400044 	addi	r17,r17,1
  102ad8:	28bfffc4 	addi	r2,r5,-1
  102adc:	1887883a 	add	r3,r3,r2
  102ae0:	b0800115 	stw	r2,4(r22)
  102ae4:	b4000015 	stw	r16,0(r22)
  102ae8:	d8c02015 	stw	r3,128(sp)
  102aec:	dc401f15 	stw	r17,124(sp)
  102af0:	008001c4 	movi	r2,7
  102af4:	14414316 	blt	r2,r17,103004 <___vfprintf_internal_r+0x15c4>
  102af8:	b5800204 	addi	r22,r22,8
  102afc:	d9003a17 	ldw	r4,232(sp)
  102b00:	df0022c4 	addi	fp,sp,139
  102b04:	8c400044 	addi	r17,r17,1
  102b08:	20c7883a 	add	r3,r4,r3
  102b0c:	b7000015 	stw	fp,0(r22)
  102b10:	b1000115 	stw	r4,4(r22)
  102b14:	d8c02015 	stw	r3,128(sp)
  102b18:	dc401f15 	stw	r17,124(sp)
  102b1c:	008001c4 	movi	r2,7
  102b20:	14400e16 	blt	r2,r17,102b5c <___vfprintf_internal_r+0x111c>
  102b24:	b2000204 	addi	r8,r22,8
  102b28:	003e3a06 	br	102414 <__alt_data_end+0xfff02414>
  102b2c:	01000474 	movhi	r4,17
  102b30:	21014684 	addi	r4,r4,1306
  102b34:	d9002b15 	stw	r4,172(sp)
  102b38:	d9002b17 	ldw	r4,172(sp)
  102b3c:	1c07883a 	add	r3,r3,r16
  102b40:	44000115 	stw	r16,4(r8)
  102b44:	41000015 	stw	r4,0(r8)
  102b48:	10800044 	addi	r2,r2,1
  102b4c:	d8c02015 	stw	r3,128(sp)
  102b50:	d8801f15 	stw	r2,124(sp)
  102b54:	010001c4 	movi	r4,7
  102b58:	20be2d0e 	bge	r4,r2,102410 <__alt_data_end+0xfff02410>
  102b5c:	d9002c17 	ldw	r4,176(sp)
  102b60:	d9801e04 	addi	r6,sp,120
  102b64:	b80b883a 	mov	r5,r23
  102b68:	01085580 	call	108558 <__sprint_r>
  102b6c:	103cb61e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102b70:	d8c02017 	ldw	r3,128(sp)
  102b74:	da000404 	addi	r8,sp,16
  102b78:	003e2606 	br	102414 <__alt_data_end+0xfff02414>
  102b7c:	d9002c17 	ldw	r4,176(sp)
  102b80:	d9801e04 	addi	r6,sp,120
  102b84:	b80b883a 	mov	r5,r23
  102b88:	01085580 	call	108558 <__sprint_r>
  102b8c:	103e5d26 	beq	r2,zero,102504 <__alt_data_end+0xfff02504>
  102b90:	003cad06 	br	101e48 <__alt_data_end+0xfff01e48>
  102b94:	d9002c17 	ldw	r4,176(sp)
  102b98:	d9801e04 	addi	r6,sp,120
  102b9c:	b80b883a 	mov	r5,r23
  102ba0:	01085580 	call	108558 <__sprint_r>
  102ba4:	103ca81e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102ba8:	d8c02017 	ldw	r3,128(sp)
  102bac:	da000404 	addi	r8,sp,16
  102bb0:	003e0b06 	br	1023e0 <__alt_data_end+0xfff023e0>
  102bb4:	d9002c17 	ldw	r4,176(sp)
  102bb8:	d9801e04 	addi	r6,sp,120
  102bbc:	b80b883a 	mov	r5,r23
  102bc0:	01085580 	call	108558 <__sprint_r>
  102bc4:	103ca01e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102bc8:	d8c02017 	ldw	r3,128(sp)
  102bcc:	da000404 	addi	r8,sp,16
  102bd0:	003dbd06 	br	1022c8 <__alt_data_end+0xfff022c8>
  102bd4:	d9002c17 	ldw	r4,176(sp)
  102bd8:	d9801e04 	addi	r6,sp,120
  102bdc:	b80b883a 	mov	r5,r23
  102be0:	01085580 	call	108558 <__sprint_r>
  102be4:	103c981e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102be8:	d8c02017 	ldw	r3,128(sp)
  102bec:	da000404 	addi	r8,sp,16
  102bf0:	003dc306 	br	102300 <__alt_data_end+0xfff02300>
  102bf4:	d8802917 	ldw	r2,164(sp)
  102bf8:	d8002785 	stb	zero,158(sp)
  102bfc:	103f0616 	blt	r2,zero,102818 <__alt_data_end+0xfff02818>
  102c00:	00ffdfc4 	movi	r3,-129
  102c04:	9d84b03a 	or	r2,r19,r22
  102c08:	90e4703a 	and	r18,r18,r3
  102c0c:	103c6b26 	beq	r2,zero,101dbc <__alt_data_end+0xfff01dbc>
  102c10:	0039883a 	mov	fp,zero
  102c14:	003e7406 	br	1025e8 <__alt_data_end+0xfff025e8>
  102c18:	9080040c 	andi	r2,r18,16
  102c1c:	1001b326 	beq	r2,zero,1032ec <___vfprintf_internal_r+0x18ac>
  102c20:	d9002d17 	ldw	r4,180(sp)
  102c24:	d9402917 	ldw	r5,164(sp)
  102c28:	d8002785 	stb	zero,158(sp)
  102c2c:	20800104 	addi	r2,r4,4
  102c30:	24c00017 	ldw	r19,0(r4)
  102c34:	002d883a 	mov	r22,zero
  102c38:	2801b516 	blt	r5,zero,103310 <___vfprintf_internal_r+0x18d0>
  102c3c:	00ffdfc4 	movi	r3,-129
  102c40:	d8802d15 	stw	r2,180(sp)
  102c44:	90e4703a 	and	r18,r18,r3
  102c48:	983d2726 	beq	r19,zero,1020e8 <__alt_data_end+0xfff020e8>
  102c4c:	0039883a 	mov	fp,zero
  102c50:	003d2a06 	br	1020fc <__alt_data_end+0xfff020fc>
  102c54:	dc402617 	ldw	r17,152(sp)
  102c58:	0441d30e 	bge	zero,r17,1033a8 <___vfprintf_internal_r+0x1968>
  102c5c:	dc403217 	ldw	r17,200(sp)
  102c60:	d8803317 	ldw	r2,204(sp)
  102c64:	1440010e 	bge	r2,r17,102c6c <___vfprintf_internal_r+0x122c>
  102c68:	1023883a 	mov	r17,r2
  102c6c:	04400a0e 	bge	zero,r17,102c98 <___vfprintf_internal_r+0x1258>
  102c70:	d8801f17 	ldw	r2,124(sp)
  102c74:	1c47883a 	add	r3,r3,r17
  102c78:	44000015 	stw	r16,0(r8)
  102c7c:	10800044 	addi	r2,r2,1
  102c80:	44400115 	stw	r17,4(r8)
  102c84:	d8c02015 	stw	r3,128(sp)
  102c88:	d8801f15 	stw	r2,124(sp)
  102c8c:	010001c4 	movi	r4,7
  102c90:	20826516 	blt	r4,r2,103628 <___vfprintf_internal_r+0x1be8>
  102c94:	42000204 	addi	r8,r8,8
  102c98:	88026116 	blt	r17,zero,103620 <___vfprintf_internal_r+0x1be0>
  102c9c:	d9003217 	ldw	r4,200(sp)
  102ca0:	2463c83a 	sub	r17,r4,r17
  102ca4:	04407b0e 	bge	zero,r17,102e94 <___vfprintf_internal_r+0x1454>
  102ca8:	05800404 	movi	r22,16
  102cac:	d8801f17 	ldw	r2,124(sp)
  102cb0:	b4419d0e 	bge	r22,r17,103328 <___vfprintf_internal_r+0x18e8>
  102cb4:	01000474 	movhi	r4,17
  102cb8:	21014684 	addi	r4,r4,1306
  102cbc:	d9002b15 	stw	r4,172(sp)
  102cc0:	070001c4 	movi	fp,7
  102cc4:	dcc02c17 	ldw	r19,176(sp)
  102cc8:	00000306 	br	102cd8 <___vfprintf_internal_r+0x1298>
  102ccc:	42000204 	addi	r8,r8,8
  102cd0:	8c7ffc04 	addi	r17,r17,-16
  102cd4:	b441970e 	bge	r22,r17,103334 <___vfprintf_internal_r+0x18f4>
  102cd8:	18c00404 	addi	r3,r3,16
  102cdc:	10800044 	addi	r2,r2,1
  102ce0:	45000015 	stw	r20,0(r8)
  102ce4:	45800115 	stw	r22,4(r8)
  102ce8:	d8c02015 	stw	r3,128(sp)
  102cec:	d8801f15 	stw	r2,124(sp)
  102cf0:	e0bff60e 	bge	fp,r2,102ccc <__alt_data_end+0xfff02ccc>
  102cf4:	d9801e04 	addi	r6,sp,120
  102cf8:	b80b883a 	mov	r5,r23
  102cfc:	9809883a 	mov	r4,r19
  102d00:	01085580 	call	108558 <__sprint_r>
  102d04:	103c501e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102d08:	d8c02017 	ldw	r3,128(sp)
  102d0c:	d8801f17 	ldw	r2,124(sp)
  102d10:	da000404 	addi	r8,sp,16
  102d14:	003fee06 	br	102cd0 <__alt_data_end+0xfff02cd0>
  102d18:	d9002c17 	ldw	r4,176(sp)
  102d1c:	d9801e04 	addi	r6,sp,120
  102d20:	b80b883a 	mov	r5,r23
  102d24:	01085580 	call	108558 <__sprint_r>
  102d28:	103c471e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102d2c:	d8c02017 	ldw	r3,128(sp)
  102d30:	df002787 	ldb	fp,158(sp)
  102d34:	da000404 	addi	r8,sp,16
  102d38:	003d5606 	br	102294 <__alt_data_end+0xfff02294>
  102d3c:	9080040c 	andi	r2,r18,16
  102d40:	10016126 	beq	r2,zero,1032c8 <___vfprintf_internal_r+0x1888>
  102d44:	d8802d17 	ldw	r2,180(sp)
  102d48:	14c00017 	ldw	r19,0(r2)
  102d4c:	10800104 	addi	r2,r2,4
  102d50:	d8802d15 	stw	r2,180(sp)
  102d54:	982dd7fa 	srai	r22,r19,31
  102d58:	b005883a 	mov	r2,r22
  102d5c:	003c8206 	br	101f68 <__alt_data_end+0xfff01f68>
  102d60:	9080040c 	andi	r2,r18,16
  102d64:	10003526 	beq	r2,zero,102e3c <___vfprintf_internal_r+0x13fc>
  102d68:	d9402d17 	ldw	r5,180(sp)
  102d6c:	d8c02917 	ldw	r3,164(sp)
  102d70:	d8002785 	stb	zero,158(sp)
  102d74:	28800104 	addi	r2,r5,4
  102d78:	2cc00017 	ldw	r19,0(r5)
  102d7c:	002d883a 	mov	r22,zero
  102d80:	18003716 	blt	r3,zero,102e60 <___vfprintf_internal_r+0x1420>
  102d84:	00ffdfc4 	movi	r3,-129
  102d88:	d8802d15 	stw	r2,180(sp)
  102d8c:	90e4703a 	and	r18,r18,r3
  102d90:	0039883a 	mov	fp,zero
  102d94:	983df326 	beq	r19,zero,102564 <__alt_data_end+0xfff02564>
  102d98:	00800244 	movi	r2,9
  102d9c:	14fc7b36 	bltu	r2,r19,101f8c <__alt_data_end+0xfff01f8c>
  102da0:	d8c02817 	ldw	r3,160(sp)
  102da4:	dc001dc4 	addi	r16,sp,119
  102da8:	9cc00c04 	addi	r19,r19,48
  102dac:	1c07c83a 	sub	r3,r3,r16
  102db0:	dcc01dc5 	stb	r19,119(sp)
  102db4:	d8c02e15 	stw	r3,184(sp)
  102db8:	003ce806 	br	10215c <__alt_data_end+0xfff0215c>
  102dbc:	d8803317 	ldw	r2,204(sp)
  102dc0:	143fffc4 	addi	r16,r2,-1
  102dc4:	043f4d0e 	bge	zero,r16,102afc <__alt_data_end+0xfff02afc>
  102dc8:	07000404 	movi	fp,16
  102dcc:	e400810e 	bge	fp,r16,102fd4 <___vfprintf_internal_r+0x1594>
  102dd0:	01400474 	movhi	r5,17
  102dd4:	29414684 	addi	r5,r5,1306
  102dd8:	d9402b15 	stw	r5,172(sp)
  102ddc:	01c001c4 	movi	r7,7
  102de0:	dcc02c17 	ldw	r19,176(sp)
  102de4:	00000306 	br	102df4 <___vfprintf_internal_r+0x13b4>
  102de8:	b5800204 	addi	r22,r22,8
  102dec:	843ffc04 	addi	r16,r16,-16
  102df0:	e4007b0e 	bge	fp,r16,102fe0 <___vfprintf_internal_r+0x15a0>
  102df4:	18c00404 	addi	r3,r3,16
  102df8:	8c400044 	addi	r17,r17,1
  102dfc:	b5000015 	stw	r20,0(r22)
  102e00:	b7000115 	stw	fp,4(r22)
  102e04:	d8c02015 	stw	r3,128(sp)
  102e08:	dc401f15 	stw	r17,124(sp)
  102e0c:	3c7ff60e 	bge	r7,r17,102de8 <__alt_data_end+0xfff02de8>
  102e10:	d9801e04 	addi	r6,sp,120
  102e14:	b80b883a 	mov	r5,r23
  102e18:	9809883a 	mov	r4,r19
  102e1c:	d9c03c15 	stw	r7,240(sp)
  102e20:	01085580 	call	108558 <__sprint_r>
  102e24:	d9c03c17 	ldw	r7,240(sp)
  102e28:	103c071e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102e2c:	d8c02017 	ldw	r3,128(sp)
  102e30:	dc401f17 	ldw	r17,124(sp)
  102e34:	dd800404 	addi	r22,sp,16
  102e38:	003fec06 	br	102dec <__alt_data_end+0xfff02dec>
  102e3c:	9080100c 	andi	r2,r18,64
  102e40:	d8002785 	stb	zero,158(sp)
  102e44:	10010e26 	beq	r2,zero,103280 <___vfprintf_internal_r+0x1840>
  102e48:	d9002d17 	ldw	r4,180(sp)
  102e4c:	d9402917 	ldw	r5,164(sp)
  102e50:	002d883a 	mov	r22,zero
  102e54:	20800104 	addi	r2,r4,4
  102e58:	24c0000b 	ldhu	r19,0(r4)
  102e5c:	283fc90e 	bge	r5,zero,102d84 <__alt_data_end+0xfff02d84>
  102e60:	d8802d15 	stw	r2,180(sp)
  102e64:	0039883a 	mov	fp,zero
  102e68:	9d84b03a 	or	r2,r19,r22
  102e6c:	103c461e 	bne	r2,zero,101f88 <__alt_data_end+0xfff01f88>
  102e70:	00800044 	movi	r2,1
  102e74:	003e6c06 	br	102828 <__alt_data_end+0xfff02828>
  102e78:	d9002c17 	ldw	r4,176(sp)
  102e7c:	d9801e04 	addi	r6,sp,120
  102e80:	b80b883a 	mov	r5,r23
  102e84:	01085580 	call	108558 <__sprint_r>
  102e88:	103bef1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102e8c:	d8c02017 	ldw	r3,128(sp)
  102e90:	da000404 	addi	r8,sp,16
  102e94:	d9003217 	ldw	r4,200(sp)
  102e98:	d8802617 	ldw	r2,152(sp)
  102e9c:	d9403317 	ldw	r5,204(sp)
  102ea0:	8123883a 	add	r17,r16,r4
  102ea4:	11400216 	blt	r2,r5,102eb0 <___vfprintf_internal_r+0x1470>
  102ea8:	9100004c 	andi	r4,r18,1
  102eac:	20000d26 	beq	r4,zero,102ee4 <___vfprintf_internal_r+0x14a4>
  102eb0:	d9003717 	ldw	r4,220(sp)
  102eb4:	d9403417 	ldw	r5,208(sp)
  102eb8:	1907883a 	add	r3,r3,r4
  102ebc:	d9001f17 	ldw	r4,124(sp)
  102ec0:	41400015 	stw	r5,0(r8)
  102ec4:	d9403717 	ldw	r5,220(sp)
  102ec8:	21000044 	addi	r4,r4,1
  102ecc:	d8c02015 	stw	r3,128(sp)
  102ed0:	41400115 	stw	r5,4(r8)
  102ed4:	d9001f15 	stw	r4,124(sp)
  102ed8:	014001c4 	movi	r5,7
  102edc:	2901e816 	blt	r5,r4,103680 <___vfprintf_internal_r+0x1c40>
  102ee0:	42000204 	addi	r8,r8,8
  102ee4:	d9003317 	ldw	r4,204(sp)
  102ee8:	8121883a 	add	r16,r16,r4
  102eec:	2085c83a 	sub	r2,r4,r2
  102ef0:	8461c83a 	sub	r16,r16,r17
  102ef4:	1400010e 	bge	r2,r16,102efc <___vfprintf_internal_r+0x14bc>
  102ef8:	1021883a 	mov	r16,r2
  102efc:	04000a0e 	bge	zero,r16,102f28 <___vfprintf_internal_r+0x14e8>
  102f00:	d9001f17 	ldw	r4,124(sp)
  102f04:	1c07883a 	add	r3,r3,r16
  102f08:	44400015 	stw	r17,0(r8)
  102f0c:	21000044 	addi	r4,r4,1
  102f10:	44000115 	stw	r16,4(r8)
  102f14:	d8c02015 	stw	r3,128(sp)
  102f18:	d9001f15 	stw	r4,124(sp)
  102f1c:	014001c4 	movi	r5,7
  102f20:	2901fb16 	blt	r5,r4,103710 <___vfprintf_internal_r+0x1cd0>
  102f24:	42000204 	addi	r8,r8,8
  102f28:	8001f716 	blt	r16,zero,103708 <___vfprintf_internal_r+0x1cc8>
  102f2c:	1421c83a 	sub	r16,r2,r16
  102f30:	043d380e 	bge	zero,r16,102414 <__alt_data_end+0xfff02414>
  102f34:	04400404 	movi	r17,16
  102f38:	d8801f17 	ldw	r2,124(sp)
  102f3c:	8c3efb0e 	bge	r17,r16,102b2c <__alt_data_end+0xfff02b2c>
  102f40:	01400474 	movhi	r5,17
  102f44:	29414684 	addi	r5,r5,1306
  102f48:	d9402b15 	stw	r5,172(sp)
  102f4c:	058001c4 	movi	r22,7
  102f50:	dcc02c17 	ldw	r19,176(sp)
  102f54:	00000306 	br	102f64 <___vfprintf_internal_r+0x1524>
  102f58:	42000204 	addi	r8,r8,8
  102f5c:	843ffc04 	addi	r16,r16,-16
  102f60:	8c3ef50e 	bge	r17,r16,102b38 <__alt_data_end+0xfff02b38>
  102f64:	18c00404 	addi	r3,r3,16
  102f68:	10800044 	addi	r2,r2,1
  102f6c:	45000015 	stw	r20,0(r8)
  102f70:	44400115 	stw	r17,4(r8)
  102f74:	d8c02015 	stw	r3,128(sp)
  102f78:	d8801f15 	stw	r2,124(sp)
  102f7c:	b0bff60e 	bge	r22,r2,102f58 <__alt_data_end+0xfff02f58>
  102f80:	d9801e04 	addi	r6,sp,120
  102f84:	b80b883a 	mov	r5,r23
  102f88:	9809883a 	mov	r4,r19
  102f8c:	01085580 	call	108558 <__sprint_r>
  102f90:	103bad1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  102f94:	d8c02017 	ldw	r3,128(sp)
  102f98:	d8801f17 	ldw	r2,124(sp)
  102f9c:	da000404 	addi	r8,sp,16
  102fa0:	003fee06 	br	102f5c <__alt_data_end+0xfff02f5c>
  102fa4:	9088703a 	and	r4,r18,r2
  102fa8:	203eab1e 	bne	r4,zero,102a58 <__alt_data_end+0xfff02a58>
  102fac:	dc401f17 	ldw	r17,124(sp)
  102fb0:	40800115 	stw	r2,4(r8)
  102fb4:	44000015 	stw	r16,0(r8)
  102fb8:	8c400044 	addi	r17,r17,1
  102fbc:	d8c02015 	stw	r3,128(sp)
  102fc0:	dc401f15 	stw	r17,124(sp)
  102fc4:	008001c4 	movi	r2,7
  102fc8:	14400e16 	blt	r2,r17,103004 <___vfprintf_internal_r+0x15c4>
  102fcc:	45800204 	addi	r22,r8,8
  102fd0:	003eca06 	br	102afc <__alt_data_end+0xfff02afc>
  102fd4:	01000474 	movhi	r4,17
  102fd8:	21014684 	addi	r4,r4,1306
  102fdc:	d9002b15 	stw	r4,172(sp)
  102fe0:	d8802b17 	ldw	r2,172(sp)
  102fe4:	1c07883a 	add	r3,r3,r16
  102fe8:	8c400044 	addi	r17,r17,1
  102fec:	b0800015 	stw	r2,0(r22)
  102ff0:	b4000115 	stw	r16,4(r22)
  102ff4:	d8c02015 	stw	r3,128(sp)
  102ff8:	dc401f15 	stw	r17,124(sp)
  102ffc:	008001c4 	movi	r2,7
  103000:	147ebd0e 	bge	r2,r17,102af8 <__alt_data_end+0xfff02af8>
  103004:	d9002c17 	ldw	r4,176(sp)
  103008:	d9801e04 	addi	r6,sp,120
  10300c:	b80b883a 	mov	r5,r23
  103010:	01085580 	call	108558 <__sprint_r>
  103014:	103b8c1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  103018:	d8c02017 	ldw	r3,128(sp)
  10301c:	dc401f17 	ldw	r17,124(sp)
  103020:	dd800404 	addi	r22,sp,16
  103024:	003eb506 	br	102afc <__alt_data_end+0xfff02afc>
  103028:	d9002c17 	ldw	r4,176(sp)
  10302c:	d9801e04 	addi	r6,sp,120
  103030:	b80b883a 	mov	r5,r23
  103034:	01085580 	call	108558 <__sprint_r>
  103038:	103b831e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  10303c:	d8c02017 	ldw	r3,128(sp)
  103040:	dc401f17 	ldw	r17,124(sp)
  103044:	da000404 	addi	r8,sp,16
  103048:	003e8d06 	br	102a80 <__alt_data_end+0xfff02a80>
  10304c:	d9002c17 	ldw	r4,176(sp)
  103050:	d9801e04 	addi	r6,sp,120
  103054:	b80b883a 	mov	r5,r23
  103058:	01085580 	call	108558 <__sprint_r>
  10305c:	103b7a1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  103060:	d8c02017 	ldw	r3,128(sp)
  103064:	dc401f17 	ldw	r17,124(sp)
  103068:	dd800404 	addi	r22,sp,16
  10306c:	003e8f06 	br	102aac <__alt_data_end+0xfff02aac>
  103070:	0027883a 	mov	r19,zero
  103074:	003f4a06 	br	102da0 <__alt_data_end+0xfff02da0>
  103078:	d9002c17 	ldw	r4,176(sp)
  10307c:	d9801e04 	addi	r6,sp,120
  103080:	b80b883a 	mov	r5,r23
  103084:	01085580 	call	108558 <__sprint_r>
  103088:	103b6f1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  10308c:	d8c02017 	ldw	r3,128(sp)
  103090:	da000404 	addi	r8,sp,16
  103094:	003c9d06 	br	10230c <__alt_data_end+0xfff0230c>
  103098:	04e7c83a 	sub	r19,zero,r19
  10309c:	9804c03a 	cmpne	r2,r19,zero
  1030a0:	05adc83a 	sub	r22,zero,r22
  1030a4:	b0adc83a 	sub	r22,r22,r2
  1030a8:	d8802917 	ldw	r2,164(sp)
  1030ac:	07000b44 	movi	fp,45
  1030b0:	df002785 	stb	fp,158(sp)
  1030b4:	10017b16 	blt	r2,zero,1036a4 <___vfprintf_internal_r+0x1c64>
  1030b8:	00bfdfc4 	movi	r2,-129
  1030bc:	90a4703a 	and	r18,r18,r2
  1030c0:	003bb106 	br	101f88 <__alt_data_end+0xfff01f88>
  1030c4:	d9003617 	ldw	r4,216(sp)
  1030c8:	d9403817 	ldw	r5,224(sp)
  1030cc:	da003d15 	stw	r8,244(sp)
  1030d0:	01080e40 	call	1080e4 <__fpclassifyd>
  1030d4:	da003d17 	ldw	r8,244(sp)
  1030d8:	1000f026 	beq	r2,zero,10349c <___vfprintf_internal_r+0x1a5c>
  1030dc:	d9002917 	ldw	r4,164(sp)
  1030e0:	05bff7c4 	movi	r22,-33
  1030e4:	00bfffc4 	movi	r2,-1
  1030e8:	8dac703a 	and	r22,r17,r22
  1030ec:	20820026 	beq	r4,r2,1038f0 <___vfprintf_internal_r+0x1eb0>
  1030f0:	008011c4 	movi	r2,71
  1030f4:	b081f726 	beq	r22,r2,1038d4 <___vfprintf_internal_r+0x1e94>
  1030f8:	d9003817 	ldw	r4,224(sp)
  1030fc:	90c04014 	ori	r3,r18,256
  103100:	d8c02b15 	stw	r3,172(sp)
  103104:	20021516 	blt	r4,zero,10395c <___vfprintf_internal_r+0x1f1c>
  103108:	dcc03817 	ldw	r19,224(sp)
  10310c:	d8002a05 	stb	zero,168(sp)
  103110:	00801984 	movi	r2,102
  103114:	8881f926 	beq	r17,r2,1038fc <___vfprintf_internal_r+0x1ebc>
  103118:	00801184 	movi	r2,70
  10311c:	88821c26 	beq	r17,r2,103990 <___vfprintf_internal_r+0x1f50>
  103120:	00801144 	movi	r2,69
  103124:	b081ef26 	beq	r22,r2,1038e4 <___vfprintf_internal_r+0x1ea4>
  103128:	d8c02917 	ldw	r3,164(sp)
  10312c:	d8802104 	addi	r2,sp,132
  103130:	d8800315 	stw	r2,12(sp)
  103134:	d9403617 	ldw	r5,216(sp)
  103138:	d8802504 	addi	r2,sp,148
  10313c:	d9002c17 	ldw	r4,176(sp)
  103140:	d8800215 	stw	r2,8(sp)
  103144:	d8802604 	addi	r2,sp,152
  103148:	d8c00015 	stw	r3,0(sp)
  10314c:	d8800115 	stw	r2,4(sp)
  103150:	01c00084 	movi	r7,2
  103154:	980d883a 	mov	r6,r19
  103158:	d8c03c15 	stw	r3,240(sp)
  10315c:	da003d15 	stw	r8,244(sp)
  103160:	01040640 	call	104064 <_dtoa_r>
  103164:	1021883a 	mov	r16,r2
  103168:	008019c4 	movi	r2,103
  10316c:	d8c03c17 	ldw	r3,240(sp)
  103170:	da003d17 	ldw	r8,244(sp)
  103174:	88817126 	beq	r17,r2,10373c <___vfprintf_internal_r+0x1cfc>
  103178:	008011c4 	movi	r2,71
  10317c:	88829226 	beq	r17,r2,103bc8 <___vfprintf_internal_r+0x2188>
  103180:	80f9883a 	add	fp,r16,r3
  103184:	d9003617 	ldw	r4,216(sp)
  103188:	000d883a 	mov	r6,zero
  10318c:	000f883a 	mov	r7,zero
  103190:	980b883a 	mov	r5,r19
  103194:	da003d15 	stw	r8,244(sp)
  103198:	010cb980 	call	10cb98 <__eqdf2>
  10319c:	da003d17 	ldw	r8,244(sp)
  1031a0:	10018d26 	beq	r2,zero,1037d8 <___vfprintf_internal_r+0x1d98>
  1031a4:	d8802117 	ldw	r2,132(sp)
  1031a8:	1700062e 	bgeu	r2,fp,1031c4 <___vfprintf_internal_r+0x1784>
  1031ac:	01000c04 	movi	r4,48
  1031b0:	10c00044 	addi	r3,r2,1
  1031b4:	d8c02115 	stw	r3,132(sp)
  1031b8:	11000005 	stb	r4,0(r2)
  1031bc:	d8802117 	ldw	r2,132(sp)
  1031c0:	173ffb36 	bltu	r2,fp,1031b0 <__alt_data_end+0xfff031b0>
  1031c4:	1405c83a 	sub	r2,r2,r16
  1031c8:	d8803315 	stw	r2,204(sp)
  1031cc:	008011c4 	movi	r2,71
  1031d0:	b0817626 	beq	r22,r2,1037ac <___vfprintf_internal_r+0x1d6c>
  1031d4:	00801944 	movi	r2,101
  1031d8:	1442810e 	bge	r2,r17,103be0 <___vfprintf_internal_r+0x21a0>
  1031dc:	d8c02617 	ldw	r3,152(sp)
  1031e0:	00801984 	movi	r2,102
  1031e4:	d8c03215 	stw	r3,200(sp)
  1031e8:	8881fe26 	beq	r17,r2,1039e4 <___vfprintf_internal_r+0x1fa4>
  1031ec:	d8c03217 	ldw	r3,200(sp)
  1031f0:	d9003317 	ldw	r4,204(sp)
  1031f4:	1901dd16 	blt	r3,r4,10396c <___vfprintf_internal_r+0x1f2c>
  1031f8:	9480004c 	andi	r18,r18,1
  1031fc:	90022b1e 	bne	r18,zero,103aac <___vfprintf_internal_r+0x206c>
  103200:	1805883a 	mov	r2,r3
  103204:	18028016 	blt	r3,zero,103c08 <___vfprintf_internal_r+0x21c8>
  103208:	d8c03217 	ldw	r3,200(sp)
  10320c:	044019c4 	movi	r17,103
  103210:	d8c02e15 	stw	r3,184(sp)
  103214:	df002a07 	ldb	fp,168(sp)
  103218:	e001531e 	bne	fp,zero,103768 <___vfprintf_internal_r+0x1d28>
  10321c:	df002783 	ldbu	fp,158(sp)
  103220:	d8802a15 	stw	r2,168(sp)
  103224:	dc802b17 	ldw	r18,172(sp)
  103228:	d8002915 	stw	zero,164(sp)
  10322c:	003bd106 	br	102174 <__alt_data_end+0xfff02174>
  103230:	d8802d17 	ldw	r2,180(sp)
  103234:	d8c02d17 	ldw	r3,180(sp)
  103238:	d9002d17 	ldw	r4,180(sp)
  10323c:	10800017 	ldw	r2,0(r2)
  103240:	18c00117 	ldw	r3,4(r3)
  103244:	21000204 	addi	r4,r4,8
  103248:	d8803615 	stw	r2,216(sp)
  10324c:	d8c03815 	stw	r3,224(sp)
  103250:	d9002d15 	stw	r4,180(sp)
  103254:	003b7506 	br	10202c <__alt_data_end+0xfff0202c>
  103258:	ac400007 	ldb	r17,0(r21)
  10325c:	003a5906 	br	101bc4 <__alt_data_end+0xfff01bc4>
  103260:	9080100c 	andi	r2,r18,64
  103264:	1000a826 	beq	r2,zero,103508 <___vfprintf_internal_r+0x1ac8>
  103268:	d9002d17 	ldw	r4,180(sp)
  10326c:	002d883a 	mov	r22,zero
  103270:	24c0000b 	ldhu	r19,0(r4)
  103274:	21000104 	addi	r4,r4,4
  103278:	d9002d15 	stw	r4,180(sp)
  10327c:	003ccb06 	br	1025ac <__alt_data_end+0xfff025ac>
  103280:	d8c02d17 	ldw	r3,180(sp)
  103284:	d9002917 	ldw	r4,164(sp)
  103288:	002d883a 	mov	r22,zero
  10328c:	18800104 	addi	r2,r3,4
  103290:	1cc00017 	ldw	r19,0(r3)
  103294:	203ebb0e 	bge	r4,zero,102d84 <__alt_data_end+0xfff02d84>
  103298:	003ef106 	br	102e60 <__alt_data_end+0xfff02e60>
  10329c:	9080040c 	andi	r2,r18,16
  1032a0:	1000921e 	bne	r2,zero,1034ec <___vfprintf_internal_r+0x1aac>
  1032a4:	9480100c 	andi	r18,r18,64
  1032a8:	90013926 	beq	r18,zero,103790 <___vfprintf_internal_r+0x1d50>
  1032ac:	d9002d17 	ldw	r4,180(sp)
  1032b0:	d9402f17 	ldw	r5,188(sp)
  1032b4:	20800017 	ldw	r2,0(r4)
  1032b8:	21000104 	addi	r4,r4,4
  1032bc:	d9002d15 	stw	r4,180(sp)
  1032c0:	1140000d 	sth	r5,0(r2)
  1032c4:	003a1606 	br	101b20 <__alt_data_end+0xfff01b20>
  1032c8:	9080100c 	andi	r2,r18,64
  1032cc:	10008026 	beq	r2,zero,1034d0 <___vfprintf_internal_r+0x1a90>
  1032d0:	d8c02d17 	ldw	r3,180(sp)
  1032d4:	1cc0000f 	ldh	r19,0(r3)
  1032d8:	18c00104 	addi	r3,r3,4
  1032dc:	d8c02d15 	stw	r3,180(sp)
  1032e0:	982dd7fa 	srai	r22,r19,31
  1032e4:	b005883a 	mov	r2,r22
  1032e8:	003b1f06 	br	101f68 <__alt_data_end+0xfff01f68>
  1032ec:	9080100c 	andi	r2,r18,64
  1032f0:	d8002785 	stb	zero,158(sp)
  1032f4:	10008a1e 	bne	r2,zero,103520 <___vfprintf_internal_r+0x1ae0>
  1032f8:	d9402d17 	ldw	r5,180(sp)
  1032fc:	d8c02917 	ldw	r3,164(sp)
  103300:	002d883a 	mov	r22,zero
  103304:	28800104 	addi	r2,r5,4
  103308:	2cc00017 	ldw	r19,0(r5)
  10330c:	183e4b0e 	bge	r3,zero,102c3c <__alt_data_end+0xfff02c3c>
  103310:	9d86b03a 	or	r3,r19,r22
  103314:	d8802d15 	stw	r2,180(sp)
  103318:	183e4c1e 	bne	r3,zero,102c4c <__alt_data_end+0xfff02c4c>
  10331c:	0039883a 	mov	fp,zero
  103320:	0005883a 	mov	r2,zero
  103324:	003d4006 	br	102828 <__alt_data_end+0xfff02828>
  103328:	01400474 	movhi	r5,17
  10332c:	29414684 	addi	r5,r5,1306
  103330:	d9402b15 	stw	r5,172(sp)
  103334:	d9402b17 	ldw	r5,172(sp)
  103338:	1c47883a 	add	r3,r3,r17
  10333c:	10800044 	addi	r2,r2,1
  103340:	41400015 	stw	r5,0(r8)
  103344:	44400115 	stw	r17,4(r8)
  103348:	d8c02015 	stw	r3,128(sp)
  10334c:	d8801f15 	stw	r2,124(sp)
  103350:	010001c4 	movi	r4,7
  103354:	20bec816 	blt	r4,r2,102e78 <__alt_data_end+0xfff02e78>
  103358:	42000204 	addi	r8,r8,8
  10335c:	003ecd06 	br	102e94 <__alt_data_end+0xfff02e94>
  103360:	d9002917 	ldw	r4,164(sp)
  103364:	d8002785 	stb	zero,158(sp)
  103368:	203d2d16 	blt	r4,zero,102820 <__alt_data_end+0xfff02820>
  10336c:	00bfdfc4 	movi	r2,-129
  103370:	90a4703a 	and	r18,r18,r2
  103374:	003a9106 	br	101dbc <__alt_data_end+0xfff01dbc>
  103378:	01000474 	movhi	r4,17
  10337c:	21014684 	addi	r4,r4,1306
  103380:	d9002b15 	stw	r4,172(sp)
  103384:	003c0c06 	br	1023b8 <__alt_data_end+0xfff023b8>
  103388:	d9002c17 	ldw	r4,176(sp)
  10338c:	d9801e04 	addi	r6,sp,120
  103390:	b80b883a 	mov	r5,r23
  103394:	01085580 	call	108558 <__sprint_r>
  103398:	103aab1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  10339c:	d8c02017 	ldw	r3,128(sp)
  1033a0:	da000404 	addi	r8,sp,16
  1033a4:	003d4106 	br	1028ac <__alt_data_end+0xfff028ac>
  1033a8:	d8801f17 	ldw	r2,124(sp)
  1033ac:	01400474 	movhi	r5,17
  1033b0:	01000044 	movi	r4,1
  1033b4:	18c00044 	addi	r3,r3,1
  1033b8:	10800044 	addi	r2,r2,1
  1033bc:	29414604 	addi	r5,r5,1304
  1033c0:	41000115 	stw	r4,4(r8)
  1033c4:	41400015 	stw	r5,0(r8)
  1033c8:	d8c02015 	stw	r3,128(sp)
  1033cc:	d8801f15 	stw	r2,124(sp)
  1033d0:	010001c4 	movi	r4,7
  1033d4:	20805c16 	blt	r4,r2,103548 <___vfprintf_internal_r+0x1b08>
  1033d8:	42000204 	addi	r8,r8,8
  1033dc:	8800041e 	bne	r17,zero,1033f0 <___vfprintf_internal_r+0x19b0>
  1033e0:	d8803317 	ldw	r2,204(sp)
  1033e4:	1000021e 	bne	r2,zero,1033f0 <___vfprintf_internal_r+0x19b0>
  1033e8:	9080004c 	andi	r2,r18,1
  1033ec:	103c0926 	beq	r2,zero,102414 <__alt_data_end+0xfff02414>
  1033f0:	d9003717 	ldw	r4,220(sp)
  1033f4:	d8801f17 	ldw	r2,124(sp)
  1033f8:	d9403417 	ldw	r5,208(sp)
  1033fc:	20c7883a 	add	r3,r4,r3
  103400:	10800044 	addi	r2,r2,1
  103404:	41000115 	stw	r4,4(r8)
  103408:	41400015 	stw	r5,0(r8)
  10340c:	d8c02015 	stw	r3,128(sp)
  103410:	d8801f15 	stw	r2,124(sp)
  103414:	010001c4 	movi	r4,7
  103418:	20812116 	blt	r4,r2,1038a0 <___vfprintf_internal_r+0x1e60>
  10341c:	42000204 	addi	r8,r8,8
  103420:	0463c83a 	sub	r17,zero,r17
  103424:	0440730e 	bge	zero,r17,1035f4 <___vfprintf_internal_r+0x1bb4>
  103428:	05800404 	movi	r22,16
  10342c:	b440860e 	bge	r22,r17,103648 <___vfprintf_internal_r+0x1c08>
  103430:	01400474 	movhi	r5,17
  103434:	29414684 	addi	r5,r5,1306
  103438:	d9402b15 	stw	r5,172(sp)
  10343c:	070001c4 	movi	fp,7
  103440:	dcc02c17 	ldw	r19,176(sp)
  103444:	00000306 	br	103454 <___vfprintf_internal_r+0x1a14>
  103448:	42000204 	addi	r8,r8,8
  10344c:	8c7ffc04 	addi	r17,r17,-16
  103450:	b440800e 	bge	r22,r17,103654 <___vfprintf_internal_r+0x1c14>
  103454:	18c00404 	addi	r3,r3,16
  103458:	10800044 	addi	r2,r2,1
  10345c:	45000015 	stw	r20,0(r8)
  103460:	45800115 	stw	r22,4(r8)
  103464:	d8c02015 	stw	r3,128(sp)
  103468:	d8801f15 	stw	r2,124(sp)
  10346c:	e0bff60e 	bge	fp,r2,103448 <__alt_data_end+0xfff03448>
  103470:	d9801e04 	addi	r6,sp,120
  103474:	b80b883a 	mov	r5,r23
  103478:	9809883a 	mov	r4,r19
  10347c:	01085580 	call	108558 <__sprint_r>
  103480:	103a711e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  103484:	d8c02017 	ldw	r3,128(sp)
  103488:	d8801f17 	ldw	r2,124(sp)
  10348c:	da000404 	addi	r8,sp,16
  103490:	003fee06 	br	10344c <__alt_data_end+0xfff0344c>
  103494:	00bfffc4 	movi	r2,-1
  103498:	003a6f06 	br	101e58 <__alt_data_end+0xfff01e58>
  10349c:	008011c4 	movi	r2,71
  1034a0:	1440b816 	blt	r2,r17,103784 <___vfprintf_internal_r+0x1d44>
  1034a4:	04000474 	movhi	r16,17
  1034a8:	84013804 	addi	r16,r16,1248
  1034ac:	00c000c4 	movi	r3,3
  1034b0:	00bfdfc4 	movi	r2,-129
  1034b4:	d8c02a15 	stw	r3,168(sp)
  1034b8:	90a4703a 	and	r18,r18,r2
  1034bc:	df002783 	ldbu	fp,158(sp)
  1034c0:	d8c02e15 	stw	r3,184(sp)
  1034c4:	d8002915 	stw	zero,164(sp)
  1034c8:	d8003215 	stw	zero,200(sp)
  1034cc:	003b2906 	br	102174 <__alt_data_end+0xfff02174>
  1034d0:	d9002d17 	ldw	r4,180(sp)
  1034d4:	24c00017 	ldw	r19,0(r4)
  1034d8:	21000104 	addi	r4,r4,4
  1034dc:	d9002d15 	stw	r4,180(sp)
  1034e0:	982dd7fa 	srai	r22,r19,31
  1034e4:	b005883a 	mov	r2,r22
  1034e8:	003a9f06 	br	101f68 <__alt_data_end+0xfff01f68>
  1034ec:	d9402d17 	ldw	r5,180(sp)
  1034f0:	d8c02f17 	ldw	r3,188(sp)
  1034f4:	28800017 	ldw	r2,0(r5)
  1034f8:	29400104 	addi	r5,r5,4
  1034fc:	d9402d15 	stw	r5,180(sp)
  103500:	10c00015 	stw	r3,0(r2)
  103504:	00398606 	br	101b20 <__alt_data_end+0xfff01b20>
  103508:	d9402d17 	ldw	r5,180(sp)
  10350c:	002d883a 	mov	r22,zero
  103510:	2cc00017 	ldw	r19,0(r5)
  103514:	29400104 	addi	r5,r5,4
  103518:	d9402d15 	stw	r5,180(sp)
  10351c:	003c2306 	br	1025ac <__alt_data_end+0xfff025ac>
  103520:	d8c02d17 	ldw	r3,180(sp)
  103524:	d9002917 	ldw	r4,164(sp)
  103528:	002d883a 	mov	r22,zero
  10352c:	18800104 	addi	r2,r3,4
  103530:	1cc0000b 	ldhu	r19,0(r3)
  103534:	203dc10e 	bge	r4,zero,102c3c <__alt_data_end+0xfff02c3c>
  103538:	003f7506 	br	103310 <__alt_data_end+0xfff03310>
  10353c:	04000474 	movhi	r16,17
  103540:	84013604 	addi	r16,r16,1240
  103544:	003acc06 	br	102078 <__alt_data_end+0xfff02078>
  103548:	d9002c17 	ldw	r4,176(sp)
  10354c:	d9801e04 	addi	r6,sp,120
  103550:	b80b883a 	mov	r5,r23
  103554:	01085580 	call	108558 <__sprint_r>
  103558:	103a3b1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  10355c:	dc402617 	ldw	r17,152(sp)
  103560:	d8c02017 	ldw	r3,128(sp)
  103564:	da000404 	addi	r8,sp,16
  103568:	003f9c06 	br	1033dc <__alt_data_end+0xfff033dc>
  10356c:	ac400043 	ldbu	r17,1(r21)
  103570:	94800814 	ori	r18,r18,32
  103574:	ad400044 	addi	r21,r21,1
  103578:	8c403fcc 	andi	r17,r17,255
  10357c:	8c40201c 	xori	r17,r17,128
  103580:	8c7fe004 	addi	r17,r17,-128
  103584:	00398f06 	br	101bc4 <__alt_data_end+0xfff01bc4>
  103588:	d8c02d15 	stw	r3,180(sp)
  10358c:	0039883a 	mov	fp,zero
  103590:	003e3506 	br	102e68 <__alt_data_end+0xfff02e68>
  103594:	d9002c17 	ldw	r4,176(sp)
  103598:	d9801e04 	addi	r6,sp,120
  10359c:	b80b883a 	mov	r5,r23
  1035a0:	01085580 	call	108558 <__sprint_r>
  1035a4:	103a281e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  1035a8:	d8c02017 	ldw	r3,128(sp)
  1035ac:	da000404 	addi	r8,sp,16
  1035b0:	003cd006 	br	1028f4 <__alt_data_end+0xfff028f4>
  1035b4:	8009883a 	mov	r4,r16
  1035b8:	da003d15 	stw	r8,244(sp)
  1035bc:	01083c40 	call	1083c4 <strlen>
  1035c0:	d8802e15 	stw	r2,184(sp)
  1035c4:	da003d17 	ldw	r8,244(sp)
  1035c8:	103c340e 	bge	r2,zero,10269c <__alt_data_end+0xfff0269c>
  1035cc:	0005883a 	mov	r2,zero
  1035d0:	003c3206 	br	10269c <__alt_data_end+0xfff0269c>
  1035d4:	d9002c17 	ldw	r4,176(sp)
  1035d8:	d9801e04 	addi	r6,sp,120
  1035dc:	b80b883a 	mov	r5,r23
  1035e0:	01085580 	call	108558 <__sprint_r>
  1035e4:	103a181e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  1035e8:	d8c02017 	ldw	r3,128(sp)
  1035ec:	d8801f17 	ldw	r2,124(sp)
  1035f0:	da000404 	addi	r8,sp,16
  1035f4:	d9403317 	ldw	r5,204(sp)
  1035f8:	10800044 	addi	r2,r2,1
  1035fc:	44000015 	stw	r16,0(r8)
  103600:	28c7883a 	add	r3,r5,r3
  103604:	003b7d06 	br	1023fc <__alt_data_end+0xfff023fc>
  103608:	01000474 	movhi	r4,17
  10360c:	21014a84 	addi	r4,r4,1322
  103610:	d9003515 	stw	r4,212(sp)
  103614:	003b1406 	br	102268 <__alt_data_end+0xfff02268>
  103618:	013fffc4 	movi	r4,-1
  10361c:	003a3506 	br	101ef4 <__alt_data_end+0xfff01ef4>
  103620:	0023883a 	mov	r17,zero
  103624:	003d9d06 	br	102c9c <__alt_data_end+0xfff02c9c>
  103628:	d9002c17 	ldw	r4,176(sp)
  10362c:	d9801e04 	addi	r6,sp,120
  103630:	b80b883a 	mov	r5,r23
  103634:	01085580 	call	108558 <__sprint_r>
  103638:	103a031e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  10363c:	d8c02017 	ldw	r3,128(sp)
  103640:	da000404 	addi	r8,sp,16
  103644:	003d9406 	br	102c98 <__alt_data_end+0xfff02c98>
  103648:	01000474 	movhi	r4,17
  10364c:	21014684 	addi	r4,r4,1306
  103650:	d9002b15 	stw	r4,172(sp)
  103654:	d9002b17 	ldw	r4,172(sp)
  103658:	1c47883a 	add	r3,r3,r17
  10365c:	10800044 	addi	r2,r2,1
  103660:	41000015 	stw	r4,0(r8)
  103664:	44400115 	stw	r17,4(r8)
  103668:	d8c02015 	stw	r3,128(sp)
  10366c:	d8801f15 	stw	r2,124(sp)
  103670:	010001c4 	movi	r4,7
  103674:	20bfd716 	blt	r4,r2,1035d4 <__alt_data_end+0xfff035d4>
  103678:	42000204 	addi	r8,r8,8
  10367c:	003fdd06 	br	1035f4 <__alt_data_end+0xfff035f4>
  103680:	d9002c17 	ldw	r4,176(sp)
  103684:	d9801e04 	addi	r6,sp,120
  103688:	b80b883a 	mov	r5,r23
  10368c:	01085580 	call	108558 <__sprint_r>
  103690:	1039ed1e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  103694:	d8802617 	ldw	r2,152(sp)
  103698:	d8c02017 	ldw	r3,128(sp)
  10369c:	da000404 	addi	r8,sp,16
  1036a0:	003e1006 	br	102ee4 <__alt_data_end+0xfff02ee4>
  1036a4:	00800044 	movi	r2,1
  1036a8:	10803fcc 	andi	r2,r2,255
  1036ac:	00c00044 	movi	r3,1
  1036b0:	10fa3526 	beq	r2,r3,101f88 <__alt_data_end+0xfff01f88>
  1036b4:	00c00084 	movi	r3,2
  1036b8:	10fbcb26 	beq	r2,r3,1025e8 <__alt_data_end+0xfff025e8>
  1036bc:	003a8f06 	br	1020fc <__alt_data_end+0xfff020fc>
  1036c0:	01000474 	movhi	r4,17
  1036c4:	21014a84 	addi	r4,r4,1322
  1036c8:	d9003515 	stw	r4,212(sp)
  1036cc:	003b7606 	br	1024a8 <__alt_data_end+0xfff024a8>
  1036d0:	d8802917 	ldw	r2,164(sp)
  1036d4:	00c00184 	movi	r3,6
  1036d8:	1880012e 	bgeu	r3,r2,1036e0 <___vfprintf_internal_r+0x1ca0>
  1036dc:	1805883a 	mov	r2,r3
  1036e0:	d8802e15 	stw	r2,184(sp)
  1036e4:	1000ef16 	blt	r2,zero,103aa4 <___vfprintf_internal_r+0x2064>
  1036e8:	04000474 	movhi	r16,17
  1036ec:	d8802a15 	stw	r2,168(sp)
  1036f0:	dcc02d15 	stw	r19,180(sp)
  1036f4:	d8002915 	stw	zero,164(sp)
  1036f8:	d8003215 	stw	zero,200(sp)
  1036fc:	84014404 	addi	r16,r16,1296
  103700:	0039883a 	mov	fp,zero
  103704:	003aa206 	br	102190 <__alt_data_end+0xfff02190>
  103708:	0021883a 	mov	r16,zero
  10370c:	003e0706 	br	102f2c <__alt_data_end+0xfff02f2c>
  103710:	d9002c17 	ldw	r4,176(sp)
  103714:	d9801e04 	addi	r6,sp,120
  103718:	b80b883a 	mov	r5,r23
  10371c:	01085580 	call	108558 <__sprint_r>
  103720:	1039c91e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  103724:	d8802617 	ldw	r2,152(sp)
  103728:	d9403317 	ldw	r5,204(sp)
  10372c:	d8c02017 	ldw	r3,128(sp)
  103730:	da000404 	addi	r8,sp,16
  103734:	2885c83a 	sub	r2,r5,r2
  103738:	003dfb06 	br	102f28 <__alt_data_end+0xfff02f28>
  10373c:	9080004c 	andi	r2,r18,1
  103740:	103e8f1e 	bne	r2,zero,103180 <__alt_data_end+0xfff03180>
  103744:	d8802117 	ldw	r2,132(sp)
  103748:	003e9e06 	br	1031c4 <__alt_data_end+0xfff031c4>
  10374c:	1025883a 	mov	r18,r2
  103750:	0039883a 	mov	fp,zero
  103754:	00800084 	movi	r2,2
  103758:	003fd306 	br	1036a8 <__alt_data_end+0xfff036a8>
  10375c:	07000b44 	movi	fp,45
  103760:	df002785 	stb	fp,158(sp)
  103764:	003a4006 	br	102068 <__alt_data_end+0xfff02068>
  103768:	00c00b44 	movi	r3,45
  10376c:	d8c02785 	stb	r3,158(sp)
  103770:	d8802a15 	stw	r2,168(sp)
  103774:	dc802b17 	ldw	r18,172(sp)
  103778:	d8002915 	stw	zero,164(sp)
  10377c:	07000b44 	movi	fp,45
  103780:	003a8006 	br	102184 <__alt_data_end+0xfff02184>
  103784:	04000474 	movhi	r16,17
  103788:	84013904 	addi	r16,r16,1252
  10378c:	003f4706 	br	1034ac <__alt_data_end+0xfff034ac>
  103790:	d8c02d17 	ldw	r3,180(sp)
  103794:	d9002f17 	ldw	r4,188(sp)
  103798:	18800017 	ldw	r2,0(r3)
  10379c:	18c00104 	addi	r3,r3,4
  1037a0:	d8c02d15 	stw	r3,180(sp)
  1037a4:	11000015 	stw	r4,0(r2)
  1037a8:	0038dd06 	br	101b20 <__alt_data_end+0xfff01b20>
  1037ac:	dd802617 	ldw	r22,152(sp)
  1037b0:	00bfff44 	movi	r2,-3
  1037b4:	b0801c16 	blt	r22,r2,103828 <___vfprintf_internal_r+0x1de8>
  1037b8:	d9402917 	ldw	r5,164(sp)
  1037bc:	2d801a16 	blt	r5,r22,103828 <___vfprintf_internal_r+0x1de8>
  1037c0:	dd803215 	stw	r22,200(sp)
  1037c4:	003e8906 	br	1031ec <__alt_data_end+0xfff031ec>
  1037c8:	01000474 	movhi	r4,17
  1037cc:	21014684 	addi	r4,r4,1306
  1037d0:	d9002b15 	stw	r4,172(sp)
  1037d4:	003c9106 	br	102a1c <__alt_data_end+0xfff02a1c>
  1037d8:	e005883a 	mov	r2,fp
  1037dc:	003e7906 	br	1031c4 <__alt_data_end+0xfff031c4>
  1037e0:	d9402917 	ldw	r5,164(sp)
  1037e4:	df002783 	ldbu	fp,158(sp)
  1037e8:	dcc02d15 	stw	r19,180(sp)
  1037ec:	d9402a15 	stw	r5,168(sp)
  1037f0:	d9402e15 	stw	r5,184(sp)
  1037f4:	d8002915 	stw	zero,164(sp)
  1037f8:	d8003215 	stw	zero,200(sp)
  1037fc:	003a5d06 	br	102174 <__alt_data_end+0xfff02174>
  103800:	9080004c 	andi	r2,r18,1
  103804:	0039883a 	mov	fp,zero
  103808:	10000426 	beq	r2,zero,10381c <___vfprintf_internal_r+0x1ddc>
  10380c:	00800c04 	movi	r2,48
  103810:	dc001dc4 	addi	r16,sp,119
  103814:	d8801dc5 	stb	r2,119(sp)
  103818:	003b8006 	br	10261c <__alt_data_end+0xfff0261c>
  10381c:	d8002e15 	stw	zero,184(sp)
  103820:	dc001e04 	addi	r16,sp,120
  103824:	003a4d06 	br	10215c <__alt_data_end+0xfff0215c>
  103828:	8c7fff84 	addi	r17,r17,-2
  10382c:	b5bfffc4 	addi	r22,r22,-1
  103830:	dd802615 	stw	r22,152(sp)
  103834:	dc4022c5 	stb	r17,139(sp)
  103838:	b000bf16 	blt	r22,zero,103b38 <___vfprintf_internal_r+0x20f8>
  10383c:	00800ac4 	movi	r2,43
  103840:	d8802305 	stb	r2,140(sp)
  103844:	00800244 	movi	r2,9
  103848:	15807016 	blt	r2,r22,103a0c <___vfprintf_internal_r+0x1fcc>
  10384c:	00800c04 	movi	r2,48
  103850:	b5800c04 	addi	r22,r22,48
  103854:	d8802345 	stb	r2,141(sp)
  103858:	dd802385 	stb	r22,142(sp)
  10385c:	d88023c4 	addi	r2,sp,143
  103860:	df0022c4 	addi	fp,sp,139
  103864:	d8c03317 	ldw	r3,204(sp)
  103868:	1739c83a 	sub	fp,r2,fp
  10386c:	d9003317 	ldw	r4,204(sp)
  103870:	e0c7883a 	add	r3,fp,r3
  103874:	df003a15 	stw	fp,232(sp)
  103878:	d8c02e15 	stw	r3,184(sp)
  10387c:	00800044 	movi	r2,1
  103880:	1100b30e 	bge	r2,r4,103b50 <___vfprintf_internal_r+0x2110>
  103884:	d8c02e17 	ldw	r3,184(sp)
  103888:	18c00044 	addi	r3,r3,1
  10388c:	d8c02e15 	stw	r3,184(sp)
  103890:	1805883a 	mov	r2,r3
  103894:	1800ac16 	blt	r3,zero,103b48 <___vfprintf_internal_r+0x2108>
  103898:	d8003215 	stw	zero,200(sp)
  10389c:	003e5d06 	br	103214 <__alt_data_end+0xfff03214>
  1038a0:	d9002c17 	ldw	r4,176(sp)
  1038a4:	d9801e04 	addi	r6,sp,120
  1038a8:	b80b883a 	mov	r5,r23
  1038ac:	01085580 	call	108558 <__sprint_r>
  1038b0:	1039651e 	bne	r2,zero,101e48 <__alt_data_end+0xfff01e48>
  1038b4:	dc402617 	ldw	r17,152(sp)
  1038b8:	d8c02017 	ldw	r3,128(sp)
  1038bc:	d8801f17 	ldw	r2,124(sp)
  1038c0:	da000404 	addi	r8,sp,16
  1038c4:	003ed606 	br	103420 <__alt_data_end+0xfff03420>
  1038c8:	582b883a 	mov	r21,r11
  1038cc:	d8002915 	stw	zero,164(sp)
  1038d0:	0038bd06 	br	101bc8 <__alt_data_end+0xfff01bc8>
  1038d4:	d8802917 	ldw	r2,164(sp)
  1038d8:	103e071e 	bne	r2,zero,1030f8 <__alt_data_end+0xfff030f8>
  1038dc:	dc002915 	stw	r16,164(sp)
  1038e0:	003e0506 	br	1030f8 <__alt_data_end+0xfff030f8>
  1038e4:	d9002917 	ldw	r4,164(sp)
  1038e8:	20c00044 	addi	r3,r4,1
  1038ec:	003e0f06 	br	10312c <__alt_data_end+0xfff0312c>
  1038f0:	01400184 	movi	r5,6
  1038f4:	d9402915 	stw	r5,164(sp)
  1038f8:	003dff06 	br	1030f8 <__alt_data_end+0xfff030f8>
  1038fc:	d8802104 	addi	r2,sp,132
  103900:	d8800315 	stw	r2,12(sp)
  103904:	d8802504 	addi	r2,sp,148
  103908:	d8800215 	stw	r2,8(sp)
  10390c:	d8802604 	addi	r2,sp,152
  103910:	d8800115 	stw	r2,4(sp)
  103914:	d8802917 	ldw	r2,164(sp)
  103918:	d9403617 	ldw	r5,216(sp)
  10391c:	d9002c17 	ldw	r4,176(sp)
  103920:	d8800015 	stw	r2,0(sp)
  103924:	01c000c4 	movi	r7,3
  103928:	980d883a 	mov	r6,r19
  10392c:	da003d15 	stw	r8,244(sp)
  103930:	01040640 	call	104064 <_dtoa_r>
  103934:	d8c02917 	ldw	r3,164(sp)
  103938:	da003d17 	ldw	r8,244(sp)
  10393c:	1021883a 	mov	r16,r2
  103940:	10f9883a 	add	fp,r2,r3
  103944:	81000007 	ldb	r4,0(r16)
  103948:	00800c04 	movi	r2,48
  10394c:	20805e26 	beq	r4,r2,103ac8 <___vfprintf_internal_r+0x2088>
  103950:	d8c02617 	ldw	r3,152(sp)
  103954:	e0f9883a 	add	fp,fp,r3
  103958:	003e0a06 	br	103184 <__alt_data_end+0xfff03184>
  10395c:	00c00b44 	movi	r3,45
  103960:	24e0003c 	xorhi	r19,r4,32768
  103964:	d8c02a05 	stb	r3,168(sp)
  103968:	003de906 	br	103110 <__alt_data_end+0xfff03110>
  10396c:	d8c03217 	ldw	r3,200(sp)
  103970:	00c07a0e 	bge	zero,r3,103b5c <___vfprintf_internal_r+0x211c>
  103974:	00800044 	movi	r2,1
  103978:	d9003317 	ldw	r4,204(sp)
  10397c:	1105883a 	add	r2,r2,r4
  103980:	d8802e15 	stw	r2,184(sp)
  103984:	10004e16 	blt	r2,zero,103ac0 <___vfprintf_internal_r+0x2080>
  103988:	044019c4 	movi	r17,103
  10398c:	003e2106 	br	103214 <__alt_data_end+0xfff03214>
  103990:	d9002917 	ldw	r4,164(sp)
  103994:	d8802104 	addi	r2,sp,132
  103998:	d8800315 	stw	r2,12(sp)
  10399c:	d9000015 	stw	r4,0(sp)
  1039a0:	d8802504 	addi	r2,sp,148
  1039a4:	d9403617 	ldw	r5,216(sp)
  1039a8:	d9002c17 	ldw	r4,176(sp)
  1039ac:	d8800215 	stw	r2,8(sp)
  1039b0:	d8802604 	addi	r2,sp,152
  1039b4:	d8800115 	stw	r2,4(sp)
  1039b8:	01c000c4 	movi	r7,3
  1039bc:	980d883a 	mov	r6,r19
  1039c0:	da003d15 	stw	r8,244(sp)
  1039c4:	01040640 	call	104064 <_dtoa_r>
  1039c8:	d8c02917 	ldw	r3,164(sp)
  1039cc:	da003d17 	ldw	r8,244(sp)
  1039d0:	1021883a 	mov	r16,r2
  1039d4:	00801184 	movi	r2,70
  1039d8:	80f9883a 	add	fp,r16,r3
  1039dc:	88bfd926 	beq	r17,r2,103944 <__alt_data_end+0xfff03944>
  1039e0:	003de806 	br	103184 <__alt_data_end+0xfff03184>
  1039e4:	d9002917 	ldw	r4,164(sp)
  1039e8:	00c04d0e 	bge	zero,r3,103b20 <___vfprintf_internal_r+0x20e0>
  1039ec:	2000441e 	bne	r4,zero,103b00 <___vfprintf_internal_r+0x20c0>
  1039f0:	9480004c 	andi	r18,r18,1
  1039f4:	9000421e 	bne	r18,zero,103b00 <___vfprintf_internal_r+0x20c0>
  1039f8:	1805883a 	mov	r2,r3
  1039fc:	18007016 	blt	r3,zero,103bc0 <___vfprintf_internal_r+0x2180>
  103a00:	d8c03217 	ldw	r3,200(sp)
  103a04:	d8c02e15 	stw	r3,184(sp)
  103a08:	003e0206 	br	103214 <__alt_data_end+0xfff03214>
  103a0c:	df0022c4 	addi	fp,sp,139
  103a10:	dc002915 	stw	r16,164(sp)
  103a14:	4027883a 	mov	r19,r8
  103a18:	e021883a 	mov	r16,fp
  103a1c:	b009883a 	mov	r4,r22
  103a20:	01400284 	movi	r5,10
  103a24:	0100e700 	call	100e70 <__modsi3>
  103a28:	10800c04 	addi	r2,r2,48
  103a2c:	843fffc4 	addi	r16,r16,-1
  103a30:	b009883a 	mov	r4,r22
  103a34:	01400284 	movi	r5,10
  103a38:	80800005 	stb	r2,0(r16)
  103a3c:	0100dec0 	call	100dec <__divsi3>
  103a40:	102d883a 	mov	r22,r2
  103a44:	00800244 	movi	r2,9
  103a48:	15bff416 	blt	r2,r22,103a1c <__alt_data_end+0xfff03a1c>
  103a4c:	9811883a 	mov	r8,r19
  103a50:	b0800c04 	addi	r2,r22,48
  103a54:	8027883a 	mov	r19,r16
  103a58:	997fffc4 	addi	r5,r19,-1
  103a5c:	98bfffc5 	stb	r2,-1(r19)
  103a60:	dc002917 	ldw	r16,164(sp)
  103a64:	2f006a2e 	bgeu	r5,fp,103c10 <___vfprintf_internal_r+0x21d0>
  103a68:	d9c02384 	addi	r7,sp,142
  103a6c:	3ccfc83a 	sub	r7,r7,r19
  103a70:	d9002344 	addi	r4,sp,141
  103a74:	e1cf883a 	add	r7,fp,r7
  103a78:	00000106 	br	103a80 <___vfprintf_internal_r+0x2040>
  103a7c:	28800003 	ldbu	r2,0(r5)
  103a80:	20800005 	stb	r2,0(r4)
  103a84:	21000044 	addi	r4,r4,1
  103a88:	29400044 	addi	r5,r5,1
  103a8c:	393ffb1e 	bne	r7,r4,103a7c <__alt_data_end+0xfff03a7c>
  103a90:	d8802304 	addi	r2,sp,140
  103a94:	14c5c83a 	sub	r2,r2,r19
  103a98:	d8c02344 	addi	r3,sp,141
  103a9c:	1885883a 	add	r2,r3,r2
  103aa0:	003f7006 	br	103864 <__alt_data_end+0xfff03864>
  103aa4:	0005883a 	mov	r2,zero
  103aa8:	003f0f06 	br	1036e8 <__alt_data_end+0xfff036e8>
  103aac:	d8c03217 	ldw	r3,200(sp)
  103ab0:	18c00044 	addi	r3,r3,1
  103ab4:	d8c02e15 	stw	r3,184(sp)
  103ab8:	1805883a 	mov	r2,r3
  103abc:	183fb20e 	bge	r3,zero,103988 <__alt_data_end+0xfff03988>
  103ac0:	0005883a 	mov	r2,zero
  103ac4:	003fb006 	br	103988 <__alt_data_end+0xfff03988>
  103ac8:	d9003617 	ldw	r4,216(sp)
  103acc:	000d883a 	mov	r6,zero
  103ad0:	000f883a 	mov	r7,zero
  103ad4:	980b883a 	mov	r5,r19
  103ad8:	d8c03c15 	stw	r3,240(sp)
  103adc:	da003d15 	stw	r8,244(sp)
  103ae0:	010cb980 	call	10cb98 <__eqdf2>
  103ae4:	d8c03c17 	ldw	r3,240(sp)
  103ae8:	da003d17 	ldw	r8,244(sp)
  103aec:	103f9826 	beq	r2,zero,103950 <__alt_data_end+0xfff03950>
  103af0:	00800044 	movi	r2,1
  103af4:	10c7c83a 	sub	r3,r2,r3
  103af8:	d8c02615 	stw	r3,152(sp)
  103afc:	003f9506 	br	103954 <__alt_data_end+0xfff03954>
  103b00:	d9002917 	ldw	r4,164(sp)
  103b04:	d8c03217 	ldw	r3,200(sp)
  103b08:	20800044 	addi	r2,r4,1
  103b0c:	1885883a 	add	r2,r3,r2
  103b10:	d8802e15 	stw	r2,184(sp)
  103b14:	103dbf0e 	bge	r2,zero,103214 <__alt_data_end+0xfff03214>
  103b18:	0005883a 	mov	r2,zero
  103b1c:	003dbd06 	br	103214 <__alt_data_end+0xfff03214>
  103b20:	2000211e 	bne	r4,zero,103ba8 <___vfprintf_internal_r+0x2168>
  103b24:	9480004c 	andi	r18,r18,1
  103b28:	90001f1e 	bne	r18,zero,103ba8 <___vfprintf_internal_r+0x2168>
  103b2c:	00800044 	movi	r2,1
  103b30:	d8802e15 	stw	r2,184(sp)
  103b34:	003db706 	br	103214 <__alt_data_end+0xfff03214>
  103b38:	00800b44 	movi	r2,45
  103b3c:	05adc83a 	sub	r22,zero,r22
  103b40:	d8802305 	stb	r2,140(sp)
  103b44:	003f3f06 	br	103844 <__alt_data_end+0xfff03844>
  103b48:	0005883a 	mov	r2,zero
  103b4c:	003f5206 	br	103898 <__alt_data_end+0xfff03898>
  103b50:	90a4703a 	and	r18,r18,r2
  103b54:	903f4e26 	beq	r18,zero,103890 <__alt_data_end+0xfff03890>
  103b58:	003f4a06 	br	103884 <__alt_data_end+0xfff03884>
  103b5c:	00800084 	movi	r2,2
  103b60:	10c5c83a 	sub	r2,r2,r3
  103b64:	003f8406 	br	103978 <__alt_data_end+0xfff03978>
  103b68:	d8802d17 	ldw	r2,180(sp)
  103b6c:	d9002d17 	ldw	r4,180(sp)
  103b70:	ac400043 	ldbu	r17,1(r21)
  103b74:	10800017 	ldw	r2,0(r2)
  103b78:	582b883a 	mov	r21,r11
  103b7c:	d8802915 	stw	r2,164(sp)
  103b80:	20800104 	addi	r2,r4,4
  103b84:	d9002917 	ldw	r4,164(sp)
  103b88:	d8802d15 	stw	r2,180(sp)
  103b8c:	203e7a0e 	bge	r4,zero,103578 <__alt_data_end+0xfff03578>
  103b90:	8c403fcc 	andi	r17,r17,255
  103b94:	00bfffc4 	movi	r2,-1
  103b98:	8c40201c 	xori	r17,r17,128
  103b9c:	d8802915 	stw	r2,164(sp)
  103ba0:	8c7fe004 	addi	r17,r17,-128
  103ba4:	00380706 	br	101bc4 <__alt_data_end+0xfff01bc4>
  103ba8:	d8c02917 	ldw	r3,164(sp)
  103bac:	18c00084 	addi	r3,r3,2
  103bb0:	d8c02e15 	stw	r3,184(sp)
  103bb4:	1805883a 	mov	r2,r3
  103bb8:	183d960e 	bge	r3,zero,103214 <__alt_data_end+0xfff03214>
  103bbc:	003fd606 	br	103b18 <__alt_data_end+0xfff03b18>
  103bc0:	0005883a 	mov	r2,zero
  103bc4:	003f8e06 	br	103a00 <__alt_data_end+0xfff03a00>
  103bc8:	9080004c 	andi	r2,r18,1
  103bcc:	103f811e 	bne	r2,zero,1039d4 <__alt_data_end+0xfff039d4>
  103bd0:	d8802117 	ldw	r2,132(sp)
  103bd4:	1405c83a 	sub	r2,r2,r16
  103bd8:	d8803315 	stw	r2,204(sp)
  103bdc:	b47ef326 	beq	r22,r17,1037ac <__alt_data_end+0xfff037ac>
  103be0:	dd802617 	ldw	r22,152(sp)
  103be4:	003f1106 	br	10382c <__alt_data_end+0xfff0382c>
  103be8:	d9c02785 	stb	r7,158(sp)
  103bec:	00390406 	br	102000 <__alt_data_end+0xfff02000>
  103bf0:	d9c02785 	stb	r7,158(sp)
  103bf4:	0038d306 	br	101f44 <__alt_data_end+0xfff01f44>
  103bf8:	d9c02785 	stb	r7,158(sp)
  103bfc:	003a6106 	br	102584 <__alt_data_end+0xfff02584>
  103c00:	d9c02785 	stb	r7,158(sp)
  103c04:	003af806 	br	1027e8 <__alt_data_end+0xfff027e8>
  103c08:	0005883a 	mov	r2,zero
  103c0c:	003d7e06 	br	103208 <__alt_data_end+0xfff03208>
  103c10:	d8802344 	addi	r2,sp,141
  103c14:	003f1306 	br	103864 <__alt_data_end+0xfff03864>
  103c18:	d9c02785 	stb	r7,158(sp)
  103c1c:	00392306 	br	1020ac <__alt_data_end+0xfff020ac>
  103c20:	d9c02785 	stb	r7,158(sp)
  103c24:	003aa906 	br	1026cc <__alt_data_end+0xfff026cc>
  103c28:	d9c02785 	stb	r7,158(sp)
  103c2c:	003a3d06 	br	102524 <__alt_data_end+0xfff02524>
  103c30:	d9c02785 	stb	r7,158(sp)
  103c34:	003aca06 	br	102760 <__alt_data_end+0xfff02760>

00103c38 <__vfprintf_internal>:
  103c38:	00800474 	movhi	r2,17
  103c3c:	1085ac04 	addi	r2,r2,5808
  103c40:	300f883a 	mov	r7,r6
  103c44:	280d883a 	mov	r6,r5
  103c48:	200b883a 	mov	r5,r4
  103c4c:	11000017 	ldw	r4,0(r2)
  103c50:	0101a401 	jmpi	101a40 <___vfprintf_internal_r>

00103c54 <__sbprintf>:
  103c54:	2880030b 	ldhu	r2,12(r5)
  103c58:	2ac01917 	ldw	r11,100(r5)
  103c5c:	2a80038b 	ldhu	r10,14(r5)
  103c60:	2a400717 	ldw	r9,28(r5)
  103c64:	2a000917 	ldw	r8,36(r5)
  103c68:	defee204 	addi	sp,sp,-1144
  103c6c:	00c10004 	movi	r3,1024
  103c70:	dc011a15 	stw	r16,1128(sp)
  103c74:	10bfff4c 	andi	r2,r2,65533
  103c78:	2821883a 	mov	r16,r5
  103c7c:	d8cb883a 	add	r5,sp,r3
  103c80:	dc811c15 	stw	r18,1136(sp)
  103c84:	dc411b15 	stw	r17,1132(sp)
  103c88:	dfc11d15 	stw	ra,1140(sp)
  103c8c:	2025883a 	mov	r18,r4
  103c90:	d881030d 	sth	r2,1036(sp)
  103c94:	dac11915 	stw	r11,1124(sp)
  103c98:	da81038d 	sth	r10,1038(sp)
  103c9c:	da410715 	stw	r9,1052(sp)
  103ca0:	da010915 	stw	r8,1060(sp)
  103ca4:	dec10015 	stw	sp,1024(sp)
  103ca8:	dec10415 	stw	sp,1040(sp)
  103cac:	d8c10215 	stw	r3,1032(sp)
  103cb0:	d8c10515 	stw	r3,1044(sp)
  103cb4:	d8010615 	stw	zero,1048(sp)
  103cb8:	0101a400 	call	101a40 <___vfprintf_internal_r>
  103cbc:	1023883a 	mov	r17,r2
  103cc0:	10000416 	blt	r2,zero,103cd4 <__sbprintf+0x80>
  103cc4:	d9410004 	addi	r5,sp,1024
  103cc8:	9009883a 	mov	r4,r18
  103ccc:	01059080 	call	105908 <_fflush_r>
  103cd0:	10000d1e 	bne	r2,zero,103d08 <__sbprintf+0xb4>
  103cd4:	d881030b 	ldhu	r2,1036(sp)
  103cd8:	1080100c 	andi	r2,r2,64
  103cdc:	10000326 	beq	r2,zero,103cec <__sbprintf+0x98>
  103ce0:	8080030b 	ldhu	r2,12(r16)
  103ce4:	10801014 	ori	r2,r2,64
  103ce8:	8080030d 	sth	r2,12(r16)
  103cec:	8805883a 	mov	r2,r17
  103cf0:	dfc11d17 	ldw	ra,1140(sp)
  103cf4:	dc811c17 	ldw	r18,1136(sp)
  103cf8:	dc411b17 	ldw	r17,1132(sp)
  103cfc:	dc011a17 	ldw	r16,1128(sp)
  103d00:	dec11e04 	addi	sp,sp,1144
  103d04:	f800283a 	ret
  103d08:	047fffc4 	movi	r17,-1
  103d0c:	003ff106 	br	103cd4 <__alt_data_end+0xfff03cd4>

00103d10 <__swsetup_r>:
  103d10:	00800474 	movhi	r2,17
  103d14:	defffd04 	addi	sp,sp,-12
  103d18:	1085ac04 	addi	r2,r2,5808
  103d1c:	dc400115 	stw	r17,4(sp)
  103d20:	2023883a 	mov	r17,r4
  103d24:	11000017 	ldw	r4,0(r2)
  103d28:	dc000015 	stw	r16,0(sp)
  103d2c:	dfc00215 	stw	ra,8(sp)
  103d30:	2821883a 	mov	r16,r5
  103d34:	20000226 	beq	r4,zero,103d40 <__swsetup_r+0x30>
  103d38:	20800e17 	ldw	r2,56(r4)
  103d3c:	10003126 	beq	r2,zero,103e04 <__swsetup_r+0xf4>
  103d40:	8080030b 	ldhu	r2,12(r16)
  103d44:	10c0020c 	andi	r3,r2,8
  103d48:	1009883a 	mov	r4,r2
  103d4c:	18000f26 	beq	r3,zero,103d8c <__swsetup_r+0x7c>
  103d50:	80c00417 	ldw	r3,16(r16)
  103d54:	18001526 	beq	r3,zero,103dac <__swsetup_r+0x9c>
  103d58:	1100004c 	andi	r4,r2,1
  103d5c:	20001c1e 	bne	r4,zero,103dd0 <__swsetup_r+0xc0>
  103d60:	1080008c 	andi	r2,r2,2
  103d64:	1000291e 	bne	r2,zero,103e0c <__swsetup_r+0xfc>
  103d68:	80800517 	ldw	r2,20(r16)
  103d6c:	80800215 	stw	r2,8(r16)
  103d70:	18001c26 	beq	r3,zero,103de4 <__swsetup_r+0xd4>
  103d74:	0005883a 	mov	r2,zero
  103d78:	dfc00217 	ldw	ra,8(sp)
  103d7c:	dc400117 	ldw	r17,4(sp)
  103d80:	dc000017 	ldw	r16,0(sp)
  103d84:	dec00304 	addi	sp,sp,12
  103d88:	f800283a 	ret
  103d8c:	2080040c 	andi	r2,r4,16
  103d90:	10002e26 	beq	r2,zero,103e4c <__swsetup_r+0x13c>
  103d94:	2080010c 	andi	r2,r4,4
  103d98:	10001e1e 	bne	r2,zero,103e14 <__swsetup_r+0x104>
  103d9c:	80c00417 	ldw	r3,16(r16)
  103da0:	20800214 	ori	r2,r4,8
  103da4:	8080030d 	sth	r2,12(r16)
  103da8:	183feb1e 	bne	r3,zero,103d58 <__alt_data_end+0xfff03d58>
  103dac:	1100a00c 	andi	r4,r2,640
  103db0:	01408004 	movi	r5,512
  103db4:	217fe826 	beq	r4,r5,103d58 <__alt_data_end+0xfff03d58>
  103db8:	800b883a 	mov	r5,r16
  103dbc:	8809883a 	mov	r4,r17
  103dc0:	01063cc0 	call	1063cc <__smakebuf_r>
  103dc4:	8080030b 	ldhu	r2,12(r16)
  103dc8:	80c00417 	ldw	r3,16(r16)
  103dcc:	003fe206 	br	103d58 <__alt_data_end+0xfff03d58>
  103dd0:	80800517 	ldw	r2,20(r16)
  103dd4:	80000215 	stw	zero,8(r16)
  103dd8:	0085c83a 	sub	r2,zero,r2
  103ddc:	80800615 	stw	r2,24(r16)
  103de0:	183fe41e 	bne	r3,zero,103d74 <__alt_data_end+0xfff03d74>
  103de4:	80c0030b 	ldhu	r3,12(r16)
  103de8:	0005883a 	mov	r2,zero
  103dec:	1900200c 	andi	r4,r3,128
  103df0:	203fe126 	beq	r4,zero,103d78 <__alt_data_end+0xfff03d78>
  103df4:	18c01014 	ori	r3,r3,64
  103df8:	80c0030d 	sth	r3,12(r16)
  103dfc:	00bfffc4 	movi	r2,-1
  103e00:	003fdd06 	br	103d78 <__alt_data_end+0xfff03d78>
  103e04:	0105ce40 	call	105ce4 <__sinit>
  103e08:	003fcd06 	br	103d40 <__alt_data_end+0xfff03d40>
  103e0c:	0005883a 	mov	r2,zero
  103e10:	003fd606 	br	103d6c <__alt_data_end+0xfff03d6c>
  103e14:	81400c17 	ldw	r5,48(r16)
  103e18:	28000626 	beq	r5,zero,103e34 <__swsetup_r+0x124>
  103e1c:	80801004 	addi	r2,r16,64
  103e20:	28800326 	beq	r5,r2,103e30 <__swsetup_r+0x120>
  103e24:	8809883a 	mov	r4,r17
  103e28:	0105e580 	call	105e58 <_free_r>
  103e2c:	8100030b 	ldhu	r4,12(r16)
  103e30:	80000c15 	stw	zero,48(r16)
  103e34:	80c00417 	ldw	r3,16(r16)
  103e38:	00bff6c4 	movi	r2,-37
  103e3c:	1108703a 	and	r4,r2,r4
  103e40:	80000115 	stw	zero,4(r16)
  103e44:	80c00015 	stw	r3,0(r16)
  103e48:	003fd506 	br	103da0 <__alt_data_end+0xfff03da0>
  103e4c:	00800244 	movi	r2,9
  103e50:	88800015 	stw	r2,0(r17)
  103e54:	20801014 	ori	r2,r4,64
  103e58:	8080030d 	sth	r2,12(r16)
  103e5c:	00bfffc4 	movi	r2,-1
  103e60:	003fc506 	br	103d78 <__alt_data_end+0xfff03d78>

00103e64 <quorem>:
  103e64:	defff704 	addi	sp,sp,-36
  103e68:	dc800215 	stw	r18,8(sp)
  103e6c:	20800417 	ldw	r2,16(r4)
  103e70:	2c800417 	ldw	r18,16(r5)
  103e74:	dfc00815 	stw	ra,32(sp)
  103e78:	ddc00715 	stw	r23,28(sp)
  103e7c:	dd800615 	stw	r22,24(sp)
  103e80:	dd400515 	stw	r21,20(sp)
  103e84:	dd000415 	stw	r20,16(sp)
  103e88:	dcc00315 	stw	r19,12(sp)
  103e8c:	dc400115 	stw	r17,4(sp)
  103e90:	dc000015 	stw	r16,0(sp)
  103e94:	14807116 	blt	r2,r18,10405c <quorem+0x1f8>
  103e98:	94bfffc4 	addi	r18,r18,-1
  103e9c:	94ad883a 	add	r22,r18,r18
  103ea0:	b5ad883a 	add	r22,r22,r22
  103ea4:	2c400504 	addi	r17,r5,20
  103ea8:	8da9883a 	add	r20,r17,r22
  103eac:	25400504 	addi	r21,r4,20
  103eb0:	282f883a 	mov	r23,r5
  103eb4:	adad883a 	add	r22,r21,r22
  103eb8:	a1400017 	ldw	r5,0(r20)
  103ebc:	2021883a 	mov	r16,r4
  103ec0:	b1000017 	ldw	r4,0(r22)
  103ec4:	29400044 	addi	r5,r5,1
  103ec8:	0100ee40 	call	100ee4 <__udivsi3>
  103ecc:	1027883a 	mov	r19,r2
  103ed0:	10002c26 	beq	r2,zero,103f84 <quorem+0x120>
  103ed4:	a813883a 	mov	r9,r21
  103ed8:	880b883a 	mov	r5,r17
  103edc:	0009883a 	mov	r4,zero
  103ee0:	000d883a 	mov	r6,zero
  103ee4:	2a000017 	ldw	r8,0(r5)
  103ee8:	49c00017 	ldw	r7,0(r9)
  103eec:	29400104 	addi	r5,r5,4
  103ef0:	40bfffcc 	andi	r2,r8,65535
  103ef4:	14c5383a 	mul	r2,r2,r19
  103ef8:	4010d43a 	srli	r8,r8,16
  103efc:	38ffffcc 	andi	r3,r7,65535
  103f00:	1105883a 	add	r2,r2,r4
  103f04:	1008d43a 	srli	r4,r2,16
  103f08:	44d1383a 	mul	r8,r8,r19
  103f0c:	198d883a 	add	r6,r3,r6
  103f10:	10ffffcc 	andi	r3,r2,65535
  103f14:	30c7c83a 	sub	r3,r6,r3
  103f18:	380ed43a 	srli	r7,r7,16
  103f1c:	4105883a 	add	r2,r8,r4
  103f20:	180dd43a 	srai	r6,r3,16
  103f24:	113fffcc 	andi	r4,r2,65535
  103f28:	390fc83a 	sub	r7,r7,r4
  103f2c:	398d883a 	add	r6,r7,r6
  103f30:	300e943a 	slli	r7,r6,16
  103f34:	18ffffcc 	andi	r3,r3,65535
  103f38:	1008d43a 	srli	r4,r2,16
  103f3c:	38ceb03a 	or	r7,r7,r3
  103f40:	49c00015 	stw	r7,0(r9)
  103f44:	300dd43a 	srai	r6,r6,16
  103f48:	4a400104 	addi	r9,r9,4
  103f4c:	a17fe52e 	bgeu	r20,r5,103ee4 <__alt_data_end+0xfff03ee4>
  103f50:	b0800017 	ldw	r2,0(r22)
  103f54:	10000b1e 	bne	r2,zero,103f84 <quorem+0x120>
  103f58:	b0bfff04 	addi	r2,r22,-4
  103f5c:	a880082e 	bgeu	r21,r2,103f80 <quorem+0x11c>
  103f60:	b0ffff17 	ldw	r3,-4(r22)
  103f64:	18000326 	beq	r3,zero,103f74 <quorem+0x110>
  103f68:	00000506 	br	103f80 <quorem+0x11c>
  103f6c:	10c00017 	ldw	r3,0(r2)
  103f70:	1800031e 	bne	r3,zero,103f80 <quorem+0x11c>
  103f74:	10bfff04 	addi	r2,r2,-4
  103f78:	94bfffc4 	addi	r18,r18,-1
  103f7c:	a8bffb36 	bltu	r21,r2,103f6c <__alt_data_end+0xfff03f6c>
  103f80:	84800415 	stw	r18,16(r16)
  103f84:	b80b883a 	mov	r5,r23
  103f88:	8009883a 	mov	r4,r16
  103f8c:	01079b00 	call	1079b0 <__mcmp>
  103f90:	10002616 	blt	r2,zero,10402c <quorem+0x1c8>
  103f94:	9cc00044 	addi	r19,r19,1
  103f98:	a805883a 	mov	r2,r21
  103f9c:	000b883a 	mov	r5,zero
  103fa0:	11000017 	ldw	r4,0(r2)
  103fa4:	89800017 	ldw	r6,0(r17)
  103fa8:	10800104 	addi	r2,r2,4
  103fac:	20ffffcc 	andi	r3,r4,65535
  103fb0:	194b883a 	add	r5,r3,r5
  103fb4:	30ffffcc 	andi	r3,r6,65535
  103fb8:	28c7c83a 	sub	r3,r5,r3
  103fbc:	300cd43a 	srli	r6,r6,16
  103fc0:	2008d43a 	srli	r4,r4,16
  103fc4:	180bd43a 	srai	r5,r3,16
  103fc8:	18ffffcc 	andi	r3,r3,65535
  103fcc:	2189c83a 	sub	r4,r4,r6
  103fd0:	2149883a 	add	r4,r4,r5
  103fd4:	200c943a 	slli	r6,r4,16
  103fd8:	8c400104 	addi	r17,r17,4
  103fdc:	200bd43a 	srai	r5,r4,16
  103fe0:	30c6b03a 	or	r3,r6,r3
  103fe4:	10ffff15 	stw	r3,-4(r2)
  103fe8:	a47fed2e 	bgeu	r20,r17,103fa0 <__alt_data_end+0xfff03fa0>
  103fec:	9485883a 	add	r2,r18,r18
  103ff0:	1085883a 	add	r2,r2,r2
  103ff4:	a887883a 	add	r3,r21,r2
  103ff8:	18800017 	ldw	r2,0(r3)
  103ffc:	10000b1e 	bne	r2,zero,10402c <quorem+0x1c8>
  104000:	18bfff04 	addi	r2,r3,-4
  104004:	a880082e 	bgeu	r21,r2,104028 <quorem+0x1c4>
  104008:	18ffff17 	ldw	r3,-4(r3)
  10400c:	18000326 	beq	r3,zero,10401c <quorem+0x1b8>
  104010:	00000506 	br	104028 <quorem+0x1c4>
  104014:	10c00017 	ldw	r3,0(r2)
  104018:	1800031e 	bne	r3,zero,104028 <quorem+0x1c4>
  10401c:	10bfff04 	addi	r2,r2,-4
  104020:	94bfffc4 	addi	r18,r18,-1
  104024:	a8bffb36 	bltu	r21,r2,104014 <__alt_data_end+0xfff04014>
  104028:	84800415 	stw	r18,16(r16)
  10402c:	9805883a 	mov	r2,r19
  104030:	dfc00817 	ldw	ra,32(sp)
  104034:	ddc00717 	ldw	r23,28(sp)
  104038:	dd800617 	ldw	r22,24(sp)
  10403c:	dd400517 	ldw	r21,20(sp)
  104040:	dd000417 	ldw	r20,16(sp)
  104044:	dcc00317 	ldw	r19,12(sp)
  104048:	dc800217 	ldw	r18,8(sp)
  10404c:	dc400117 	ldw	r17,4(sp)
  104050:	dc000017 	ldw	r16,0(sp)
  104054:	dec00904 	addi	sp,sp,36
  104058:	f800283a 	ret
  10405c:	0005883a 	mov	r2,zero
  104060:	003ff306 	br	104030 <__alt_data_end+0xfff04030>

00104064 <_dtoa_r>:
  104064:	20801017 	ldw	r2,64(r4)
  104068:	deffde04 	addi	sp,sp,-136
  10406c:	df002015 	stw	fp,128(sp)
  104070:	dcc01b15 	stw	r19,108(sp)
  104074:	dc801a15 	stw	r18,104(sp)
  104078:	dc401915 	stw	r17,100(sp)
  10407c:	dc001815 	stw	r16,96(sp)
  104080:	dfc02115 	stw	ra,132(sp)
  104084:	ddc01f15 	stw	r23,124(sp)
  104088:	dd801e15 	stw	r22,120(sp)
  10408c:	dd401d15 	stw	r21,116(sp)
  104090:	dd001c15 	stw	r20,112(sp)
  104094:	d9c00315 	stw	r7,12(sp)
  104098:	2039883a 	mov	fp,r4
  10409c:	3023883a 	mov	r17,r6
  1040a0:	2825883a 	mov	r18,r5
  1040a4:	dc002417 	ldw	r16,144(sp)
  1040a8:	3027883a 	mov	r19,r6
  1040ac:	10000826 	beq	r2,zero,1040d0 <_dtoa_r+0x6c>
  1040b0:	21801117 	ldw	r6,68(r4)
  1040b4:	00c00044 	movi	r3,1
  1040b8:	100b883a 	mov	r5,r2
  1040bc:	1986983a 	sll	r3,r3,r6
  1040c0:	11800115 	stw	r6,4(r2)
  1040c4:	10c00215 	stw	r3,8(r2)
  1040c8:	01071900 	call	107190 <_Bfree>
  1040cc:	e0001015 	stw	zero,64(fp)
  1040d0:	88002e16 	blt	r17,zero,10418c <_dtoa_r+0x128>
  1040d4:	80000015 	stw	zero,0(r16)
  1040d8:	889ffc2c 	andhi	r2,r17,32752
  1040dc:	00dffc34 	movhi	r3,32752
  1040e0:	10c01c26 	beq	r2,r3,104154 <_dtoa_r+0xf0>
  1040e4:	000d883a 	mov	r6,zero
  1040e8:	000f883a 	mov	r7,zero
  1040ec:	9009883a 	mov	r4,r18
  1040f0:	980b883a 	mov	r5,r19
  1040f4:	010cb980 	call	10cb98 <__eqdf2>
  1040f8:	10002b1e 	bne	r2,zero,1041a8 <_dtoa_r+0x144>
  1040fc:	d9c02317 	ldw	r7,140(sp)
  104100:	00800044 	movi	r2,1
  104104:	38800015 	stw	r2,0(r7)
  104108:	d8802517 	ldw	r2,148(sp)
  10410c:	10019e26 	beq	r2,zero,104788 <_dtoa_r+0x724>
  104110:	d8c02517 	ldw	r3,148(sp)
  104114:	00800474 	movhi	r2,17
  104118:	10814644 	addi	r2,r2,1305
  10411c:	18800015 	stw	r2,0(r3)
  104120:	10bfffc4 	addi	r2,r2,-1
  104124:	dfc02117 	ldw	ra,132(sp)
  104128:	df002017 	ldw	fp,128(sp)
  10412c:	ddc01f17 	ldw	r23,124(sp)
  104130:	dd801e17 	ldw	r22,120(sp)
  104134:	dd401d17 	ldw	r21,116(sp)
  104138:	dd001c17 	ldw	r20,112(sp)
  10413c:	dcc01b17 	ldw	r19,108(sp)
  104140:	dc801a17 	ldw	r18,104(sp)
  104144:	dc401917 	ldw	r17,100(sp)
  104148:	dc001817 	ldw	r16,96(sp)
  10414c:	dec02204 	addi	sp,sp,136
  104150:	f800283a 	ret
  104154:	d8c02317 	ldw	r3,140(sp)
  104158:	0089c3c4 	movi	r2,9999
  10415c:	18800015 	stw	r2,0(r3)
  104160:	90017726 	beq	r18,zero,104740 <_dtoa_r+0x6dc>
  104164:	00800474 	movhi	r2,17
  104168:	10815204 	addi	r2,r2,1352
  10416c:	d9002517 	ldw	r4,148(sp)
  104170:	203fec26 	beq	r4,zero,104124 <__alt_data_end+0xfff04124>
  104174:	10c000c7 	ldb	r3,3(r2)
  104178:	1801781e 	bne	r3,zero,10475c <_dtoa_r+0x6f8>
  10417c:	10c000c4 	addi	r3,r2,3
  104180:	d9802517 	ldw	r6,148(sp)
  104184:	30c00015 	stw	r3,0(r6)
  104188:	003fe606 	br	104124 <__alt_data_end+0xfff04124>
  10418c:	04e00034 	movhi	r19,32768
  104190:	9cffffc4 	addi	r19,r19,-1
  104194:	00800044 	movi	r2,1
  104198:	8ce6703a 	and	r19,r17,r19
  10419c:	80800015 	stw	r2,0(r16)
  1041a0:	9823883a 	mov	r17,r19
  1041a4:	003fcc06 	br	1040d8 <__alt_data_end+0xfff040d8>
  1041a8:	d8800204 	addi	r2,sp,8
  1041ac:	d8800015 	stw	r2,0(sp)
  1041b0:	d9c00104 	addi	r7,sp,4
  1041b4:	900b883a 	mov	r5,r18
  1041b8:	980d883a 	mov	r6,r19
  1041bc:	e009883a 	mov	r4,fp
  1041c0:	8820d53a 	srli	r16,r17,20
  1041c4:	0107d7c0 	call	107d7c <__d2b>
  1041c8:	d8800915 	stw	r2,36(sp)
  1041cc:	8001651e 	bne	r16,zero,104764 <_dtoa_r+0x700>
  1041d0:	dd800217 	ldw	r22,8(sp)
  1041d4:	dc000117 	ldw	r16,4(sp)
  1041d8:	00800804 	movi	r2,32
  1041dc:	b421883a 	add	r16,r22,r16
  1041e0:	80c10c84 	addi	r3,r16,1074
  1041e4:	10c2d10e 	bge	r2,r3,104d2c <_dtoa_r+0xcc8>
  1041e8:	00801004 	movi	r2,64
  1041ec:	81010484 	addi	r4,r16,1042
  1041f0:	10c7c83a 	sub	r3,r2,r3
  1041f4:	9108d83a 	srl	r4,r18,r4
  1041f8:	88e2983a 	sll	r17,r17,r3
  1041fc:	2448b03a 	or	r4,r4,r17
  104200:	010df600 	call	10df60 <__floatunsidf>
  104204:	017f8434 	movhi	r5,65040
  104208:	01800044 	movi	r6,1
  10420c:	1009883a 	mov	r4,r2
  104210:	194b883a 	add	r5,r3,r5
  104214:	843fffc4 	addi	r16,r16,-1
  104218:	d9801115 	stw	r6,68(sp)
  10421c:	000d883a 	mov	r6,zero
  104220:	01cffe34 	movhi	r7,16376
  104224:	010d5080 	call	10d508 <__subdf3>
  104228:	0198dbf4 	movhi	r6,25455
  10422c:	01cff4f4 	movhi	r7,16339
  104230:	3190d844 	addi	r6,r6,17249
  104234:	39e1e9c4 	addi	r7,r7,-30809
  104238:	1009883a 	mov	r4,r2
  10423c:	180b883a 	mov	r5,r3
  104240:	010cdf00 	call	10cdf0 <__muldf3>
  104244:	01a2d874 	movhi	r6,35681
  104248:	01cff1f4 	movhi	r7,16327
  10424c:	31b22cc4 	addi	r6,r6,-14157
  104250:	39e28a04 	addi	r7,r7,-30168
  104254:	180b883a 	mov	r5,r3
  104258:	1009883a 	mov	r4,r2
  10425c:	010ba040 	call	10ba04 <__adddf3>
  104260:	8009883a 	mov	r4,r16
  104264:	1029883a 	mov	r20,r2
  104268:	1823883a 	mov	r17,r3
  10426c:	010de840 	call	10de84 <__floatsidf>
  104270:	019427f4 	movhi	r6,20639
  104274:	01cff4f4 	movhi	r7,16339
  104278:	319e7ec4 	addi	r6,r6,31227
  10427c:	39d104c4 	addi	r7,r7,17427
  104280:	1009883a 	mov	r4,r2
  104284:	180b883a 	mov	r5,r3
  104288:	010cdf00 	call	10cdf0 <__muldf3>
  10428c:	100d883a 	mov	r6,r2
  104290:	180f883a 	mov	r7,r3
  104294:	a009883a 	mov	r4,r20
  104298:	880b883a 	mov	r5,r17
  10429c:	010ba040 	call	10ba04 <__adddf3>
  1042a0:	1009883a 	mov	r4,r2
  1042a4:	180b883a 	mov	r5,r3
  1042a8:	1029883a 	mov	r20,r2
  1042ac:	1823883a 	mov	r17,r3
  1042b0:	010de040 	call	10de04 <__fixdfsi>
  1042b4:	000d883a 	mov	r6,zero
  1042b8:	000f883a 	mov	r7,zero
  1042bc:	a009883a 	mov	r4,r20
  1042c0:	880b883a 	mov	r5,r17
  1042c4:	d8800515 	stw	r2,20(sp)
  1042c8:	010ccfc0 	call	10ccfc <__ledf2>
  1042cc:	10028716 	blt	r2,zero,104cec <_dtoa_r+0xc88>
  1042d0:	d8c00517 	ldw	r3,20(sp)
  1042d4:	00800584 	movi	r2,22
  1042d8:	10c27536 	bltu	r2,r3,104cb0 <_dtoa_r+0xc4c>
  1042dc:	180490fa 	slli	r2,r3,3
  1042e0:	00c00474 	movhi	r3,17
  1042e4:	18c16e04 	addi	r3,r3,1464
  1042e8:	1885883a 	add	r2,r3,r2
  1042ec:	11000017 	ldw	r4,0(r2)
  1042f0:	11400117 	ldw	r5,4(r2)
  1042f4:	900d883a 	mov	r6,r18
  1042f8:	980f883a 	mov	r7,r19
  1042fc:	010cc200 	call	10cc20 <__gedf2>
  104300:	00828d0e 	bge	zero,r2,104d38 <_dtoa_r+0xcd4>
  104304:	d9000517 	ldw	r4,20(sp)
  104308:	d8000e15 	stw	zero,56(sp)
  10430c:	213fffc4 	addi	r4,r4,-1
  104310:	d9000515 	stw	r4,20(sp)
  104314:	b42dc83a 	sub	r22,r22,r16
  104318:	b5bfffc4 	addi	r22,r22,-1
  10431c:	b0026f16 	blt	r22,zero,104cdc <_dtoa_r+0xc78>
  104320:	d8000815 	stw	zero,32(sp)
  104324:	d9c00517 	ldw	r7,20(sp)
  104328:	38026416 	blt	r7,zero,104cbc <_dtoa_r+0xc58>
  10432c:	b1ed883a 	add	r22,r22,r7
  104330:	d9c00d15 	stw	r7,52(sp)
  104334:	d8000a15 	stw	zero,40(sp)
  104338:	d9800317 	ldw	r6,12(sp)
  10433c:	00800244 	movi	r2,9
  104340:	11811436 	bltu	r2,r6,104794 <_dtoa_r+0x730>
  104344:	00800144 	movi	r2,5
  104348:	1184e10e 	bge	r2,r6,1056d0 <_dtoa_r+0x166c>
  10434c:	31bfff04 	addi	r6,r6,-4
  104350:	d9800315 	stw	r6,12(sp)
  104354:	0023883a 	mov	r17,zero
  104358:	d9800317 	ldw	r6,12(sp)
  10435c:	008000c4 	movi	r2,3
  104360:	30836726 	beq	r6,r2,105100 <_dtoa_r+0x109c>
  104364:	1183410e 	bge	r2,r6,10506c <_dtoa_r+0x1008>
  104368:	d9c00317 	ldw	r7,12(sp)
  10436c:	00800104 	movi	r2,4
  104370:	38827c26 	beq	r7,r2,104d64 <_dtoa_r+0xd00>
  104374:	00800144 	movi	r2,5
  104378:	3884c41e 	bne	r7,r2,10568c <_dtoa_r+0x1628>
  10437c:	00800044 	movi	r2,1
  104380:	d8800b15 	stw	r2,44(sp)
  104384:	d8c00517 	ldw	r3,20(sp)
  104388:	d9002217 	ldw	r4,136(sp)
  10438c:	1907883a 	add	r3,r3,r4
  104390:	19800044 	addi	r6,r3,1
  104394:	d8c00c15 	stw	r3,48(sp)
  104398:	d9800615 	stw	r6,24(sp)
  10439c:	0183a40e 	bge	zero,r6,105230 <_dtoa_r+0x11cc>
  1043a0:	d9800617 	ldw	r6,24(sp)
  1043a4:	3021883a 	mov	r16,r6
  1043a8:	e0001115 	stw	zero,68(fp)
  1043ac:	008005c4 	movi	r2,23
  1043b0:	1184c92e 	bgeu	r2,r6,1056d8 <_dtoa_r+0x1674>
  1043b4:	00c00044 	movi	r3,1
  1043b8:	00800104 	movi	r2,4
  1043bc:	1085883a 	add	r2,r2,r2
  1043c0:	11000504 	addi	r4,r2,20
  1043c4:	180b883a 	mov	r5,r3
  1043c8:	18c00044 	addi	r3,r3,1
  1043cc:	313ffb2e 	bgeu	r6,r4,1043bc <__alt_data_end+0xfff043bc>
  1043d0:	e1401115 	stw	r5,68(fp)
  1043d4:	e009883a 	mov	r4,fp
  1043d8:	01070e80 	call	1070e8 <_Balloc>
  1043dc:	d8800715 	stw	r2,28(sp)
  1043e0:	e0801015 	stw	r2,64(fp)
  1043e4:	00800384 	movi	r2,14
  1043e8:	1400f736 	bltu	r2,r16,1047c8 <_dtoa_r+0x764>
  1043ec:	8800f626 	beq	r17,zero,1047c8 <_dtoa_r+0x764>
  1043f0:	d9c00517 	ldw	r7,20(sp)
  1043f4:	01c39a0e 	bge	zero,r7,105260 <_dtoa_r+0x11fc>
  1043f8:	388003cc 	andi	r2,r7,15
  1043fc:	100490fa 	slli	r2,r2,3
  104400:	382bd13a 	srai	r21,r7,4
  104404:	00c00474 	movhi	r3,17
  104408:	18c16e04 	addi	r3,r3,1464
  10440c:	1885883a 	add	r2,r3,r2
  104410:	a8c0040c 	andi	r3,r21,16
  104414:	12400017 	ldw	r9,0(r2)
  104418:	12000117 	ldw	r8,4(r2)
  10441c:	18037926 	beq	r3,zero,105204 <_dtoa_r+0x11a0>
  104420:	00800474 	movhi	r2,17
  104424:	10816404 	addi	r2,r2,1424
  104428:	11800817 	ldw	r6,32(r2)
  10442c:	11c00917 	ldw	r7,36(r2)
  104430:	9009883a 	mov	r4,r18
  104434:	980b883a 	mov	r5,r19
  104438:	da001715 	stw	r8,92(sp)
  10443c:	da401615 	stw	r9,88(sp)
  104440:	010c2b00 	call	10c2b0 <__divdf3>
  104444:	da001717 	ldw	r8,92(sp)
  104448:	da401617 	ldw	r9,88(sp)
  10444c:	ad4003cc 	andi	r21,r21,15
  104450:	040000c4 	movi	r16,3
  104454:	1023883a 	mov	r17,r2
  104458:	1829883a 	mov	r20,r3
  10445c:	a8001126 	beq	r21,zero,1044a4 <_dtoa_r+0x440>
  104460:	05c00474 	movhi	r23,17
  104464:	bdc16404 	addi	r23,r23,1424
  104468:	4805883a 	mov	r2,r9
  10446c:	4007883a 	mov	r3,r8
  104470:	a980004c 	andi	r6,r21,1
  104474:	1009883a 	mov	r4,r2
  104478:	a82bd07a 	srai	r21,r21,1
  10447c:	180b883a 	mov	r5,r3
  104480:	30000426 	beq	r6,zero,104494 <_dtoa_r+0x430>
  104484:	b9800017 	ldw	r6,0(r23)
  104488:	b9c00117 	ldw	r7,4(r23)
  10448c:	84000044 	addi	r16,r16,1
  104490:	010cdf00 	call	10cdf0 <__muldf3>
  104494:	bdc00204 	addi	r23,r23,8
  104498:	a83ff51e 	bne	r21,zero,104470 <__alt_data_end+0xfff04470>
  10449c:	1013883a 	mov	r9,r2
  1044a0:	1811883a 	mov	r8,r3
  1044a4:	480d883a 	mov	r6,r9
  1044a8:	400f883a 	mov	r7,r8
  1044ac:	8809883a 	mov	r4,r17
  1044b0:	a00b883a 	mov	r5,r20
  1044b4:	010c2b00 	call	10c2b0 <__divdf3>
  1044b8:	d8800f15 	stw	r2,60(sp)
  1044bc:	d8c01015 	stw	r3,64(sp)
  1044c0:	d8c00e17 	ldw	r3,56(sp)
  1044c4:	18000626 	beq	r3,zero,1044e0 <_dtoa_r+0x47c>
  1044c8:	d9000f17 	ldw	r4,60(sp)
  1044cc:	d9401017 	ldw	r5,64(sp)
  1044d0:	000d883a 	mov	r6,zero
  1044d4:	01cffc34 	movhi	r7,16368
  1044d8:	010ccfc0 	call	10ccfc <__ledf2>
  1044dc:	10040b16 	blt	r2,zero,10550c <_dtoa_r+0x14a8>
  1044e0:	8009883a 	mov	r4,r16
  1044e4:	010de840 	call	10de84 <__floatsidf>
  1044e8:	d9800f17 	ldw	r6,60(sp)
  1044ec:	d9c01017 	ldw	r7,64(sp)
  1044f0:	1009883a 	mov	r4,r2
  1044f4:	180b883a 	mov	r5,r3
  1044f8:	010cdf00 	call	10cdf0 <__muldf3>
  1044fc:	000d883a 	mov	r6,zero
  104500:	01d00734 	movhi	r7,16412
  104504:	1009883a 	mov	r4,r2
  104508:	180b883a 	mov	r5,r3
  10450c:	010ba040 	call	10ba04 <__adddf3>
  104510:	1021883a 	mov	r16,r2
  104514:	d8800617 	ldw	r2,24(sp)
  104518:	047f3034 	movhi	r17,64704
  10451c:	1c63883a 	add	r17,r3,r17
  104520:	10031826 	beq	r2,zero,105184 <_dtoa_r+0x1120>
  104524:	d8c00517 	ldw	r3,20(sp)
  104528:	db000617 	ldw	r12,24(sp)
  10452c:	d8c01315 	stw	r3,76(sp)
  104530:	d9000b17 	ldw	r4,44(sp)
  104534:	20038f26 	beq	r4,zero,105374 <_dtoa_r+0x1310>
  104538:	60bfffc4 	addi	r2,r12,-1
  10453c:	100490fa 	slli	r2,r2,3
  104540:	00c00474 	movhi	r3,17
  104544:	18c16e04 	addi	r3,r3,1464
  104548:	1885883a 	add	r2,r3,r2
  10454c:	11800017 	ldw	r6,0(r2)
  104550:	11c00117 	ldw	r7,4(r2)
  104554:	d8800717 	ldw	r2,28(sp)
  104558:	0009883a 	mov	r4,zero
  10455c:	014ff834 	movhi	r5,16352
  104560:	db001615 	stw	r12,88(sp)
  104564:	15c00044 	addi	r23,r2,1
  104568:	010c2b00 	call	10c2b0 <__divdf3>
  10456c:	800d883a 	mov	r6,r16
  104570:	880f883a 	mov	r7,r17
  104574:	1009883a 	mov	r4,r2
  104578:	180b883a 	mov	r5,r3
  10457c:	010d5080 	call	10d508 <__subdf3>
  104580:	d9401017 	ldw	r5,64(sp)
  104584:	d9000f17 	ldw	r4,60(sp)
  104588:	102b883a 	mov	r21,r2
  10458c:	d8c01215 	stw	r3,72(sp)
  104590:	010de040 	call	10de04 <__fixdfsi>
  104594:	1009883a 	mov	r4,r2
  104598:	1029883a 	mov	r20,r2
  10459c:	010de840 	call	10de84 <__floatsidf>
  1045a0:	d9000f17 	ldw	r4,60(sp)
  1045a4:	d9401017 	ldw	r5,64(sp)
  1045a8:	100d883a 	mov	r6,r2
  1045ac:	180f883a 	mov	r7,r3
  1045b0:	010d5080 	call	10d508 <__subdf3>
  1045b4:	1823883a 	mov	r17,r3
  1045b8:	d8c00717 	ldw	r3,28(sp)
  1045bc:	d9401217 	ldw	r5,72(sp)
  1045c0:	a2000c04 	addi	r8,r20,48
  1045c4:	1021883a 	mov	r16,r2
  1045c8:	1a000005 	stb	r8,0(r3)
  1045cc:	800d883a 	mov	r6,r16
  1045d0:	880f883a 	mov	r7,r17
  1045d4:	a809883a 	mov	r4,r21
  1045d8:	4029883a 	mov	r20,r8
  1045dc:	010cc200 	call	10cc20 <__gedf2>
  1045e0:	00841d16 	blt	zero,r2,105658 <_dtoa_r+0x15f4>
  1045e4:	800d883a 	mov	r6,r16
  1045e8:	880f883a 	mov	r7,r17
  1045ec:	0009883a 	mov	r4,zero
  1045f0:	014ffc34 	movhi	r5,16368
  1045f4:	010d5080 	call	10d508 <__subdf3>
  1045f8:	d9401217 	ldw	r5,72(sp)
  1045fc:	100d883a 	mov	r6,r2
  104600:	180f883a 	mov	r7,r3
  104604:	a809883a 	mov	r4,r21
  104608:	010cc200 	call	10cc20 <__gedf2>
  10460c:	db001617 	ldw	r12,88(sp)
  104610:	00840e16 	blt	zero,r2,10564c <_dtoa_r+0x15e8>
  104614:	00800044 	movi	r2,1
  104618:	13006b0e 	bge	r2,r12,1047c8 <_dtoa_r+0x764>
  10461c:	d9000717 	ldw	r4,28(sp)
  104620:	dd800f15 	stw	r22,60(sp)
  104624:	dcc01015 	stw	r19,64(sp)
  104628:	2319883a 	add	r12,r4,r12
  10462c:	dcc01217 	ldw	r19,72(sp)
  104630:	602d883a 	mov	r22,r12
  104634:	dc801215 	stw	r18,72(sp)
  104638:	b825883a 	mov	r18,r23
  10463c:	00000906 	br	104664 <_dtoa_r+0x600>
  104640:	010d5080 	call	10d508 <__subdf3>
  104644:	a80d883a 	mov	r6,r21
  104648:	980f883a 	mov	r7,r19
  10464c:	1009883a 	mov	r4,r2
  104650:	180b883a 	mov	r5,r3
  104654:	010ccfc0 	call	10ccfc <__ledf2>
  104658:	1003e816 	blt	r2,zero,1055fc <_dtoa_r+0x1598>
  10465c:	b825883a 	mov	r18,r23
  104660:	bd83e926 	beq	r23,r22,105608 <_dtoa_r+0x15a4>
  104664:	a809883a 	mov	r4,r21
  104668:	980b883a 	mov	r5,r19
  10466c:	000d883a 	mov	r6,zero
  104670:	01d00934 	movhi	r7,16420
  104674:	010cdf00 	call	10cdf0 <__muldf3>
  104678:	000d883a 	mov	r6,zero
  10467c:	01d00934 	movhi	r7,16420
  104680:	8009883a 	mov	r4,r16
  104684:	880b883a 	mov	r5,r17
  104688:	102b883a 	mov	r21,r2
  10468c:	1827883a 	mov	r19,r3
  104690:	010cdf00 	call	10cdf0 <__muldf3>
  104694:	180b883a 	mov	r5,r3
  104698:	1009883a 	mov	r4,r2
  10469c:	1821883a 	mov	r16,r3
  1046a0:	1023883a 	mov	r17,r2
  1046a4:	010de040 	call	10de04 <__fixdfsi>
  1046a8:	1009883a 	mov	r4,r2
  1046ac:	1029883a 	mov	r20,r2
  1046b0:	010de840 	call	10de84 <__floatsidf>
  1046b4:	8809883a 	mov	r4,r17
  1046b8:	800b883a 	mov	r5,r16
  1046bc:	100d883a 	mov	r6,r2
  1046c0:	180f883a 	mov	r7,r3
  1046c4:	010d5080 	call	10d508 <__subdf3>
  1046c8:	a5000c04 	addi	r20,r20,48
  1046cc:	a80d883a 	mov	r6,r21
  1046d0:	980f883a 	mov	r7,r19
  1046d4:	1009883a 	mov	r4,r2
  1046d8:	180b883a 	mov	r5,r3
  1046dc:	95000005 	stb	r20,0(r18)
  1046e0:	1021883a 	mov	r16,r2
  1046e4:	1823883a 	mov	r17,r3
  1046e8:	010ccfc0 	call	10ccfc <__ledf2>
  1046ec:	bdc00044 	addi	r23,r23,1
  1046f0:	800d883a 	mov	r6,r16
  1046f4:	880f883a 	mov	r7,r17
  1046f8:	0009883a 	mov	r4,zero
  1046fc:	014ffc34 	movhi	r5,16368
  104700:	103fcf0e 	bge	r2,zero,104640 <__alt_data_end+0xfff04640>
  104704:	d8c01317 	ldw	r3,76(sp)
  104708:	d8c00515 	stw	r3,20(sp)
  10470c:	d9400917 	ldw	r5,36(sp)
  104710:	e009883a 	mov	r4,fp
  104714:	01071900 	call	107190 <_Bfree>
  104718:	d9000517 	ldw	r4,20(sp)
  10471c:	d9802317 	ldw	r6,140(sp)
  104720:	d9c02517 	ldw	r7,148(sp)
  104724:	b8000005 	stb	zero,0(r23)
  104728:	20800044 	addi	r2,r4,1
  10472c:	30800015 	stw	r2,0(r6)
  104730:	3802aa26 	beq	r7,zero,1051dc <_dtoa_r+0x1178>
  104734:	3dc00015 	stw	r23,0(r7)
  104738:	d8800717 	ldw	r2,28(sp)
  10473c:	003e7906 	br	104124 <__alt_data_end+0xfff04124>
  104740:	00800434 	movhi	r2,16
  104744:	10bfffc4 	addi	r2,r2,-1
  104748:	88a2703a 	and	r17,r17,r2
  10474c:	883e851e 	bne	r17,zero,104164 <__alt_data_end+0xfff04164>
  104750:	00800474 	movhi	r2,17
  104754:	10814f04 	addi	r2,r2,1340
  104758:	003e8406 	br	10416c <__alt_data_end+0xfff0416c>
  10475c:	10c00204 	addi	r3,r2,8
  104760:	003e8706 	br	104180 <__alt_data_end+0xfff04180>
  104764:	01400434 	movhi	r5,16
  104768:	297fffc4 	addi	r5,r5,-1
  10476c:	994a703a 	and	r5,r19,r5
  104770:	9009883a 	mov	r4,r18
  104774:	843f0044 	addi	r16,r16,-1023
  104778:	294ffc34 	orhi	r5,r5,16368
  10477c:	dd800217 	ldw	r22,8(sp)
  104780:	d8001115 	stw	zero,68(sp)
  104784:	003ea506 	br	10421c <__alt_data_end+0xfff0421c>
  104788:	00800474 	movhi	r2,17
  10478c:	10814604 	addi	r2,r2,1304
  104790:	003e6406 	br	104124 <__alt_data_end+0xfff04124>
  104794:	e0001115 	stw	zero,68(fp)
  104798:	000b883a 	mov	r5,zero
  10479c:	e009883a 	mov	r4,fp
  1047a0:	01070e80 	call	1070e8 <_Balloc>
  1047a4:	01bfffc4 	movi	r6,-1
  1047a8:	01c00044 	movi	r7,1
  1047ac:	d8800715 	stw	r2,28(sp)
  1047b0:	d9800c15 	stw	r6,48(sp)
  1047b4:	e0801015 	stw	r2,64(fp)
  1047b8:	d8000315 	stw	zero,12(sp)
  1047bc:	d9c00b15 	stw	r7,44(sp)
  1047c0:	d9800615 	stw	r6,24(sp)
  1047c4:	d8002215 	stw	zero,136(sp)
  1047c8:	d8800117 	ldw	r2,4(sp)
  1047cc:	10008916 	blt	r2,zero,1049f4 <_dtoa_r+0x990>
  1047d0:	d9000517 	ldw	r4,20(sp)
  1047d4:	00c00384 	movi	r3,14
  1047d8:	19008616 	blt	r3,r4,1049f4 <_dtoa_r+0x990>
  1047dc:	200490fa 	slli	r2,r4,3
  1047e0:	00c00474 	movhi	r3,17
  1047e4:	d9802217 	ldw	r6,136(sp)
  1047e8:	18c16e04 	addi	r3,r3,1464
  1047ec:	1885883a 	add	r2,r3,r2
  1047f0:	14000017 	ldw	r16,0(r2)
  1047f4:	14400117 	ldw	r17,4(r2)
  1047f8:	30016316 	blt	r6,zero,104d88 <_dtoa_r+0xd24>
  1047fc:	800d883a 	mov	r6,r16
  104800:	880f883a 	mov	r7,r17
  104804:	9009883a 	mov	r4,r18
  104808:	980b883a 	mov	r5,r19
  10480c:	010c2b00 	call	10c2b0 <__divdf3>
  104810:	180b883a 	mov	r5,r3
  104814:	1009883a 	mov	r4,r2
  104818:	010de040 	call	10de04 <__fixdfsi>
  10481c:	1009883a 	mov	r4,r2
  104820:	102b883a 	mov	r21,r2
  104824:	010de840 	call	10de84 <__floatsidf>
  104828:	800d883a 	mov	r6,r16
  10482c:	880f883a 	mov	r7,r17
  104830:	1009883a 	mov	r4,r2
  104834:	180b883a 	mov	r5,r3
  104838:	010cdf00 	call	10cdf0 <__muldf3>
  10483c:	100d883a 	mov	r6,r2
  104840:	180f883a 	mov	r7,r3
  104844:	9009883a 	mov	r4,r18
  104848:	980b883a 	mov	r5,r19
  10484c:	010d5080 	call	10d508 <__subdf3>
  104850:	d9c00717 	ldw	r7,28(sp)
  104854:	1009883a 	mov	r4,r2
  104858:	a8800c04 	addi	r2,r21,48
  10485c:	38800005 	stb	r2,0(r7)
  104860:	3dc00044 	addi	r23,r7,1
  104864:	d9c00617 	ldw	r7,24(sp)
  104868:	01800044 	movi	r6,1
  10486c:	180b883a 	mov	r5,r3
  104870:	2005883a 	mov	r2,r4
  104874:	39803826 	beq	r7,r6,104958 <_dtoa_r+0x8f4>
  104878:	000d883a 	mov	r6,zero
  10487c:	01d00934 	movhi	r7,16420
  104880:	010cdf00 	call	10cdf0 <__muldf3>
  104884:	000d883a 	mov	r6,zero
  104888:	000f883a 	mov	r7,zero
  10488c:	1009883a 	mov	r4,r2
  104890:	180b883a 	mov	r5,r3
  104894:	1025883a 	mov	r18,r2
  104898:	1827883a 	mov	r19,r3
  10489c:	010cb980 	call	10cb98 <__eqdf2>
  1048a0:	103f9a26 	beq	r2,zero,10470c <__alt_data_end+0xfff0470c>
  1048a4:	d9c00617 	ldw	r7,24(sp)
  1048a8:	d8c00717 	ldw	r3,28(sp)
  1048ac:	b829883a 	mov	r20,r23
  1048b0:	38bfffc4 	addi	r2,r7,-1
  1048b4:	18ad883a 	add	r22,r3,r2
  1048b8:	00000a06 	br	1048e4 <_dtoa_r+0x880>
  1048bc:	010cdf00 	call	10cdf0 <__muldf3>
  1048c0:	000d883a 	mov	r6,zero
  1048c4:	000f883a 	mov	r7,zero
  1048c8:	1009883a 	mov	r4,r2
  1048cc:	180b883a 	mov	r5,r3
  1048d0:	1025883a 	mov	r18,r2
  1048d4:	1827883a 	mov	r19,r3
  1048d8:	b829883a 	mov	r20,r23
  1048dc:	010cb980 	call	10cb98 <__eqdf2>
  1048e0:	103f8a26 	beq	r2,zero,10470c <__alt_data_end+0xfff0470c>
  1048e4:	800d883a 	mov	r6,r16
  1048e8:	880f883a 	mov	r7,r17
  1048ec:	9009883a 	mov	r4,r18
  1048f0:	980b883a 	mov	r5,r19
  1048f4:	010c2b00 	call	10c2b0 <__divdf3>
  1048f8:	180b883a 	mov	r5,r3
  1048fc:	1009883a 	mov	r4,r2
  104900:	010de040 	call	10de04 <__fixdfsi>
  104904:	1009883a 	mov	r4,r2
  104908:	102b883a 	mov	r21,r2
  10490c:	010de840 	call	10de84 <__floatsidf>
  104910:	800d883a 	mov	r6,r16
  104914:	880f883a 	mov	r7,r17
  104918:	1009883a 	mov	r4,r2
  10491c:	180b883a 	mov	r5,r3
  104920:	010cdf00 	call	10cdf0 <__muldf3>
  104924:	100d883a 	mov	r6,r2
  104928:	180f883a 	mov	r7,r3
  10492c:	9009883a 	mov	r4,r18
  104930:	980b883a 	mov	r5,r19
  104934:	010d5080 	call	10d508 <__subdf3>
  104938:	aa000c04 	addi	r8,r21,48
  10493c:	a2000005 	stb	r8,0(r20)
  104940:	000d883a 	mov	r6,zero
  104944:	01d00934 	movhi	r7,16420
  104948:	1009883a 	mov	r4,r2
  10494c:	180b883a 	mov	r5,r3
  104950:	a5c00044 	addi	r23,r20,1
  104954:	b53fd91e 	bne	r22,r20,1048bc <__alt_data_end+0xfff048bc>
  104958:	100d883a 	mov	r6,r2
  10495c:	180f883a 	mov	r7,r3
  104960:	1009883a 	mov	r4,r2
  104964:	180b883a 	mov	r5,r3
  104968:	010ba040 	call	10ba04 <__adddf3>
  10496c:	100d883a 	mov	r6,r2
  104970:	180f883a 	mov	r7,r3
  104974:	8009883a 	mov	r4,r16
  104978:	880b883a 	mov	r5,r17
  10497c:	1027883a 	mov	r19,r2
  104980:	1825883a 	mov	r18,r3
  104984:	010ccfc0 	call	10ccfc <__ledf2>
  104988:	10000816 	blt	r2,zero,1049ac <_dtoa_r+0x948>
  10498c:	980d883a 	mov	r6,r19
  104990:	900f883a 	mov	r7,r18
  104994:	8009883a 	mov	r4,r16
  104998:	880b883a 	mov	r5,r17
  10499c:	010cb980 	call	10cb98 <__eqdf2>
  1049a0:	103f5a1e 	bne	r2,zero,10470c <__alt_data_end+0xfff0470c>
  1049a4:	ad40004c 	andi	r21,r21,1
  1049a8:	a83f5826 	beq	r21,zero,10470c <__alt_data_end+0xfff0470c>
  1049ac:	bd3fffc3 	ldbu	r20,-1(r23)
  1049b0:	b8bfffc4 	addi	r2,r23,-1
  1049b4:	1007883a 	mov	r3,r2
  1049b8:	01400e44 	movi	r5,57
  1049bc:	d9800717 	ldw	r6,28(sp)
  1049c0:	00000506 	br	1049d8 <_dtoa_r+0x974>
  1049c4:	18ffffc4 	addi	r3,r3,-1
  1049c8:	11824726 	beq	r2,r6,1052e8 <_dtoa_r+0x1284>
  1049cc:	1d000003 	ldbu	r20,0(r3)
  1049d0:	102f883a 	mov	r23,r2
  1049d4:	10bfffc4 	addi	r2,r2,-1
  1049d8:	a1003fcc 	andi	r4,r20,255
  1049dc:	2100201c 	xori	r4,r4,128
  1049e0:	213fe004 	addi	r4,r4,-128
  1049e4:	217ff726 	beq	r4,r5,1049c4 <__alt_data_end+0xfff049c4>
  1049e8:	a2000044 	addi	r8,r20,1
  1049ec:	12000005 	stb	r8,0(r2)
  1049f0:	003f4606 	br	10470c <__alt_data_end+0xfff0470c>
  1049f4:	d9000b17 	ldw	r4,44(sp)
  1049f8:	2000c826 	beq	r4,zero,104d1c <_dtoa_r+0xcb8>
  1049fc:	d9800317 	ldw	r6,12(sp)
  104a00:	00c00044 	movi	r3,1
  104a04:	1980f90e 	bge	r3,r6,104dec <_dtoa_r+0xd88>
  104a08:	d8800617 	ldw	r2,24(sp)
  104a0c:	d8c00a17 	ldw	r3,40(sp)
  104a10:	157fffc4 	addi	r21,r2,-1
  104a14:	1d41f316 	blt	r3,r21,1051e4 <_dtoa_r+0x1180>
  104a18:	1d6bc83a 	sub	r21,r3,r21
  104a1c:	d9c00617 	ldw	r7,24(sp)
  104a20:	3802aa16 	blt	r7,zero,1054cc <_dtoa_r+0x1468>
  104a24:	dd000817 	ldw	r20,32(sp)
  104a28:	d8800617 	ldw	r2,24(sp)
  104a2c:	d8c00817 	ldw	r3,32(sp)
  104a30:	01400044 	movi	r5,1
  104a34:	e009883a 	mov	r4,fp
  104a38:	1887883a 	add	r3,r3,r2
  104a3c:	d8c00815 	stw	r3,32(sp)
  104a40:	b0ad883a 	add	r22,r22,r2
  104a44:	01074f40 	call	1074f4 <__i2b>
  104a48:	1023883a 	mov	r17,r2
  104a4c:	a0000826 	beq	r20,zero,104a70 <_dtoa_r+0xa0c>
  104a50:	0580070e 	bge	zero,r22,104a70 <_dtoa_r+0xa0c>
  104a54:	a005883a 	mov	r2,r20
  104a58:	b500b916 	blt	r22,r20,104d40 <_dtoa_r+0xcdc>
  104a5c:	d9000817 	ldw	r4,32(sp)
  104a60:	a0a9c83a 	sub	r20,r20,r2
  104a64:	b0adc83a 	sub	r22,r22,r2
  104a68:	2089c83a 	sub	r4,r4,r2
  104a6c:	d9000815 	stw	r4,32(sp)
  104a70:	d9800a17 	ldw	r6,40(sp)
  104a74:	0181810e 	bge	zero,r6,10507c <_dtoa_r+0x1018>
  104a78:	d9c00b17 	ldw	r7,44(sp)
  104a7c:	3800b326 	beq	r7,zero,104d4c <_dtoa_r+0xce8>
  104a80:	a800b226 	beq	r21,zero,104d4c <_dtoa_r+0xce8>
  104a84:	880b883a 	mov	r5,r17
  104a88:	a80d883a 	mov	r6,r21
  104a8c:	e009883a 	mov	r4,fp
  104a90:	01077280 	call	107728 <__pow5mult>
  104a94:	d9800917 	ldw	r6,36(sp)
  104a98:	100b883a 	mov	r5,r2
  104a9c:	e009883a 	mov	r4,fp
  104aa0:	1023883a 	mov	r17,r2
  104aa4:	01075300 	call	107530 <__multiply>
  104aa8:	1021883a 	mov	r16,r2
  104aac:	d8800a17 	ldw	r2,40(sp)
  104ab0:	d9400917 	ldw	r5,36(sp)
  104ab4:	e009883a 	mov	r4,fp
  104ab8:	1545c83a 	sub	r2,r2,r21
  104abc:	d8800a15 	stw	r2,40(sp)
  104ac0:	01071900 	call	107190 <_Bfree>
  104ac4:	d8c00a17 	ldw	r3,40(sp)
  104ac8:	18009f1e 	bne	r3,zero,104d48 <_dtoa_r+0xce4>
  104acc:	05c00044 	movi	r23,1
  104ad0:	e009883a 	mov	r4,fp
  104ad4:	b80b883a 	mov	r5,r23
  104ad8:	01074f40 	call	1074f4 <__i2b>
  104adc:	d9000d17 	ldw	r4,52(sp)
  104ae0:	102b883a 	mov	r21,r2
  104ae4:	2000ce26 	beq	r4,zero,104e20 <_dtoa_r+0xdbc>
  104ae8:	200d883a 	mov	r6,r4
  104aec:	100b883a 	mov	r5,r2
  104af0:	e009883a 	mov	r4,fp
  104af4:	01077280 	call	107728 <__pow5mult>
  104af8:	d9800317 	ldw	r6,12(sp)
  104afc:	102b883a 	mov	r21,r2
  104b00:	b981810e 	bge	r23,r6,105108 <_dtoa_r+0x10a4>
  104b04:	0027883a 	mov	r19,zero
  104b08:	a8800417 	ldw	r2,16(r21)
  104b0c:	05c00804 	movi	r23,32
  104b10:	10800104 	addi	r2,r2,4
  104b14:	1085883a 	add	r2,r2,r2
  104b18:	1085883a 	add	r2,r2,r2
  104b1c:	a885883a 	add	r2,r21,r2
  104b20:	11000017 	ldw	r4,0(r2)
  104b24:	01073dc0 	call	1073dc <__hi0bits>
  104b28:	b885c83a 	sub	r2,r23,r2
  104b2c:	1585883a 	add	r2,r2,r22
  104b30:	108007cc 	andi	r2,r2,31
  104b34:	1000b326 	beq	r2,zero,104e04 <_dtoa_r+0xda0>
  104b38:	00c00804 	movi	r3,32
  104b3c:	1887c83a 	sub	r3,r3,r2
  104b40:	01000104 	movi	r4,4
  104b44:	20c2cd0e 	bge	r4,r3,10567c <_dtoa_r+0x1618>
  104b48:	00c00704 	movi	r3,28
  104b4c:	1885c83a 	sub	r2,r3,r2
  104b50:	d8c00817 	ldw	r3,32(sp)
  104b54:	a0a9883a 	add	r20,r20,r2
  104b58:	b0ad883a 	add	r22,r22,r2
  104b5c:	1887883a 	add	r3,r3,r2
  104b60:	d8c00815 	stw	r3,32(sp)
  104b64:	d9800817 	ldw	r6,32(sp)
  104b68:	0180040e 	bge	zero,r6,104b7c <_dtoa_r+0xb18>
  104b6c:	800b883a 	mov	r5,r16
  104b70:	e009883a 	mov	r4,fp
  104b74:	01078680 	call	107868 <__lshift>
  104b78:	1021883a 	mov	r16,r2
  104b7c:	0580050e 	bge	zero,r22,104b94 <_dtoa_r+0xb30>
  104b80:	a80b883a 	mov	r5,r21
  104b84:	b00d883a 	mov	r6,r22
  104b88:	e009883a 	mov	r4,fp
  104b8c:	01078680 	call	107868 <__lshift>
  104b90:	102b883a 	mov	r21,r2
  104b94:	d9c00e17 	ldw	r7,56(sp)
  104b98:	3801211e 	bne	r7,zero,105020 <_dtoa_r+0xfbc>
  104b9c:	d9800617 	ldw	r6,24(sp)
  104ba0:	0181380e 	bge	zero,r6,105084 <_dtoa_r+0x1020>
  104ba4:	d8c00b17 	ldw	r3,44(sp)
  104ba8:	1800ab1e 	bne	r3,zero,104e58 <_dtoa_r+0xdf4>
  104bac:	dc800717 	ldw	r18,28(sp)
  104bb0:	dcc00617 	ldw	r19,24(sp)
  104bb4:	9029883a 	mov	r20,r18
  104bb8:	00000206 	br	104bc4 <_dtoa_r+0xb60>
  104bbc:	01071b80 	call	1071b8 <__multadd>
  104bc0:	1021883a 	mov	r16,r2
  104bc4:	a80b883a 	mov	r5,r21
  104bc8:	8009883a 	mov	r4,r16
  104bcc:	0103e640 	call	103e64 <quorem>
  104bd0:	10800c04 	addi	r2,r2,48
  104bd4:	90800005 	stb	r2,0(r18)
  104bd8:	94800044 	addi	r18,r18,1
  104bdc:	9507c83a 	sub	r3,r18,r20
  104be0:	000f883a 	mov	r7,zero
  104be4:	01800284 	movi	r6,10
  104be8:	800b883a 	mov	r5,r16
  104bec:	e009883a 	mov	r4,fp
  104bf0:	1cfff216 	blt	r3,r19,104bbc <__alt_data_end+0xfff04bbc>
  104bf4:	1011883a 	mov	r8,r2
  104bf8:	d8800617 	ldw	r2,24(sp)
  104bfc:	0082370e 	bge	zero,r2,1054dc <_dtoa_r+0x1478>
  104c00:	d9000717 	ldw	r4,28(sp)
  104c04:	0025883a 	mov	r18,zero
  104c08:	20af883a 	add	r23,r4,r2
  104c0c:	01800044 	movi	r6,1
  104c10:	800b883a 	mov	r5,r16
  104c14:	e009883a 	mov	r4,fp
  104c18:	da001715 	stw	r8,92(sp)
  104c1c:	01078680 	call	107868 <__lshift>
  104c20:	a80b883a 	mov	r5,r21
  104c24:	1009883a 	mov	r4,r2
  104c28:	d8800915 	stw	r2,36(sp)
  104c2c:	01079b00 	call	1079b0 <__mcmp>
  104c30:	da001717 	ldw	r8,92(sp)
  104c34:	0081800e 	bge	zero,r2,105238 <_dtoa_r+0x11d4>
  104c38:	b93fffc3 	ldbu	r4,-1(r23)
  104c3c:	b8bfffc4 	addi	r2,r23,-1
  104c40:	1007883a 	mov	r3,r2
  104c44:	01800e44 	movi	r6,57
  104c48:	d9c00717 	ldw	r7,28(sp)
  104c4c:	00000506 	br	104c64 <_dtoa_r+0xc00>
  104c50:	18ffffc4 	addi	r3,r3,-1
  104c54:	11c12326 	beq	r2,r7,1050e4 <_dtoa_r+0x1080>
  104c58:	19000003 	ldbu	r4,0(r3)
  104c5c:	102f883a 	mov	r23,r2
  104c60:	10bfffc4 	addi	r2,r2,-1
  104c64:	21403fcc 	andi	r5,r4,255
  104c68:	2940201c 	xori	r5,r5,128
  104c6c:	297fe004 	addi	r5,r5,-128
  104c70:	29bff726 	beq	r5,r6,104c50 <__alt_data_end+0xfff04c50>
  104c74:	21000044 	addi	r4,r4,1
  104c78:	11000005 	stb	r4,0(r2)
  104c7c:	a80b883a 	mov	r5,r21
  104c80:	e009883a 	mov	r4,fp
  104c84:	01071900 	call	107190 <_Bfree>
  104c88:	883ea026 	beq	r17,zero,10470c <__alt_data_end+0xfff0470c>
  104c8c:	90000426 	beq	r18,zero,104ca0 <_dtoa_r+0xc3c>
  104c90:	94400326 	beq	r18,r17,104ca0 <_dtoa_r+0xc3c>
  104c94:	900b883a 	mov	r5,r18
  104c98:	e009883a 	mov	r4,fp
  104c9c:	01071900 	call	107190 <_Bfree>
  104ca0:	880b883a 	mov	r5,r17
  104ca4:	e009883a 	mov	r4,fp
  104ca8:	01071900 	call	107190 <_Bfree>
  104cac:	003e9706 	br	10470c <__alt_data_end+0xfff0470c>
  104cb0:	01800044 	movi	r6,1
  104cb4:	d9800e15 	stw	r6,56(sp)
  104cb8:	003d9606 	br	104314 <__alt_data_end+0xfff04314>
  104cbc:	d8800817 	ldw	r2,32(sp)
  104cc0:	d8c00517 	ldw	r3,20(sp)
  104cc4:	d8000d15 	stw	zero,52(sp)
  104cc8:	10c5c83a 	sub	r2,r2,r3
  104ccc:	00c9c83a 	sub	r4,zero,r3
  104cd0:	d8800815 	stw	r2,32(sp)
  104cd4:	d9000a15 	stw	r4,40(sp)
  104cd8:	003d9706 	br	104338 <__alt_data_end+0xfff04338>
  104cdc:	05adc83a 	sub	r22,zero,r22
  104ce0:	dd800815 	stw	r22,32(sp)
  104ce4:	002d883a 	mov	r22,zero
  104ce8:	003d8e06 	br	104324 <__alt_data_end+0xfff04324>
  104cec:	d9000517 	ldw	r4,20(sp)
  104cf0:	010de840 	call	10de84 <__floatsidf>
  104cf4:	100d883a 	mov	r6,r2
  104cf8:	180f883a 	mov	r7,r3
  104cfc:	a009883a 	mov	r4,r20
  104d00:	880b883a 	mov	r5,r17
  104d04:	010cb980 	call	10cb98 <__eqdf2>
  104d08:	103d7126 	beq	r2,zero,1042d0 <__alt_data_end+0xfff042d0>
  104d0c:	d9c00517 	ldw	r7,20(sp)
  104d10:	39ffffc4 	addi	r7,r7,-1
  104d14:	d9c00515 	stw	r7,20(sp)
  104d18:	003d6d06 	br	1042d0 <__alt_data_end+0xfff042d0>
  104d1c:	dd400a17 	ldw	r21,40(sp)
  104d20:	dd000817 	ldw	r20,32(sp)
  104d24:	0023883a 	mov	r17,zero
  104d28:	003f4806 	br	104a4c <__alt_data_end+0xfff04a4c>
  104d2c:	10e3c83a 	sub	r17,r2,r3
  104d30:	9448983a 	sll	r4,r18,r17
  104d34:	003d3206 	br	104200 <__alt_data_end+0xfff04200>
  104d38:	d8000e15 	stw	zero,56(sp)
  104d3c:	003d7506 	br	104314 <__alt_data_end+0xfff04314>
  104d40:	b005883a 	mov	r2,r22
  104d44:	003f4506 	br	104a5c <__alt_data_end+0xfff04a5c>
  104d48:	dc000915 	stw	r16,36(sp)
  104d4c:	d9800a17 	ldw	r6,40(sp)
  104d50:	d9400917 	ldw	r5,36(sp)
  104d54:	e009883a 	mov	r4,fp
  104d58:	01077280 	call	107728 <__pow5mult>
  104d5c:	1021883a 	mov	r16,r2
  104d60:	003f5a06 	br	104acc <__alt_data_end+0xfff04acc>
  104d64:	01c00044 	movi	r7,1
  104d68:	d9c00b15 	stw	r7,44(sp)
  104d6c:	d8802217 	ldw	r2,136(sp)
  104d70:	0081280e 	bge	zero,r2,105214 <_dtoa_r+0x11b0>
  104d74:	100d883a 	mov	r6,r2
  104d78:	1021883a 	mov	r16,r2
  104d7c:	d8800c15 	stw	r2,48(sp)
  104d80:	d8800615 	stw	r2,24(sp)
  104d84:	003d8806 	br	1043a8 <__alt_data_end+0xfff043a8>
  104d88:	d8800617 	ldw	r2,24(sp)
  104d8c:	00be9b16 	blt	zero,r2,1047fc <__alt_data_end+0xfff047fc>
  104d90:	10010f1e 	bne	r2,zero,1051d0 <_dtoa_r+0x116c>
  104d94:	880b883a 	mov	r5,r17
  104d98:	000d883a 	mov	r6,zero
  104d9c:	01d00534 	movhi	r7,16404
  104da0:	8009883a 	mov	r4,r16
  104da4:	010cdf00 	call	10cdf0 <__muldf3>
  104da8:	900d883a 	mov	r6,r18
  104dac:	980f883a 	mov	r7,r19
  104db0:	1009883a 	mov	r4,r2
  104db4:	180b883a 	mov	r5,r3
  104db8:	010cc200 	call	10cc20 <__gedf2>
  104dbc:	002b883a 	mov	r21,zero
  104dc0:	0023883a 	mov	r17,zero
  104dc4:	1000bf16 	blt	r2,zero,1050c4 <_dtoa_r+0x1060>
  104dc8:	d9802217 	ldw	r6,136(sp)
  104dcc:	ddc00717 	ldw	r23,28(sp)
  104dd0:	018c303a 	nor	r6,zero,r6
  104dd4:	d9800515 	stw	r6,20(sp)
  104dd8:	a80b883a 	mov	r5,r21
  104ddc:	e009883a 	mov	r4,fp
  104de0:	01071900 	call	107190 <_Bfree>
  104de4:	883e4926 	beq	r17,zero,10470c <__alt_data_end+0xfff0470c>
  104de8:	003fad06 	br	104ca0 <__alt_data_end+0xfff04ca0>
  104dec:	d9c01117 	ldw	r7,68(sp)
  104df0:	3801bc26 	beq	r7,zero,1054e4 <_dtoa_r+0x1480>
  104df4:	10810cc4 	addi	r2,r2,1075
  104df8:	dd400a17 	ldw	r21,40(sp)
  104dfc:	dd000817 	ldw	r20,32(sp)
  104e00:	003f0a06 	br	104a2c <__alt_data_end+0xfff04a2c>
  104e04:	00800704 	movi	r2,28
  104e08:	d9000817 	ldw	r4,32(sp)
  104e0c:	a0a9883a 	add	r20,r20,r2
  104e10:	b0ad883a 	add	r22,r22,r2
  104e14:	2089883a 	add	r4,r4,r2
  104e18:	d9000815 	stw	r4,32(sp)
  104e1c:	003f5106 	br	104b64 <__alt_data_end+0xfff04b64>
  104e20:	d8c00317 	ldw	r3,12(sp)
  104e24:	b8c1fc0e 	bge	r23,r3,105618 <_dtoa_r+0x15b4>
  104e28:	0027883a 	mov	r19,zero
  104e2c:	b805883a 	mov	r2,r23
  104e30:	003f3e06 	br	104b2c <__alt_data_end+0xfff04b2c>
  104e34:	880b883a 	mov	r5,r17
  104e38:	e009883a 	mov	r4,fp
  104e3c:	000f883a 	mov	r7,zero
  104e40:	01800284 	movi	r6,10
  104e44:	01071b80 	call	1071b8 <__multadd>
  104e48:	d9000c17 	ldw	r4,48(sp)
  104e4c:	1023883a 	mov	r17,r2
  104e50:	0102040e 	bge	zero,r4,105664 <_dtoa_r+0x1600>
  104e54:	d9000615 	stw	r4,24(sp)
  104e58:	0500050e 	bge	zero,r20,104e70 <_dtoa_r+0xe0c>
  104e5c:	880b883a 	mov	r5,r17
  104e60:	a00d883a 	mov	r6,r20
  104e64:	e009883a 	mov	r4,fp
  104e68:	01078680 	call	107868 <__lshift>
  104e6c:	1023883a 	mov	r17,r2
  104e70:	9801241e 	bne	r19,zero,105304 <_dtoa_r+0x12a0>
  104e74:	8829883a 	mov	r20,r17
  104e78:	d9000617 	ldw	r4,24(sp)
  104e7c:	dcc00717 	ldw	r19,28(sp)
  104e80:	9480004c 	andi	r18,r18,1
  104e84:	20bfffc4 	addi	r2,r4,-1
  104e88:	9885883a 	add	r2,r19,r2
  104e8c:	d8800415 	stw	r2,16(sp)
  104e90:	dc800615 	stw	r18,24(sp)
  104e94:	a80b883a 	mov	r5,r21
  104e98:	8009883a 	mov	r4,r16
  104e9c:	0103e640 	call	103e64 <quorem>
  104ea0:	880b883a 	mov	r5,r17
  104ea4:	8009883a 	mov	r4,r16
  104ea8:	102f883a 	mov	r23,r2
  104eac:	01079b00 	call	1079b0 <__mcmp>
  104eb0:	a80b883a 	mov	r5,r21
  104eb4:	a00d883a 	mov	r6,r20
  104eb8:	e009883a 	mov	r4,fp
  104ebc:	102d883a 	mov	r22,r2
  104ec0:	0107a100 	call	107a10 <__mdiff>
  104ec4:	1007883a 	mov	r3,r2
  104ec8:	10800317 	ldw	r2,12(r2)
  104ecc:	bc800c04 	addi	r18,r23,48
  104ed0:	180b883a 	mov	r5,r3
  104ed4:	10004e1e 	bne	r2,zero,105010 <_dtoa_r+0xfac>
  104ed8:	8009883a 	mov	r4,r16
  104edc:	d8c01615 	stw	r3,88(sp)
  104ee0:	01079b00 	call	1079b0 <__mcmp>
  104ee4:	d8c01617 	ldw	r3,88(sp)
  104ee8:	e009883a 	mov	r4,fp
  104eec:	d8801615 	stw	r2,88(sp)
  104ef0:	180b883a 	mov	r5,r3
  104ef4:	01071900 	call	107190 <_Bfree>
  104ef8:	d8801617 	ldw	r2,88(sp)
  104efc:	1000041e 	bne	r2,zero,104f10 <_dtoa_r+0xeac>
  104f00:	d9800317 	ldw	r6,12(sp)
  104f04:	3000021e 	bne	r6,zero,104f10 <_dtoa_r+0xeac>
  104f08:	d8c00617 	ldw	r3,24(sp)
  104f0c:	18003726 	beq	r3,zero,104fec <_dtoa_r+0xf88>
  104f10:	b0002016 	blt	r22,zero,104f94 <_dtoa_r+0xf30>
  104f14:	b000041e 	bne	r22,zero,104f28 <_dtoa_r+0xec4>
  104f18:	d9000317 	ldw	r4,12(sp)
  104f1c:	2000021e 	bne	r4,zero,104f28 <_dtoa_r+0xec4>
  104f20:	d8c00617 	ldw	r3,24(sp)
  104f24:	18001b26 	beq	r3,zero,104f94 <_dtoa_r+0xf30>
  104f28:	00810716 	blt	zero,r2,105348 <_dtoa_r+0x12e4>
  104f2c:	d8c00417 	ldw	r3,16(sp)
  104f30:	9d800044 	addi	r22,r19,1
  104f34:	9c800005 	stb	r18,0(r19)
  104f38:	b02f883a 	mov	r23,r22
  104f3c:	98c10626 	beq	r19,r3,105358 <_dtoa_r+0x12f4>
  104f40:	800b883a 	mov	r5,r16
  104f44:	000f883a 	mov	r7,zero
  104f48:	01800284 	movi	r6,10
  104f4c:	e009883a 	mov	r4,fp
  104f50:	01071b80 	call	1071b8 <__multadd>
  104f54:	1021883a 	mov	r16,r2
  104f58:	000f883a 	mov	r7,zero
  104f5c:	01800284 	movi	r6,10
  104f60:	880b883a 	mov	r5,r17
  104f64:	e009883a 	mov	r4,fp
  104f68:	8d002526 	beq	r17,r20,105000 <_dtoa_r+0xf9c>
  104f6c:	01071b80 	call	1071b8 <__multadd>
  104f70:	a00b883a 	mov	r5,r20
  104f74:	000f883a 	mov	r7,zero
  104f78:	01800284 	movi	r6,10
  104f7c:	e009883a 	mov	r4,fp
  104f80:	1023883a 	mov	r17,r2
  104f84:	01071b80 	call	1071b8 <__multadd>
  104f88:	1029883a 	mov	r20,r2
  104f8c:	b027883a 	mov	r19,r22
  104f90:	003fc006 	br	104e94 <__alt_data_end+0xfff04e94>
  104f94:	9011883a 	mov	r8,r18
  104f98:	00800e0e 	bge	zero,r2,104fd4 <_dtoa_r+0xf70>
  104f9c:	800b883a 	mov	r5,r16
  104fa0:	01800044 	movi	r6,1
  104fa4:	e009883a 	mov	r4,fp
  104fa8:	da001715 	stw	r8,92(sp)
  104fac:	01078680 	call	107868 <__lshift>
  104fb0:	a80b883a 	mov	r5,r21
  104fb4:	1009883a 	mov	r4,r2
  104fb8:	1021883a 	mov	r16,r2
  104fbc:	01079b00 	call	1079b0 <__mcmp>
  104fc0:	da001717 	ldw	r8,92(sp)
  104fc4:	0081960e 	bge	zero,r2,105620 <_dtoa_r+0x15bc>
  104fc8:	00800e44 	movi	r2,57
  104fcc:	40817026 	beq	r8,r2,105590 <_dtoa_r+0x152c>
  104fd0:	ba000c44 	addi	r8,r23,49
  104fd4:	8825883a 	mov	r18,r17
  104fd8:	9dc00044 	addi	r23,r19,1
  104fdc:	9a000005 	stb	r8,0(r19)
  104fe0:	a023883a 	mov	r17,r20
  104fe4:	dc000915 	stw	r16,36(sp)
  104fe8:	003f2406 	br	104c7c <__alt_data_end+0xfff04c7c>
  104fec:	00800e44 	movi	r2,57
  104ff0:	9011883a 	mov	r8,r18
  104ff4:	90816626 	beq	r18,r2,105590 <_dtoa_r+0x152c>
  104ff8:	05bff516 	blt	zero,r22,104fd0 <__alt_data_end+0xfff04fd0>
  104ffc:	003ff506 	br	104fd4 <__alt_data_end+0xfff04fd4>
  105000:	01071b80 	call	1071b8 <__multadd>
  105004:	1023883a 	mov	r17,r2
  105008:	1029883a 	mov	r20,r2
  10500c:	003fdf06 	br	104f8c <__alt_data_end+0xfff04f8c>
  105010:	e009883a 	mov	r4,fp
  105014:	01071900 	call	107190 <_Bfree>
  105018:	00800044 	movi	r2,1
  10501c:	003fbc06 	br	104f10 <__alt_data_end+0xfff04f10>
  105020:	a80b883a 	mov	r5,r21
  105024:	8009883a 	mov	r4,r16
  105028:	01079b00 	call	1079b0 <__mcmp>
  10502c:	103edb0e 	bge	r2,zero,104b9c <__alt_data_end+0xfff04b9c>
  105030:	800b883a 	mov	r5,r16
  105034:	000f883a 	mov	r7,zero
  105038:	01800284 	movi	r6,10
  10503c:	e009883a 	mov	r4,fp
  105040:	01071b80 	call	1071b8 <__multadd>
  105044:	1021883a 	mov	r16,r2
  105048:	d8800517 	ldw	r2,20(sp)
  10504c:	d8c00b17 	ldw	r3,44(sp)
  105050:	10bfffc4 	addi	r2,r2,-1
  105054:	d8800515 	stw	r2,20(sp)
  105058:	183f761e 	bne	r3,zero,104e34 <__alt_data_end+0xfff04e34>
  10505c:	d9000c17 	ldw	r4,48(sp)
  105060:	0101730e 	bge	zero,r4,105630 <_dtoa_r+0x15cc>
  105064:	d9000615 	stw	r4,24(sp)
  105068:	003ed006 	br	104bac <__alt_data_end+0xfff04bac>
  10506c:	00800084 	movi	r2,2
  105070:	3081861e 	bne	r6,r2,10568c <_dtoa_r+0x1628>
  105074:	d8000b15 	stw	zero,44(sp)
  105078:	003f3c06 	br	104d6c <__alt_data_end+0xfff04d6c>
  10507c:	dc000917 	ldw	r16,36(sp)
  105080:	003e9206 	br	104acc <__alt_data_end+0xfff04acc>
  105084:	d9c00317 	ldw	r7,12(sp)
  105088:	00800084 	movi	r2,2
  10508c:	11fec50e 	bge	r2,r7,104ba4 <__alt_data_end+0xfff04ba4>
  105090:	d9000617 	ldw	r4,24(sp)
  105094:	20013c1e 	bne	r4,zero,105588 <_dtoa_r+0x1524>
  105098:	a80b883a 	mov	r5,r21
  10509c:	000f883a 	mov	r7,zero
  1050a0:	01800144 	movi	r6,5
  1050a4:	e009883a 	mov	r4,fp
  1050a8:	01071b80 	call	1071b8 <__multadd>
  1050ac:	100b883a 	mov	r5,r2
  1050b0:	8009883a 	mov	r4,r16
  1050b4:	102b883a 	mov	r21,r2
  1050b8:	01079b00 	call	1079b0 <__mcmp>
  1050bc:	dc000915 	stw	r16,36(sp)
  1050c0:	00bf410e 	bge	zero,r2,104dc8 <__alt_data_end+0xfff04dc8>
  1050c4:	d9c00717 	ldw	r7,28(sp)
  1050c8:	00800c44 	movi	r2,49
  1050cc:	38800005 	stb	r2,0(r7)
  1050d0:	d8800517 	ldw	r2,20(sp)
  1050d4:	3dc00044 	addi	r23,r7,1
  1050d8:	10800044 	addi	r2,r2,1
  1050dc:	d8800515 	stw	r2,20(sp)
  1050e0:	003f3d06 	br	104dd8 <__alt_data_end+0xfff04dd8>
  1050e4:	d9800517 	ldw	r6,20(sp)
  1050e8:	d9c00717 	ldw	r7,28(sp)
  1050ec:	00800c44 	movi	r2,49
  1050f0:	31800044 	addi	r6,r6,1
  1050f4:	d9800515 	stw	r6,20(sp)
  1050f8:	38800005 	stb	r2,0(r7)
  1050fc:	003edf06 	br	104c7c <__alt_data_end+0xfff04c7c>
  105100:	d8000b15 	stw	zero,44(sp)
  105104:	003c9f06 	br	104384 <__alt_data_end+0xfff04384>
  105108:	903e7e1e 	bne	r18,zero,104b04 <__alt_data_end+0xfff04b04>
  10510c:	00800434 	movhi	r2,16
  105110:	10bfffc4 	addi	r2,r2,-1
  105114:	9884703a 	and	r2,r19,r2
  105118:	1000ea1e 	bne	r2,zero,1054c4 <_dtoa_r+0x1460>
  10511c:	9cdffc2c 	andhi	r19,r19,32752
  105120:	9800e826 	beq	r19,zero,1054c4 <_dtoa_r+0x1460>
  105124:	d9c00817 	ldw	r7,32(sp)
  105128:	b5800044 	addi	r22,r22,1
  10512c:	04c00044 	movi	r19,1
  105130:	39c00044 	addi	r7,r7,1
  105134:	d9c00815 	stw	r7,32(sp)
  105138:	d8800d17 	ldw	r2,52(sp)
  10513c:	103e721e 	bne	r2,zero,104b08 <__alt_data_end+0xfff04b08>
  105140:	00800044 	movi	r2,1
  105144:	003e7906 	br	104b2c <__alt_data_end+0xfff04b2c>
  105148:	8009883a 	mov	r4,r16
  10514c:	010de840 	call	10de84 <__floatsidf>
  105150:	d9800f17 	ldw	r6,60(sp)
  105154:	d9c01017 	ldw	r7,64(sp)
  105158:	1009883a 	mov	r4,r2
  10515c:	180b883a 	mov	r5,r3
  105160:	010cdf00 	call	10cdf0 <__muldf3>
  105164:	000d883a 	mov	r6,zero
  105168:	01d00734 	movhi	r7,16412
  10516c:	1009883a 	mov	r4,r2
  105170:	180b883a 	mov	r5,r3
  105174:	010ba040 	call	10ba04 <__adddf3>
  105178:	047f3034 	movhi	r17,64704
  10517c:	1021883a 	mov	r16,r2
  105180:	1c63883a 	add	r17,r3,r17
  105184:	d9000f17 	ldw	r4,60(sp)
  105188:	d9401017 	ldw	r5,64(sp)
  10518c:	000d883a 	mov	r6,zero
  105190:	01d00534 	movhi	r7,16404
  105194:	010d5080 	call	10d508 <__subdf3>
  105198:	800d883a 	mov	r6,r16
  10519c:	880f883a 	mov	r7,r17
  1051a0:	1009883a 	mov	r4,r2
  1051a4:	180b883a 	mov	r5,r3
  1051a8:	102b883a 	mov	r21,r2
  1051ac:	1829883a 	mov	r20,r3
  1051b0:	010cc200 	call	10cc20 <__gedf2>
  1051b4:	00806c16 	blt	zero,r2,105368 <_dtoa_r+0x1304>
  1051b8:	89e0003c 	xorhi	r7,r17,32768
  1051bc:	800d883a 	mov	r6,r16
  1051c0:	a809883a 	mov	r4,r21
  1051c4:	a00b883a 	mov	r5,r20
  1051c8:	010ccfc0 	call	10ccfc <__ledf2>
  1051cc:	103d7e0e 	bge	r2,zero,1047c8 <__alt_data_end+0xfff047c8>
  1051d0:	002b883a 	mov	r21,zero
  1051d4:	0023883a 	mov	r17,zero
  1051d8:	003efb06 	br	104dc8 <__alt_data_end+0xfff04dc8>
  1051dc:	d8800717 	ldw	r2,28(sp)
  1051e0:	003bd006 	br	104124 <__alt_data_end+0xfff04124>
  1051e4:	d9000a17 	ldw	r4,40(sp)
  1051e8:	d9800d17 	ldw	r6,52(sp)
  1051ec:	dd400a15 	stw	r21,40(sp)
  1051f0:	a905c83a 	sub	r2,r21,r4
  1051f4:	308d883a 	add	r6,r6,r2
  1051f8:	d9800d15 	stw	r6,52(sp)
  1051fc:	002b883a 	mov	r21,zero
  105200:	003e0606 	br	104a1c <__alt_data_end+0xfff04a1c>
  105204:	9023883a 	mov	r17,r18
  105208:	9829883a 	mov	r20,r19
  10520c:	04000084 	movi	r16,2
  105210:	003c9206 	br	10445c <__alt_data_end+0xfff0445c>
  105214:	04000044 	movi	r16,1
  105218:	dc000c15 	stw	r16,48(sp)
  10521c:	dc000615 	stw	r16,24(sp)
  105220:	dc002215 	stw	r16,136(sp)
  105224:	e0001115 	stw	zero,68(fp)
  105228:	000b883a 	mov	r5,zero
  10522c:	003c6906 	br	1043d4 <__alt_data_end+0xfff043d4>
  105230:	3021883a 	mov	r16,r6
  105234:	003ffb06 	br	105224 <__alt_data_end+0xfff05224>
  105238:	1000021e 	bne	r2,zero,105244 <_dtoa_r+0x11e0>
  10523c:	4200004c 	andi	r8,r8,1
  105240:	403e7d1e 	bne	r8,zero,104c38 <__alt_data_end+0xfff04c38>
  105244:	01000c04 	movi	r4,48
  105248:	00000106 	br	105250 <_dtoa_r+0x11ec>
  10524c:	102f883a 	mov	r23,r2
  105250:	b8bfffc4 	addi	r2,r23,-1
  105254:	10c00007 	ldb	r3,0(r2)
  105258:	193ffc26 	beq	r3,r4,10524c <__alt_data_end+0xfff0524c>
  10525c:	003e8706 	br	104c7c <__alt_data_end+0xfff04c7c>
  105260:	d8800517 	ldw	r2,20(sp)
  105264:	00a3c83a 	sub	r17,zero,r2
  105268:	8800a426 	beq	r17,zero,1054fc <_dtoa_r+0x1498>
  10526c:	888003cc 	andi	r2,r17,15
  105270:	100490fa 	slli	r2,r2,3
  105274:	00c00474 	movhi	r3,17
  105278:	18c16e04 	addi	r3,r3,1464
  10527c:	1885883a 	add	r2,r3,r2
  105280:	11800017 	ldw	r6,0(r2)
  105284:	11c00117 	ldw	r7,4(r2)
  105288:	9009883a 	mov	r4,r18
  10528c:	980b883a 	mov	r5,r19
  105290:	8823d13a 	srai	r17,r17,4
  105294:	010cdf00 	call	10cdf0 <__muldf3>
  105298:	d8800f15 	stw	r2,60(sp)
  10529c:	d8c01015 	stw	r3,64(sp)
  1052a0:	8800e826 	beq	r17,zero,105644 <_dtoa_r+0x15e0>
  1052a4:	05000474 	movhi	r20,17
  1052a8:	a5016404 	addi	r20,r20,1424
  1052ac:	04000084 	movi	r16,2
  1052b0:	8980004c 	andi	r6,r17,1
  1052b4:	1009883a 	mov	r4,r2
  1052b8:	8823d07a 	srai	r17,r17,1
  1052bc:	180b883a 	mov	r5,r3
  1052c0:	30000426 	beq	r6,zero,1052d4 <_dtoa_r+0x1270>
  1052c4:	a1800017 	ldw	r6,0(r20)
  1052c8:	a1c00117 	ldw	r7,4(r20)
  1052cc:	84000044 	addi	r16,r16,1
  1052d0:	010cdf00 	call	10cdf0 <__muldf3>
  1052d4:	a5000204 	addi	r20,r20,8
  1052d8:	883ff51e 	bne	r17,zero,1052b0 <__alt_data_end+0xfff052b0>
  1052dc:	d8800f15 	stw	r2,60(sp)
  1052e0:	d8c01015 	stw	r3,64(sp)
  1052e4:	003c7606 	br	1044c0 <__alt_data_end+0xfff044c0>
  1052e8:	00c00c04 	movi	r3,48
  1052ec:	10c00005 	stb	r3,0(r2)
  1052f0:	d8c00517 	ldw	r3,20(sp)
  1052f4:	bd3fffc3 	ldbu	r20,-1(r23)
  1052f8:	18c00044 	addi	r3,r3,1
  1052fc:	d8c00515 	stw	r3,20(sp)
  105300:	003db906 	br	1049e8 <__alt_data_end+0xfff049e8>
  105304:	89400117 	ldw	r5,4(r17)
  105308:	e009883a 	mov	r4,fp
  10530c:	01070e80 	call	1070e8 <_Balloc>
  105310:	89800417 	ldw	r6,16(r17)
  105314:	89400304 	addi	r5,r17,12
  105318:	11000304 	addi	r4,r2,12
  10531c:	31800084 	addi	r6,r6,2
  105320:	318d883a 	add	r6,r6,r6
  105324:	318d883a 	add	r6,r6,r6
  105328:	1027883a 	mov	r19,r2
  10532c:	0106e780 	call	106e78 <memcpy>
  105330:	01800044 	movi	r6,1
  105334:	980b883a 	mov	r5,r19
  105338:	e009883a 	mov	r4,fp
  10533c:	01078680 	call	107868 <__lshift>
  105340:	1029883a 	mov	r20,r2
  105344:	003ecc06 	br	104e78 <__alt_data_end+0xfff04e78>
  105348:	00800e44 	movi	r2,57
  10534c:	90809026 	beq	r18,r2,105590 <_dtoa_r+0x152c>
  105350:	92000044 	addi	r8,r18,1
  105354:	003f1f06 	br	104fd4 <__alt_data_end+0xfff04fd4>
  105358:	9011883a 	mov	r8,r18
  10535c:	8825883a 	mov	r18,r17
  105360:	a023883a 	mov	r17,r20
  105364:	003e2906 	br	104c0c <__alt_data_end+0xfff04c0c>
  105368:	002b883a 	mov	r21,zero
  10536c:	0023883a 	mov	r17,zero
  105370:	003f5406 	br	1050c4 <__alt_data_end+0xfff050c4>
  105374:	61bfffc4 	addi	r6,r12,-1
  105378:	300490fa 	slli	r2,r6,3
  10537c:	00c00474 	movhi	r3,17
  105380:	18c16e04 	addi	r3,r3,1464
  105384:	1885883a 	add	r2,r3,r2
  105388:	11000017 	ldw	r4,0(r2)
  10538c:	11400117 	ldw	r5,4(r2)
  105390:	d8800717 	ldw	r2,28(sp)
  105394:	880f883a 	mov	r7,r17
  105398:	d9801215 	stw	r6,72(sp)
  10539c:	800d883a 	mov	r6,r16
  1053a0:	db001615 	stw	r12,88(sp)
  1053a4:	15c00044 	addi	r23,r2,1
  1053a8:	010cdf00 	call	10cdf0 <__muldf3>
  1053ac:	d9401017 	ldw	r5,64(sp)
  1053b0:	d9000f17 	ldw	r4,60(sp)
  1053b4:	d8c01515 	stw	r3,84(sp)
  1053b8:	d8801415 	stw	r2,80(sp)
  1053bc:	010de040 	call	10de04 <__fixdfsi>
  1053c0:	1009883a 	mov	r4,r2
  1053c4:	1021883a 	mov	r16,r2
  1053c8:	010de840 	call	10de84 <__floatsidf>
  1053cc:	d9000f17 	ldw	r4,60(sp)
  1053d0:	d9401017 	ldw	r5,64(sp)
  1053d4:	100d883a 	mov	r6,r2
  1053d8:	180f883a 	mov	r7,r3
  1053dc:	010d5080 	call	10d508 <__subdf3>
  1053e0:	1829883a 	mov	r20,r3
  1053e4:	d8c00717 	ldw	r3,28(sp)
  1053e8:	84000c04 	addi	r16,r16,48
  1053ec:	1023883a 	mov	r17,r2
  1053f0:	1c000005 	stb	r16,0(r3)
  1053f4:	db001617 	ldw	r12,88(sp)
  1053f8:	00800044 	movi	r2,1
  1053fc:	60802226 	beq	r12,r2,105488 <_dtoa_r+0x1424>
  105400:	d9c00717 	ldw	r7,28(sp)
  105404:	8805883a 	mov	r2,r17
  105408:	b82b883a 	mov	r21,r23
  10540c:	3b19883a 	add	r12,r7,r12
  105410:	6023883a 	mov	r17,r12
  105414:	a007883a 	mov	r3,r20
  105418:	dc800f15 	stw	r18,60(sp)
  10541c:	000d883a 	mov	r6,zero
  105420:	01d00934 	movhi	r7,16420
  105424:	1009883a 	mov	r4,r2
  105428:	180b883a 	mov	r5,r3
  10542c:	010cdf00 	call	10cdf0 <__muldf3>
  105430:	180b883a 	mov	r5,r3
  105434:	1009883a 	mov	r4,r2
  105438:	1829883a 	mov	r20,r3
  10543c:	1025883a 	mov	r18,r2
  105440:	010de040 	call	10de04 <__fixdfsi>
  105444:	1009883a 	mov	r4,r2
  105448:	1021883a 	mov	r16,r2
  10544c:	010de840 	call	10de84 <__floatsidf>
  105450:	100d883a 	mov	r6,r2
  105454:	180f883a 	mov	r7,r3
  105458:	9009883a 	mov	r4,r18
  10545c:	a00b883a 	mov	r5,r20
  105460:	84000c04 	addi	r16,r16,48
  105464:	010d5080 	call	10d508 <__subdf3>
  105468:	ad400044 	addi	r21,r21,1
  10546c:	ac3fffc5 	stb	r16,-1(r21)
  105470:	ac7fea1e 	bne	r21,r17,10541c <__alt_data_end+0xfff0541c>
  105474:	1023883a 	mov	r17,r2
  105478:	d8801217 	ldw	r2,72(sp)
  10547c:	dc800f17 	ldw	r18,60(sp)
  105480:	1829883a 	mov	r20,r3
  105484:	b8af883a 	add	r23,r23,r2
  105488:	d9001417 	ldw	r4,80(sp)
  10548c:	d9401517 	ldw	r5,84(sp)
  105490:	000d883a 	mov	r6,zero
  105494:	01cff834 	movhi	r7,16352
  105498:	010ba040 	call	10ba04 <__adddf3>
  10549c:	880d883a 	mov	r6,r17
  1054a0:	a00f883a 	mov	r7,r20
  1054a4:	1009883a 	mov	r4,r2
  1054a8:	180b883a 	mov	r5,r3
  1054ac:	010ccfc0 	call	10ccfc <__ledf2>
  1054b0:	10003e0e 	bge	r2,zero,1055ac <_dtoa_r+0x1548>
  1054b4:	d9001317 	ldw	r4,76(sp)
  1054b8:	bd3fffc3 	ldbu	r20,-1(r23)
  1054bc:	d9000515 	stw	r4,20(sp)
  1054c0:	003d3b06 	br	1049b0 <__alt_data_end+0xfff049b0>
  1054c4:	0027883a 	mov	r19,zero
  1054c8:	003f1b06 	br	105138 <__alt_data_end+0xfff05138>
  1054cc:	d8800817 	ldw	r2,32(sp)
  1054d0:	11e9c83a 	sub	r20,r2,r7
  1054d4:	0005883a 	mov	r2,zero
  1054d8:	003d5406 	br	104a2c <__alt_data_end+0xfff04a2c>
  1054dc:	00800044 	movi	r2,1
  1054e0:	003dc706 	br	104c00 <__alt_data_end+0xfff04c00>
  1054e4:	d8c00217 	ldw	r3,8(sp)
  1054e8:	00800d84 	movi	r2,54
  1054ec:	dd400a17 	ldw	r21,40(sp)
  1054f0:	10c5c83a 	sub	r2,r2,r3
  1054f4:	dd000817 	ldw	r20,32(sp)
  1054f8:	003d4c06 	br	104a2c <__alt_data_end+0xfff04a2c>
  1054fc:	dc800f15 	stw	r18,60(sp)
  105500:	dcc01015 	stw	r19,64(sp)
  105504:	04000084 	movi	r16,2
  105508:	003bed06 	br	1044c0 <__alt_data_end+0xfff044c0>
  10550c:	d9000617 	ldw	r4,24(sp)
  105510:	203f0d26 	beq	r4,zero,105148 <__alt_data_end+0xfff05148>
  105514:	d9800c17 	ldw	r6,48(sp)
  105518:	01bcab0e 	bge	zero,r6,1047c8 <__alt_data_end+0xfff047c8>
  10551c:	d9401017 	ldw	r5,64(sp)
  105520:	d9000f17 	ldw	r4,60(sp)
  105524:	000d883a 	mov	r6,zero
  105528:	01d00934 	movhi	r7,16420
  10552c:	010cdf00 	call	10cdf0 <__muldf3>
  105530:	81000044 	addi	r4,r16,1
  105534:	d8800f15 	stw	r2,60(sp)
  105538:	d8c01015 	stw	r3,64(sp)
  10553c:	010de840 	call	10de84 <__floatsidf>
  105540:	d9800f17 	ldw	r6,60(sp)
  105544:	d9c01017 	ldw	r7,64(sp)
  105548:	1009883a 	mov	r4,r2
  10554c:	180b883a 	mov	r5,r3
  105550:	010cdf00 	call	10cdf0 <__muldf3>
  105554:	01d00734 	movhi	r7,16412
  105558:	000d883a 	mov	r6,zero
  10555c:	1009883a 	mov	r4,r2
  105560:	180b883a 	mov	r5,r3
  105564:	010ba040 	call	10ba04 <__adddf3>
  105568:	d9c00517 	ldw	r7,20(sp)
  10556c:	047f3034 	movhi	r17,64704
  105570:	1021883a 	mov	r16,r2
  105574:	39ffffc4 	addi	r7,r7,-1
  105578:	d9c01315 	stw	r7,76(sp)
  10557c:	1c63883a 	add	r17,r3,r17
  105580:	db000c17 	ldw	r12,48(sp)
  105584:	003bea06 	br	104530 <__alt_data_end+0xfff04530>
  105588:	dc000915 	stw	r16,36(sp)
  10558c:	003e0e06 	br	104dc8 <__alt_data_end+0xfff04dc8>
  105590:	01000e44 	movi	r4,57
  105594:	8825883a 	mov	r18,r17
  105598:	9dc00044 	addi	r23,r19,1
  10559c:	99000005 	stb	r4,0(r19)
  1055a0:	a023883a 	mov	r17,r20
  1055a4:	dc000915 	stw	r16,36(sp)
  1055a8:	003da406 	br	104c3c <__alt_data_end+0xfff04c3c>
  1055ac:	d9801417 	ldw	r6,80(sp)
  1055b0:	d9c01517 	ldw	r7,84(sp)
  1055b4:	0009883a 	mov	r4,zero
  1055b8:	014ff834 	movhi	r5,16352
  1055bc:	010d5080 	call	10d508 <__subdf3>
  1055c0:	880d883a 	mov	r6,r17
  1055c4:	a00f883a 	mov	r7,r20
  1055c8:	1009883a 	mov	r4,r2
  1055cc:	180b883a 	mov	r5,r3
  1055d0:	010cc200 	call	10cc20 <__gedf2>
  1055d4:	00bc7c0e 	bge	zero,r2,1047c8 <__alt_data_end+0xfff047c8>
  1055d8:	01000c04 	movi	r4,48
  1055dc:	00000106 	br	1055e4 <_dtoa_r+0x1580>
  1055e0:	102f883a 	mov	r23,r2
  1055e4:	b8bfffc4 	addi	r2,r23,-1
  1055e8:	10c00007 	ldb	r3,0(r2)
  1055ec:	193ffc26 	beq	r3,r4,1055e0 <__alt_data_end+0xfff055e0>
  1055f0:	d9801317 	ldw	r6,76(sp)
  1055f4:	d9800515 	stw	r6,20(sp)
  1055f8:	003c4406 	br	10470c <__alt_data_end+0xfff0470c>
  1055fc:	d9801317 	ldw	r6,76(sp)
  105600:	d9800515 	stw	r6,20(sp)
  105604:	003cea06 	br	1049b0 <__alt_data_end+0xfff049b0>
  105608:	dd800f17 	ldw	r22,60(sp)
  10560c:	dcc01017 	ldw	r19,64(sp)
  105610:	dc801217 	ldw	r18,72(sp)
  105614:	003c6c06 	br	1047c8 <__alt_data_end+0xfff047c8>
  105618:	903e031e 	bne	r18,zero,104e28 <__alt_data_end+0xfff04e28>
  10561c:	003ebb06 	br	10510c <__alt_data_end+0xfff0510c>
  105620:	103e6c1e 	bne	r2,zero,104fd4 <__alt_data_end+0xfff04fd4>
  105624:	4080004c 	andi	r2,r8,1
  105628:	103e6a26 	beq	r2,zero,104fd4 <__alt_data_end+0xfff04fd4>
  10562c:	003e6606 	br	104fc8 <__alt_data_end+0xfff04fc8>
  105630:	d8c00317 	ldw	r3,12(sp)
  105634:	00800084 	movi	r2,2
  105638:	10c02916 	blt	r2,r3,1056e0 <_dtoa_r+0x167c>
  10563c:	d9000c17 	ldw	r4,48(sp)
  105640:	003e8806 	br	105064 <__alt_data_end+0xfff05064>
  105644:	04000084 	movi	r16,2
  105648:	003b9d06 	br	1044c0 <__alt_data_end+0xfff044c0>
  10564c:	d9001317 	ldw	r4,76(sp)
  105650:	d9000515 	stw	r4,20(sp)
  105654:	003cd606 	br	1049b0 <__alt_data_end+0xfff049b0>
  105658:	d8801317 	ldw	r2,76(sp)
  10565c:	d8800515 	stw	r2,20(sp)
  105660:	003c2a06 	br	10470c <__alt_data_end+0xfff0470c>
  105664:	d9800317 	ldw	r6,12(sp)
  105668:	00800084 	movi	r2,2
  10566c:	11801516 	blt	r2,r6,1056c4 <_dtoa_r+0x1660>
  105670:	d9c00c17 	ldw	r7,48(sp)
  105674:	d9c00615 	stw	r7,24(sp)
  105678:	003df706 	br	104e58 <__alt_data_end+0xfff04e58>
  10567c:	193d3926 	beq	r3,r4,104b64 <__alt_data_end+0xfff04b64>
  105680:	00c00f04 	movi	r3,60
  105684:	1885c83a 	sub	r2,r3,r2
  105688:	003ddf06 	br	104e08 <__alt_data_end+0xfff04e08>
  10568c:	e009883a 	mov	r4,fp
  105690:	e0001115 	stw	zero,68(fp)
  105694:	000b883a 	mov	r5,zero
  105698:	01070e80 	call	1070e8 <_Balloc>
  10569c:	d8800715 	stw	r2,28(sp)
  1056a0:	d8c00717 	ldw	r3,28(sp)
  1056a4:	00bfffc4 	movi	r2,-1
  1056a8:	01000044 	movi	r4,1
  1056ac:	d8800c15 	stw	r2,48(sp)
  1056b0:	e0c01015 	stw	r3,64(fp)
  1056b4:	d9000b15 	stw	r4,44(sp)
  1056b8:	d8800615 	stw	r2,24(sp)
  1056bc:	d8002215 	stw	zero,136(sp)
  1056c0:	003c4106 	br	1047c8 <__alt_data_end+0xfff047c8>
  1056c4:	d8c00c17 	ldw	r3,48(sp)
  1056c8:	d8c00615 	stw	r3,24(sp)
  1056cc:	003e7006 	br	105090 <__alt_data_end+0xfff05090>
  1056d0:	04400044 	movi	r17,1
  1056d4:	003b2006 	br	104358 <__alt_data_end+0xfff04358>
  1056d8:	000b883a 	mov	r5,zero
  1056dc:	003b3d06 	br	1043d4 <__alt_data_end+0xfff043d4>
  1056e0:	d8800c17 	ldw	r2,48(sp)
  1056e4:	d8800615 	stw	r2,24(sp)
  1056e8:	003e6906 	br	105090 <__alt_data_end+0xfff05090>

001056ec <__sflush_r>:
  1056ec:	2880030b 	ldhu	r2,12(r5)
  1056f0:	defffb04 	addi	sp,sp,-20
  1056f4:	dcc00315 	stw	r19,12(sp)
  1056f8:	dc400115 	stw	r17,4(sp)
  1056fc:	dfc00415 	stw	ra,16(sp)
  105700:	dc800215 	stw	r18,8(sp)
  105704:	dc000015 	stw	r16,0(sp)
  105708:	10c0020c 	andi	r3,r2,8
  10570c:	2823883a 	mov	r17,r5
  105710:	2027883a 	mov	r19,r4
  105714:	1800311e 	bne	r3,zero,1057dc <__sflush_r+0xf0>
  105718:	28c00117 	ldw	r3,4(r5)
  10571c:	10820014 	ori	r2,r2,2048
  105720:	2880030d 	sth	r2,12(r5)
  105724:	00c04b0e 	bge	zero,r3,105854 <__sflush_r+0x168>
  105728:	8a000a17 	ldw	r8,40(r17)
  10572c:	40002326 	beq	r8,zero,1057bc <__sflush_r+0xd0>
  105730:	9c000017 	ldw	r16,0(r19)
  105734:	10c4000c 	andi	r3,r2,4096
  105738:	98000015 	stw	zero,0(r19)
  10573c:	18004826 	beq	r3,zero,105860 <__sflush_r+0x174>
  105740:	89801417 	ldw	r6,80(r17)
  105744:	10c0010c 	andi	r3,r2,4
  105748:	18000626 	beq	r3,zero,105764 <__sflush_r+0x78>
  10574c:	88c00117 	ldw	r3,4(r17)
  105750:	88800c17 	ldw	r2,48(r17)
  105754:	30cdc83a 	sub	r6,r6,r3
  105758:	10000226 	beq	r2,zero,105764 <__sflush_r+0x78>
  10575c:	88800f17 	ldw	r2,60(r17)
  105760:	308dc83a 	sub	r6,r6,r2
  105764:	89400717 	ldw	r5,28(r17)
  105768:	000f883a 	mov	r7,zero
  10576c:	9809883a 	mov	r4,r19
  105770:	403ee83a 	callr	r8
  105774:	00ffffc4 	movi	r3,-1
  105778:	10c04426 	beq	r2,r3,10588c <__sflush_r+0x1a0>
  10577c:	88c0030b 	ldhu	r3,12(r17)
  105780:	89000417 	ldw	r4,16(r17)
  105784:	88000115 	stw	zero,4(r17)
  105788:	197dffcc 	andi	r5,r3,63487
  10578c:	8940030d 	sth	r5,12(r17)
  105790:	89000015 	stw	r4,0(r17)
  105794:	18c4000c 	andi	r3,r3,4096
  105798:	18002c1e 	bne	r3,zero,10584c <__sflush_r+0x160>
  10579c:	89400c17 	ldw	r5,48(r17)
  1057a0:	9c000015 	stw	r16,0(r19)
  1057a4:	28000526 	beq	r5,zero,1057bc <__sflush_r+0xd0>
  1057a8:	88801004 	addi	r2,r17,64
  1057ac:	28800226 	beq	r5,r2,1057b8 <__sflush_r+0xcc>
  1057b0:	9809883a 	mov	r4,r19
  1057b4:	0105e580 	call	105e58 <_free_r>
  1057b8:	88000c15 	stw	zero,48(r17)
  1057bc:	0005883a 	mov	r2,zero
  1057c0:	dfc00417 	ldw	ra,16(sp)
  1057c4:	dcc00317 	ldw	r19,12(sp)
  1057c8:	dc800217 	ldw	r18,8(sp)
  1057cc:	dc400117 	ldw	r17,4(sp)
  1057d0:	dc000017 	ldw	r16,0(sp)
  1057d4:	dec00504 	addi	sp,sp,20
  1057d8:	f800283a 	ret
  1057dc:	2c800417 	ldw	r18,16(r5)
  1057e0:	903ff626 	beq	r18,zero,1057bc <__alt_data_end+0xfff057bc>
  1057e4:	2c000017 	ldw	r16,0(r5)
  1057e8:	108000cc 	andi	r2,r2,3
  1057ec:	2c800015 	stw	r18,0(r5)
  1057f0:	84a1c83a 	sub	r16,r16,r18
  1057f4:	1000131e 	bne	r2,zero,105844 <__sflush_r+0x158>
  1057f8:	28800517 	ldw	r2,20(r5)
  1057fc:	88800215 	stw	r2,8(r17)
  105800:	04000316 	blt	zero,r16,105810 <__sflush_r+0x124>
  105804:	003fed06 	br	1057bc <__alt_data_end+0xfff057bc>
  105808:	90a5883a 	add	r18,r18,r2
  10580c:	043feb0e 	bge	zero,r16,1057bc <__alt_data_end+0xfff057bc>
  105810:	88800917 	ldw	r2,36(r17)
  105814:	89400717 	ldw	r5,28(r17)
  105818:	800f883a 	mov	r7,r16
  10581c:	900d883a 	mov	r6,r18
  105820:	9809883a 	mov	r4,r19
  105824:	103ee83a 	callr	r2
  105828:	80a1c83a 	sub	r16,r16,r2
  10582c:	00bff616 	blt	zero,r2,105808 <__alt_data_end+0xfff05808>
  105830:	88c0030b 	ldhu	r3,12(r17)
  105834:	00bfffc4 	movi	r2,-1
  105838:	18c01014 	ori	r3,r3,64
  10583c:	88c0030d 	sth	r3,12(r17)
  105840:	003fdf06 	br	1057c0 <__alt_data_end+0xfff057c0>
  105844:	0005883a 	mov	r2,zero
  105848:	003fec06 	br	1057fc <__alt_data_end+0xfff057fc>
  10584c:	88801415 	stw	r2,80(r17)
  105850:	003fd206 	br	10579c <__alt_data_end+0xfff0579c>
  105854:	28c00f17 	ldw	r3,60(r5)
  105858:	00ffb316 	blt	zero,r3,105728 <__alt_data_end+0xfff05728>
  10585c:	003fd706 	br	1057bc <__alt_data_end+0xfff057bc>
  105860:	89400717 	ldw	r5,28(r17)
  105864:	000d883a 	mov	r6,zero
  105868:	01c00044 	movi	r7,1
  10586c:	9809883a 	mov	r4,r19
  105870:	403ee83a 	callr	r8
  105874:	100d883a 	mov	r6,r2
  105878:	00bfffc4 	movi	r2,-1
  10587c:	30801426 	beq	r6,r2,1058d0 <__sflush_r+0x1e4>
  105880:	8880030b 	ldhu	r2,12(r17)
  105884:	8a000a17 	ldw	r8,40(r17)
  105888:	003fae06 	br	105744 <__alt_data_end+0xfff05744>
  10588c:	98c00017 	ldw	r3,0(r19)
  105890:	183fba26 	beq	r3,zero,10577c <__alt_data_end+0xfff0577c>
  105894:	01000744 	movi	r4,29
  105898:	19000626 	beq	r3,r4,1058b4 <__sflush_r+0x1c8>
  10589c:	01000584 	movi	r4,22
  1058a0:	19000426 	beq	r3,r4,1058b4 <__sflush_r+0x1c8>
  1058a4:	88c0030b 	ldhu	r3,12(r17)
  1058a8:	18c01014 	ori	r3,r3,64
  1058ac:	88c0030d 	sth	r3,12(r17)
  1058b0:	003fc306 	br	1057c0 <__alt_data_end+0xfff057c0>
  1058b4:	8880030b 	ldhu	r2,12(r17)
  1058b8:	88c00417 	ldw	r3,16(r17)
  1058bc:	88000115 	stw	zero,4(r17)
  1058c0:	10bdffcc 	andi	r2,r2,63487
  1058c4:	8880030d 	sth	r2,12(r17)
  1058c8:	88c00015 	stw	r3,0(r17)
  1058cc:	003fb306 	br	10579c <__alt_data_end+0xfff0579c>
  1058d0:	98800017 	ldw	r2,0(r19)
  1058d4:	103fea26 	beq	r2,zero,105880 <__alt_data_end+0xfff05880>
  1058d8:	00c00744 	movi	r3,29
  1058dc:	10c00226 	beq	r2,r3,1058e8 <__sflush_r+0x1fc>
  1058e0:	00c00584 	movi	r3,22
  1058e4:	10c0031e 	bne	r2,r3,1058f4 <__sflush_r+0x208>
  1058e8:	9c000015 	stw	r16,0(r19)
  1058ec:	0005883a 	mov	r2,zero
  1058f0:	003fb306 	br	1057c0 <__alt_data_end+0xfff057c0>
  1058f4:	88c0030b 	ldhu	r3,12(r17)
  1058f8:	3005883a 	mov	r2,r6
  1058fc:	18c01014 	ori	r3,r3,64
  105900:	88c0030d 	sth	r3,12(r17)
  105904:	003fae06 	br	1057c0 <__alt_data_end+0xfff057c0>

00105908 <_fflush_r>:
  105908:	defffd04 	addi	sp,sp,-12
  10590c:	dc000115 	stw	r16,4(sp)
  105910:	dfc00215 	stw	ra,8(sp)
  105914:	2021883a 	mov	r16,r4
  105918:	20000226 	beq	r4,zero,105924 <_fflush_r+0x1c>
  10591c:	20800e17 	ldw	r2,56(r4)
  105920:	10000c26 	beq	r2,zero,105954 <_fflush_r+0x4c>
  105924:	2880030f 	ldh	r2,12(r5)
  105928:	1000051e 	bne	r2,zero,105940 <_fflush_r+0x38>
  10592c:	0005883a 	mov	r2,zero
  105930:	dfc00217 	ldw	ra,8(sp)
  105934:	dc000117 	ldw	r16,4(sp)
  105938:	dec00304 	addi	sp,sp,12
  10593c:	f800283a 	ret
  105940:	8009883a 	mov	r4,r16
  105944:	dfc00217 	ldw	ra,8(sp)
  105948:	dc000117 	ldw	r16,4(sp)
  10594c:	dec00304 	addi	sp,sp,12
  105950:	01056ec1 	jmpi	1056ec <__sflush_r>
  105954:	d9400015 	stw	r5,0(sp)
  105958:	0105ce40 	call	105ce4 <__sinit>
  10595c:	d9400017 	ldw	r5,0(sp)
  105960:	003ff006 	br	105924 <__alt_data_end+0xfff05924>

00105964 <fflush>:
  105964:	20000526 	beq	r4,zero,10597c <fflush+0x18>
  105968:	00800474 	movhi	r2,17
  10596c:	1085ac04 	addi	r2,r2,5808
  105970:	200b883a 	mov	r5,r4
  105974:	11000017 	ldw	r4,0(r2)
  105978:	01059081 	jmpi	105908 <_fflush_r>
  10597c:	00800474 	movhi	r2,17
  105980:	1085ab04 	addi	r2,r2,5804
  105984:	11000017 	ldw	r4,0(r2)
  105988:	01400434 	movhi	r5,16
  10598c:	29564204 	addi	r5,r5,22792
  105990:	010622c1 	jmpi	10622c <_fwalk_reent>

00105994 <__fp_unlock>:
  105994:	0005883a 	mov	r2,zero
  105998:	f800283a 	ret

0010599c <_cleanup_r>:
  10599c:	01400474 	movhi	r5,17
  1059a0:	29670704 	addi	r5,r5,-25572
  1059a4:	010622c1 	jmpi	10622c <_fwalk_reent>

001059a8 <__sinit.part.1>:
  1059a8:	defff704 	addi	sp,sp,-36
  1059ac:	00c00434 	movhi	r3,16
  1059b0:	dfc00815 	stw	ra,32(sp)
  1059b4:	ddc00715 	stw	r23,28(sp)
  1059b8:	dd800615 	stw	r22,24(sp)
  1059bc:	dd400515 	stw	r21,20(sp)
  1059c0:	dd000415 	stw	r20,16(sp)
  1059c4:	dcc00315 	stw	r19,12(sp)
  1059c8:	dc800215 	stw	r18,8(sp)
  1059cc:	dc400115 	stw	r17,4(sp)
  1059d0:	dc000015 	stw	r16,0(sp)
  1059d4:	18d66704 	addi	r3,r3,22940
  1059d8:	24000117 	ldw	r16,4(r4)
  1059dc:	20c00f15 	stw	r3,60(r4)
  1059e0:	2080bb04 	addi	r2,r4,748
  1059e4:	00c000c4 	movi	r3,3
  1059e8:	20c0b915 	stw	r3,740(r4)
  1059ec:	2080ba15 	stw	r2,744(r4)
  1059f0:	2000b815 	stw	zero,736(r4)
  1059f4:	05c00204 	movi	r23,8
  1059f8:	00800104 	movi	r2,4
  1059fc:	2025883a 	mov	r18,r4
  105a00:	b80d883a 	mov	r6,r23
  105a04:	81001704 	addi	r4,r16,92
  105a08:	000b883a 	mov	r5,zero
  105a0c:	80000015 	stw	zero,0(r16)
  105a10:	80000115 	stw	zero,4(r16)
  105a14:	80000215 	stw	zero,8(r16)
  105a18:	8080030d 	sth	r2,12(r16)
  105a1c:	80001915 	stw	zero,100(r16)
  105a20:	8000038d 	sth	zero,14(r16)
  105a24:	80000415 	stw	zero,16(r16)
  105a28:	80000515 	stw	zero,20(r16)
  105a2c:	80000615 	stw	zero,24(r16)
  105a30:	0106fc00 	call	106fc0 <memset>
  105a34:	05800474 	movhi	r22,17
  105a38:	94400217 	ldw	r17,8(r18)
  105a3c:	05400474 	movhi	r21,17
  105a40:	05000474 	movhi	r20,17
  105a44:	04c00474 	movhi	r19,17
  105a48:	b5a06b04 	addi	r22,r22,-32340
  105a4c:	ad608204 	addi	r21,r21,-32248
  105a50:	a520a104 	addi	r20,r20,-32124
  105a54:	9ce0b804 	addi	r19,r19,-32032
  105a58:	85800815 	stw	r22,32(r16)
  105a5c:	85400915 	stw	r21,36(r16)
  105a60:	85000a15 	stw	r20,40(r16)
  105a64:	84c00b15 	stw	r19,44(r16)
  105a68:	84000715 	stw	r16,28(r16)
  105a6c:	00800284 	movi	r2,10
  105a70:	8880030d 	sth	r2,12(r17)
  105a74:	00800044 	movi	r2,1
  105a78:	b80d883a 	mov	r6,r23
  105a7c:	89001704 	addi	r4,r17,92
  105a80:	000b883a 	mov	r5,zero
  105a84:	88000015 	stw	zero,0(r17)
  105a88:	88000115 	stw	zero,4(r17)
  105a8c:	88000215 	stw	zero,8(r17)
  105a90:	88001915 	stw	zero,100(r17)
  105a94:	8880038d 	sth	r2,14(r17)
  105a98:	88000415 	stw	zero,16(r17)
  105a9c:	88000515 	stw	zero,20(r17)
  105aa0:	88000615 	stw	zero,24(r17)
  105aa4:	0106fc00 	call	106fc0 <memset>
  105aa8:	94000317 	ldw	r16,12(r18)
  105aac:	00800484 	movi	r2,18
  105ab0:	8c400715 	stw	r17,28(r17)
  105ab4:	8d800815 	stw	r22,32(r17)
  105ab8:	8d400915 	stw	r21,36(r17)
  105abc:	8d000a15 	stw	r20,40(r17)
  105ac0:	8cc00b15 	stw	r19,44(r17)
  105ac4:	8080030d 	sth	r2,12(r16)
  105ac8:	00800084 	movi	r2,2
  105acc:	80000015 	stw	zero,0(r16)
  105ad0:	80000115 	stw	zero,4(r16)
  105ad4:	80000215 	stw	zero,8(r16)
  105ad8:	80001915 	stw	zero,100(r16)
  105adc:	8080038d 	sth	r2,14(r16)
  105ae0:	80000415 	stw	zero,16(r16)
  105ae4:	80000515 	stw	zero,20(r16)
  105ae8:	80000615 	stw	zero,24(r16)
  105aec:	b80d883a 	mov	r6,r23
  105af0:	000b883a 	mov	r5,zero
  105af4:	81001704 	addi	r4,r16,92
  105af8:	0106fc00 	call	106fc0 <memset>
  105afc:	00800044 	movi	r2,1
  105b00:	84000715 	stw	r16,28(r16)
  105b04:	85800815 	stw	r22,32(r16)
  105b08:	85400915 	stw	r21,36(r16)
  105b0c:	85000a15 	stw	r20,40(r16)
  105b10:	84c00b15 	stw	r19,44(r16)
  105b14:	90800e15 	stw	r2,56(r18)
  105b18:	dfc00817 	ldw	ra,32(sp)
  105b1c:	ddc00717 	ldw	r23,28(sp)
  105b20:	dd800617 	ldw	r22,24(sp)
  105b24:	dd400517 	ldw	r21,20(sp)
  105b28:	dd000417 	ldw	r20,16(sp)
  105b2c:	dcc00317 	ldw	r19,12(sp)
  105b30:	dc800217 	ldw	r18,8(sp)
  105b34:	dc400117 	ldw	r17,4(sp)
  105b38:	dc000017 	ldw	r16,0(sp)
  105b3c:	dec00904 	addi	sp,sp,36
  105b40:	f800283a 	ret

00105b44 <__fp_lock>:
  105b44:	0005883a 	mov	r2,zero
  105b48:	f800283a 	ret

00105b4c <__sfmoreglue>:
  105b4c:	defffc04 	addi	sp,sp,-16
  105b50:	dc400115 	stw	r17,4(sp)
  105b54:	2c7fffc4 	addi	r17,r5,-1
  105b58:	8c401a24 	muli	r17,r17,104
  105b5c:	dc800215 	stw	r18,8(sp)
  105b60:	2825883a 	mov	r18,r5
  105b64:	89401d04 	addi	r5,r17,116
  105b68:	dc000015 	stw	r16,0(sp)
  105b6c:	dfc00315 	stw	ra,12(sp)
  105b70:	01065880 	call	106588 <_malloc_r>
  105b74:	1021883a 	mov	r16,r2
  105b78:	10000726 	beq	r2,zero,105b98 <__sfmoreglue+0x4c>
  105b7c:	11000304 	addi	r4,r2,12
  105b80:	10000015 	stw	zero,0(r2)
  105b84:	14800115 	stw	r18,4(r2)
  105b88:	11000215 	stw	r4,8(r2)
  105b8c:	89801a04 	addi	r6,r17,104
  105b90:	000b883a 	mov	r5,zero
  105b94:	0106fc00 	call	106fc0 <memset>
  105b98:	8005883a 	mov	r2,r16
  105b9c:	dfc00317 	ldw	ra,12(sp)
  105ba0:	dc800217 	ldw	r18,8(sp)
  105ba4:	dc400117 	ldw	r17,4(sp)
  105ba8:	dc000017 	ldw	r16,0(sp)
  105bac:	dec00404 	addi	sp,sp,16
  105bb0:	f800283a 	ret

00105bb4 <__sfp>:
  105bb4:	defffb04 	addi	sp,sp,-20
  105bb8:	dc000015 	stw	r16,0(sp)
  105bbc:	04000474 	movhi	r16,17
  105bc0:	8405ab04 	addi	r16,r16,5804
  105bc4:	dcc00315 	stw	r19,12(sp)
  105bc8:	2027883a 	mov	r19,r4
  105bcc:	81000017 	ldw	r4,0(r16)
  105bd0:	dfc00415 	stw	ra,16(sp)
  105bd4:	dc800215 	stw	r18,8(sp)
  105bd8:	20800e17 	ldw	r2,56(r4)
  105bdc:	dc400115 	stw	r17,4(sp)
  105be0:	1000021e 	bne	r2,zero,105bec <__sfp+0x38>
  105be4:	01059a80 	call	1059a8 <__sinit.part.1>
  105be8:	81000017 	ldw	r4,0(r16)
  105bec:	2480b804 	addi	r18,r4,736
  105bf0:	047fffc4 	movi	r17,-1
  105bf4:	91000117 	ldw	r4,4(r18)
  105bf8:	94000217 	ldw	r16,8(r18)
  105bfc:	213fffc4 	addi	r4,r4,-1
  105c00:	20000a16 	blt	r4,zero,105c2c <__sfp+0x78>
  105c04:	8080030f 	ldh	r2,12(r16)
  105c08:	10000c26 	beq	r2,zero,105c3c <__sfp+0x88>
  105c0c:	80c01d04 	addi	r3,r16,116
  105c10:	00000206 	br	105c1c <__sfp+0x68>
  105c14:	18bfe60f 	ldh	r2,-104(r3)
  105c18:	10000826 	beq	r2,zero,105c3c <__sfp+0x88>
  105c1c:	213fffc4 	addi	r4,r4,-1
  105c20:	1c3ffd04 	addi	r16,r3,-12
  105c24:	18c01a04 	addi	r3,r3,104
  105c28:	247ffa1e 	bne	r4,r17,105c14 <__alt_data_end+0xfff05c14>
  105c2c:	90800017 	ldw	r2,0(r18)
  105c30:	10001d26 	beq	r2,zero,105ca8 <__sfp+0xf4>
  105c34:	1025883a 	mov	r18,r2
  105c38:	003fee06 	br	105bf4 <__alt_data_end+0xfff05bf4>
  105c3c:	00bfffc4 	movi	r2,-1
  105c40:	8080038d 	sth	r2,14(r16)
  105c44:	00800044 	movi	r2,1
  105c48:	8080030d 	sth	r2,12(r16)
  105c4c:	80001915 	stw	zero,100(r16)
  105c50:	80000015 	stw	zero,0(r16)
  105c54:	80000215 	stw	zero,8(r16)
  105c58:	80000115 	stw	zero,4(r16)
  105c5c:	80000415 	stw	zero,16(r16)
  105c60:	80000515 	stw	zero,20(r16)
  105c64:	80000615 	stw	zero,24(r16)
  105c68:	01800204 	movi	r6,8
  105c6c:	000b883a 	mov	r5,zero
  105c70:	81001704 	addi	r4,r16,92
  105c74:	0106fc00 	call	106fc0 <memset>
  105c78:	8005883a 	mov	r2,r16
  105c7c:	80000c15 	stw	zero,48(r16)
  105c80:	80000d15 	stw	zero,52(r16)
  105c84:	80001115 	stw	zero,68(r16)
  105c88:	80001215 	stw	zero,72(r16)
  105c8c:	dfc00417 	ldw	ra,16(sp)
  105c90:	dcc00317 	ldw	r19,12(sp)
  105c94:	dc800217 	ldw	r18,8(sp)
  105c98:	dc400117 	ldw	r17,4(sp)
  105c9c:	dc000017 	ldw	r16,0(sp)
  105ca0:	dec00504 	addi	sp,sp,20
  105ca4:	f800283a 	ret
  105ca8:	01400104 	movi	r5,4
  105cac:	9809883a 	mov	r4,r19
  105cb0:	0105b4c0 	call	105b4c <__sfmoreglue>
  105cb4:	90800015 	stw	r2,0(r18)
  105cb8:	103fde1e 	bne	r2,zero,105c34 <__alt_data_end+0xfff05c34>
  105cbc:	00800304 	movi	r2,12
  105cc0:	98800015 	stw	r2,0(r19)
  105cc4:	0005883a 	mov	r2,zero
  105cc8:	003ff006 	br	105c8c <__alt_data_end+0xfff05c8c>

00105ccc <_cleanup>:
  105ccc:	00800474 	movhi	r2,17
  105cd0:	1085ab04 	addi	r2,r2,5804
  105cd4:	11000017 	ldw	r4,0(r2)
  105cd8:	01400474 	movhi	r5,17
  105cdc:	29670704 	addi	r5,r5,-25572
  105ce0:	010622c1 	jmpi	10622c <_fwalk_reent>

00105ce4 <__sinit>:
  105ce4:	20800e17 	ldw	r2,56(r4)
  105ce8:	10000126 	beq	r2,zero,105cf0 <__sinit+0xc>
  105cec:	f800283a 	ret
  105cf0:	01059a81 	jmpi	1059a8 <__sinit.part.1>

00105cf4 <__sfp_lock_acquire>:
  105cf4:	f800283a 	ret

00105cf8 <__sfp_lock_release>:
  105cf8:	f800283a 	ret

00105cfc <__sinit_lock_acquire>:
  105cfc:	f800283a 	ret

00105d00 <__sinit_lock_release>:
  105d00:	f800283a 	ret

00105d04 <__fp_lock_all>:
  105d04:	00800474 	movhi	r2,17
  105d08:	1085ac04 	addi	r2,r2,5808
  105d0c:	11000017 	ldw	r4,0(r2)
  105d10:	01400434 	movhi	r5,16
  105d14:	2956d104 	addi	r5,r5,23364
  105d18:	01061681 	jmpi	106168 <_fwalk>

00105d1c <__fp_unlock_all>:
  105d1c:	00800474 	movhi	r2,17
  105d20:	1085ac04 	addi	r2,r2,5808
  105d24:	11000017 	ldw	r4,0(r2)
  105d28:	01400434 	movhi	r5,16
  105d2c:	29566504 	addi	r5,r5,22932
  105d30:	01061681 	jmpi	106168 <_fwalk>

00105d34 <_malloc_trim_r>:
  105d34:	defffb04 	addi	sp,sp,-20
  105d38:	dcc00315 	stw	r19,12(sp)
  105d3c:	04c00474 	movhi	r19,17
  105d40:	dc800215 	stw	r18,8(sp)
  105d44:	dc400115 	stw	r17,4(sp)
  105d48:	dc000015 	stw	r16,0(sp)
  105d4c:	dfc00415 	stw	ra,16(sp)
  105d50:	2821883a 	mov	r16,r5
  105d54:	9cc40e04 	addi	r19,r19,4152
  105d58:	2025883a 	mov	r18,r4
  105d5c:	010e5840 	call	10e584 <__malloc_lock>
  105d60:	98800217 	ldw	r2,8(r19)
  105d64:	14400117 	ldw	r17,4(r2)
  105d68:	00bfff04 	movi	r2,-4
  105d6c:	88a2703a 	and	r17,r17,r2
  105d70:	8c21c83a 	sub	r16,r17,r16
  105d74:	8403fbc4 	addi	r16,r16,4079
  105d78:	8020d33a 	srli	r16,r16,12
  105d7c:	0083ffc4 	movi	r2,4095
  105d80:	843fffc4 	addi	r16,r16,-1
  105d84:	8020933a 	slli	r16,r16,12
  105d88:	1400060e 	bge	r2,r16,105da4 <_malloc_trim_r+0x70>
  105d8c:	000b883a 	mov	r5,zero
  105d90:	9009883a 	mov	r4,r18
  105d94:	01081580 	call	108158 <_sbrk_r>
  105d98:	98c00217 	ldw	r3,8(r19)
  105d9c:	1c47883a 	add	r3,r3,r17
  105da0:	10c00a26 	beq	r2,r3,105dcc <_malloc_trim_r+0x98>
  105da4:	9009883a 	mov	r4,r18
  105da8:	010e5a80 	call	10e5a8 <__malloc_unlock>
  105dac:	0005883a 	mov	r2,zero
  105db0:	dfc00417 	ldw	ra,16(sp)
  105db4:	dcc00317 	ldw	r19,12(sp)
  105db8:	dc800217 	ldw	r18,8(sp)
  105dbc:	dc400117 	ldw	r17,4(sp)
  105dc0:	dc000017 	ldw	r16,0(sp)
  105dc4:	dec00504 	addi	sp,sp,20
  105dc8:	f800283a 	ret
  105dcc:	040bc83a 	sub	r5,zero,r16
  105dd0:	9009883a 	mov	r4,r18
  105dd4:	01081580 	call	108158 <_sbrk_r>
  105dd8:	00ffffc4 	movi	r3,-1
  105ddc:	10c00d26 	beq	r2,r3,105e14 <_malloc_trim_r+0xe0>
  105de0:	00c00474 	movhi	r3,17
  105de4:	18c9d504 	addi	r3,r3,10068
  105de8:	18800017 	ldw	r2,0(r3)
  105dec:	99000217 	ldw	r4,8(r19)
  105df0:	8c23c83a 	sub	r17,r17,r16
  105df4:	8c400054 	ori	r17,r17,1
  105df8:	1421c83a 	sub	r16,r2,r16
  105dfc:	24400115 	stw	r17,4(r4)
  105e00:	9009883a 	mov	r4,r18
  105e04:	1c000015 	stw	r16,0(r3)
  105e08:	010e5a80 	call	10e5a8 <__malloc_unlock>
  105e0c:	00800044 	movi	r2,1
  105e10:	003fe706 	br	105db0 <__alt_data_end+0xfff05db0>
  105e14:	000b883a 	mov	r5,zero
  105e18:	9009883a 	mov	r4,r18
  105e1c:	01081580 	call	108158 <_sbrk_r>
  105e20:	99000217 	ldw	r4,8(r19)
  105e24:	014003c4 	movi	r5,15
  105e28:	1107c83a 	sub	r3,r2,r4
  105e2c:	28ffdd0e 	bge	r5,r3,105da4 <__alt_data_end+0xfff05da4>
  105e30:	01400474 	movhi	r5,17
  105e34:	2945ae04 	addi	r5,r5,5816
  105e38:	29400017 	ldw	r5,0(r5)
  105e3c:	18c00054 	ori	r3,r3,1
  105e40:	20c00115 	stw	r3,4(r4)
  105e44:	00c00474 	movhi	r3,17
  105e48:	1145c83a 	sub	r2,r2,r5
  105e4c:	18c9d504 	addi	r3,r3,10068
  105e50:	18800015 	stw	r2,0(r3)
  105e54:	003fd306 	br	105da4 <__alt_data_end+0xfff05da4>

00105e58 <_free_r>:
  105e58:	28004126 	beq	r5,zero,105f60 <_free_r+0x108>
  105e5c:	defffd04 	addi	sp,sp,-12
  105e60:	dc400115 	stw	r17,4(sp)
  105e64:	dc000015 	stw	r16,0(sp)
  105e68:	2023883a 	mov	r17,r4
  105e6c:	2821883a 	mov	r16,r5
  105e70:	dfc00215 	stw	ra,8(sp)
  105e74:	010e5840 	call	10e584 <__malloc_lock>
  105e78:	81ffff17 	ldw	r7,-4(r16)
  105e7c:	00bfff84 	movi	r2,-2
  105e80:	01000474 	movhi	r4,17
  105e84:	81bffe04 	addi	r6,r16,-8
  105e88:	3884703a 	and	r2,r7,r2
  105e8c:	21040e04 	addi	r4,r4,4152
  105e90:	308b883a 	add	r5,r6,r2
  105e94:	2a400117 	ldw	r9,4(r5)
  105e98:	22000217 	ldw	r8,8(r4)
  105e9c:	00ffff04 	movi	r3,-4
  105ea0:	48c6703a 	and	r3,r9,r3
  105ea4:	2a005726 	beq	r5,r8,106004 <_free_r+0x1ac>
  105ea8:	28c00115 	stw	r3,4(r5)
  105eac:	39c0004c 	andi	r7,r7,1
  105eb0:	3800091e 	bne	r7,zero,105ed8 <_free_r+0x80>
  105eb4:	823ffe17 	ldw	r8,-8(r16)
  105eb8:	22400204 	addi	r9,r4,8
  105ebc:	320dc83a 	sub	r6,r6,r8
  105ec0:	31c00217 	ldw	r7,8(r6)
  105ec4:	1205883a 	add	r2,r2,r8
  105ec8:	3a406526 	beq	r7,r9,106060 <_free_r+0x208>
  105ecc:	32000317 	ldw	r8,12(r6)
  105ed0:	3a000315 	stw	r8,12(r7)
  105ed4:	41c00215 	stw	r7,8(r8)
  105ed8:	28cf883a 	add	r7,r5,r3
  105edc:	39c00117 	ldw	r7,4(r7)
  105ee0:	39c0004c 	andi	r7,r7,1
  105ee4:	38003a26 	beq	r7,zero,105fd0 <_free_r+0x178>
  105ee8:	10c00054 	ori	r3,r2,1
  105eec:	30c00115 	stw	r3,4(r6)
  105ef0:	3087883a 	add	r3,r6,r2
  105ef4:	18800015 	stw	r2,0(r3)
  105ef8:	00c07fc4 	movi	r3,511
  105efc:	18801936 	bltu	r3,r2,105f64 <_free_r+0x10c>
  105f00:	1004d0fa 	srli	r2,r2,3
  105f04:	01c00044 	movi	r7,1
  105f08:	21400117 	ldw	r5,4(r4)
  105f0c:	10c00044 	addi	r3,r2,1
  105f10:	18c7883a 	add	r3,r3,r3
  105f14:	1005d0ba 	srai	r2,r2,2
  105f18:	18c7883a 	add	r3,r3,r3
  105f1c:	18c7883a 	add	r3,r3,r3
  105f20:	1907883a 	add	r3,r3,r4
  105f24:	3884983a 	sll	r2,r7,r2
  105f28:	19c00017 	ldw	r7,0(r3)
  105f2c:	1a3ffe04 	addi	r8,r3,-8
  105f30:	1144b03a 	or	r2,r2,r5
  105f34:	32000315 	stw	r8,12(r6)
  105f38:	31c00215 	stw	r7,8(r6)
  105f3c:	20800115 	stw	r2,4(r4)
  105f40:	19800015 	stw	r6,0(r3)
  105f44:	39800315 	stw	r6,12(r7)
  105f48:	8809883a 	mov	r4,r17
  105f4c:	dfc00217 	ldw	ra,8(sp)
  105f50:	dc400117 	ldw	r17,4(sp)
  105f54:	dc000017 	ldw	r16,0(sp)
  105f58:	dec00304 	addi	sp,sp,12
  105f5c:	010e5a81 	jmpi	10e5a8 <__malloc_unlock>
  105f60:	f800283a 	ret
  105f64:	100ad27a 	srli	r5,r2,9
  105f68:	00c00104 	movi	r3,4
  105f6c:	19404a36 	bltu	r3,r5,106098 <_free_r+0x240>
  105f70:	100ad1ba 	srli	r5,r2,6
  105f74:	28c00e44 	addi	r3,r5,57
  105f78:	18c7883a 	add	r3,r3,r3
  105f7c:	29400e04 	addi	r5,r5,56
  105f80:	18c7883a 	add	r3,r3,r3
  105f84:	18c7883a 	add	r3,r3,r3
  105f88:	1909883a 	add	r4,r3,r4
  105f8c:	20c00017 	ldw	r3,0(r4)
  105f90:	01c00474 	movhi	r7,17
  105f94:	213ffe04 	addi	r4,r4,-8
  105f98:	39c40e04 	addi	r7,r7,4152
  105f9c:	20c04426 	beq	r4,r3,1060b0 <_free_r+0x258>
  105fa0:	01ffff04 	movi	r7,-4
  105fa4:	19400117 	ldw	r5,4(r3)
  105fa8:	29ca703a 	and	r5,r5,r7
  105fac:	1140022e 	bgeu	r2,r5,105fb8 <_free_r+0x160>
  105fb0:	18c00217 	ldw	r3,8(r3)
  105fb4:	20fffb1e 	bne	r4,r3,105fa4 <__alt_data_end+0xfff05fa4>
  105fb8:	19000317 	ldw	r4,12(r3)
  105fbc:	31000315 	stw	r4,12(r6)
  105fc0:	30c00215 	stw	r3,8(r6)
  105fc4:	21800215 	stw	r6,8(r4)
  105fc8:	19800315 	stw	r6,12(r3)
  105fcc:	003fde06 	br	105f48 <__alt_data_end+0xfff05f48>
  105fd0:	29c00217 	ldw	r7,8(r5)
  105fd4:	10c5883a 	add	r2,r2,r3
  105fd8:	00c00474 	movhi	r3,17
  105fdc:	18c41004 	addi	r3,r3,4160
  105fe0:	38c03b26 	beq	r7,r3,1060d0 <_free_r+0x278>
  105fe4:	2a000317 	ldw	r8,12(r5)
  105fe8:	11400054 	ori	r5,r2,1
  105fec:	3087883a 	add	r3,r6,r2
  105ff0:	3a000315 	stw	r8,12(r7)
  105ff4:	41c00215 	stw	r7,8(r8)
  105ff8:	31400115 	stw	r5,4(r6)
  105ffc:	18800015 	stw	r2,0(r3)
  106000:	003fbd06 	br	105ef8 <__alt_data_end+0xfff05ef8>
  106004:	39c0004c 	andi	r7,r7,1
  106008:	10c5883a 	add	r2,r2,r3
  10600c:	3800071e 	bne	r7,zero,10602c <_free_r+0x1d4>
  106010:	81fffe17 	ldw	r7,-8(r16)
  106014:	31cdc83a 	sub	r6,r6,r7
  106018:	30c00317 	ldw	r3,12(r6)
  10601c:	31400217 	ldw	r5,8(r6)
  106020:	11c5883a 	add	r2,r2,r7
  106024:	28c00315 	stw	r3,12(r5)
  106028:	19400215 	stw	r5,8(r3)
  10602c:	10c00054 	ori	r3,r2,1
  106030:	30c00115 	stw	r3,4(r6)
  106034:	00c00474 	movhi	r3,17
  106038:	18c5af04 	addi	r3,r3,5820
  10603c:	18c00017 	ldw	r3,0(r3)
  106040:	21800215 	stw	r6,8(r4)
  106044:	10ffc036 	bltu	r2,r3,105f48 <__alt_data_end+0xfff05f48>
  106048:	00800474 	movhi	r2,17
  10604c:	1089c904 	addi	r2,r2,10020
  106050:	11400017 	ldw	r5,0(r2)
  106054:	8809883a 	mov	r4,r17
  106058:	0105d340 	call	105d34 <_malloc_trim_r>
  10605c:	003fba06 	br	105f48 <__alt_data_end+0xfff05f48>
  106060:	28c9883a 	add	r4,r5,r3
  106064:	21000117 	ldw	r4,4(r4)
  106068:	2100004c 	andi	r4,r4,1
  10606c:	2000391e 	bne	r4,zero,106154 <_free_r+0x2fc>
  106070:	29c00217 	ldw	r7,8(r5)
  106074:	29000317 	ldw	r4,12(r5)
  106078:	1885883a 	add	r2,r3,r2
  10607c:	10c00054 	ori	r3,r2,1
  106080:	39000315 	stw	r4,12(r7)
  106084:	21c00215 	stw	r7,8(r4)
  106088:	30c00115 	stw	r3,4(r6)
  10608c:	308d883a 	add	r6,r6,r2
  106090:	30800015 	stw	r2,0(r6)
  106094:	003fac06 	br	105f48 <__alt_data_end+0xfff05f48>
  106098:	00c00504 	movi	r3,20
  10609c:	19401536 	bltu	r3,r5,1060f4 <_free_r+0x29c>
  1060a0:	28c01704 	addi	r3,r5,92
  1060a4:	18c7883a 	add	r3,r3,r3
  1060a8:	294016c4 	addi	r5,r5,91
  1060ac:	003fb406 	br	105f80 <__alt_data_end+0xfff05f80>
  1060b0:	280bd0ba 	srai	r5,r5,2
  1060b4:	00c00044 	movi	r3,1
  1060b8:	38800117 	ldw	r2,4(r7)
  1060bc:	194a983a 	sll	r5,r3,r5
  1060c0:	2007883a 	mov	r3,r4
  1060c4:	2884b03a 	or	r2,r5,r2
  1060c8:	38800115 	stw	r2,4(r7)
  1060cc:	003fbb06 	br	105fbc <__alt_data_end+0xfff05fbc>
  1060d0:	21800515 	stw	r6,20(r4)
  1060d4:	21800415 	stw	r6,16(r4)
  1060d8:	10c00054 	ori	r3,r2,1
  1060dc:	31c00315 	stw	r7,12(r6)
  1060e0:	31c00215 	stw	r7,8(r6)
  1060e4:	30c00115 	stw	r3,4(r6)
  1060e8:	308d883a 	add	r6,r6,r2
  1060ec:	30800015 	stw	r2,0(r6)
  1060f0:	003f9506 	br	105f48 <__alt_data_end+0xfff05f48>
  1060f4:	00c01504 	movi	r3,84
  1060f8:	19400536 	bltu	r3,r5,106110 <_free_r+0x2b8>
  1060fc:	100ad33a 	srli	r5,r2,12
  106100:	28c01bc4 	addi	r3,r5,111
  106104:	18c7883a 	add	r3,r3,r3
  106108:	29401b84 	addi	r5,r5,110
  10610c:	003f9c06 	br	105f80 <__alt_data_end+0xfff05f80>
  106110:	00c05504 	movi	r3,340
  106114:	19400536 	bltu	r3,r5,10612c <_free_r+0x2d4>
  106118:	100ad3fa 	srli	r5,r2,15
  10611c:	28c01e04 	addi	r3,r5,120
  106120:	18c7883a 	add	r3,r3,r3
  106124:	29401dc4 	addi	r5,r5,119
  106128:	003f9506 	br	105f80 <__alt_data_end+0xfff05f80>
  10612c:	00c15504 	movi	r3,1364
  106130:	19400536 	bltu	r3,r5,106148 <_free_r+0x2f0>
  106134:	100ad4ba 	srli	r5,r2,18
  106138:	28c01f44 	addi	r3,r5,125
  10613c:	18c7883a 	add	r3,r3,r3
  106140:	29401f04 	addi	r5,r5,124
  106144:	003f8e06 	br	105f80 <__alt_data_end+0xfff05f80>
  106148:	00c03f84 	movi	r3,254
  10614c:	01401f84 	movi	r5,126
  106150:	003f8b06 	br	105f80 <__alt_data_end+0xfff05f80>
  106154:	10c00054 	ori	r3,r2,1
  106158:	30c00115 	stw	r3,4(r6)
  10615c:	308d883a 	add	r6,r6,r2
  106160:	30800015 	stw	r2,0(r6)
  106164:	003f7806 	br	105f48 <__alt_data_end+0xfff05f48>

00106168 <_fwalk>:
  106168:	defff704 	addi	sp,sp,-36
  10616c:	dd000415 	stw	r20,16(sp)
  106170:	dfc00815 	stw	ra,32(sp)
  106174:	ddc00715 	stw	r23,28(sp)
  106178:	dd800615 	stw	r22,24(sp)
  10617c:	dd400515 	stw	r21,20(sp)
  106180:	dcc00315 	stw	r19,12(sp)
  106184:	dc800215 	stw	r18,8(sp)
  106188:	dc400115 	stw	r17,4(sp)
  10618c:	dc000015 	stw	r16,0(sp)
  106190:	2500b804 	addi	r20,r4,736
  106194:	a0002326 	beq	r20,zero,106224 <_fwalk+0xbc>
  106198:	282b883a 	mov	r21,r5
  10619c:	002f883a 	mov	r23,zero
  1061a0:	05800044 	movi	r22,1
  1061a4:	04ffffc4 	movi	r19,-1
  1061a8:	a4400117 	ldw	r17,4(r20)
  1061ac:	a4800217 	ldw	r18,8(r20)
  1061b0:	8c7fffc4 	addi	r17,r17,-1
  1061b4:	88000d16 	blt	r17,zero,1061ec <_fwalk+0x84>
  1061b8:	94000304 	addi	r16,r18,12
  1061bc:	94800384 	addi	r18,r18,14
  1061c0:	8080000b 	ldhu	r2,0(r16)
  1061c4:	8c7fffc4 	addi	r17,r17,-1
  1061c8:	813ffd04 	addi	r4,r16,-12
  1061cc:	b080042e 	bgeu	r22,r2,1061e0 <_fwalk+0x78>
  1061d0:	9080000f 	ldh	r2,0(r18)
  1061d4:	14c00226 	beq	r2,r19,1061e0 <_fwalk+0x78>
  1061d8:	a83ee83a 	callr	r21
  1061dc:	b8aeb03a 	or	r23,r23,r2
  1061e0:	84001a04 	addi	r16,r16,104
  1061e4:	94801a04 	addi	r18,r18,104
  1061e8:	8cfff51e 	bne	r17,r19,1061c0 <__alt_data_end+0xfff061c0>
  1061ec:	a5000017 	ldw	r20,0(r20)
  1061f0:	a03fed1e 	bne	r20,zero,1061a8 <__alt_data_end+0xfff061a8>
  1061f4:	b805883a 	mov	r2,r23
  1061f8:	dfc00817 	ldw	ra,32(sp)
  1061fc:	ddc00717 	ldw	r23,28(sp)
  106200:	dd800617 	ldw	r22,24(sp)
  106204:	dd400517 	ldw	r21,20(sp)
  106208:	dd000417 	ldw	r20,16(sp)
  10620c:	dcc00317 	ldw	r19,12(sp)
  106210:	dc800217 	ldw	r18,8(sp)
  106214:	dc400117 	ldw	r17,4(sp)
  106218:	dc000017 	ldw	r16,0(sp)
  10621c:	dec00904 	addi	sp,sp,36
  106220:	f800283a 	ret
  106224:	002f883a 	mov	r23,zero
  106228:	003ff206 	br	1061f4 <__alt_data_end+0xfff061f4>

0010622c <_fwalk_reent>:
  10622c:	defff704 	addi	sp,sp,-36
  106230:	dd000415 	stw	r20,16(sp)
  106234:	dfc00815 	stw	ra,32(sp)
  106238:	ddc00715 	stw	r23,28(sp)
  10623c:	dd800615 	stw	r22,24(sp)
  106240:	dd400515 	stw	r21,20(sp)
  106244:	dcc00315 	stw	r19,12(sp)
  106248:	dc800215 	stw	r18,8(sp)
  10624c:	dc400115 	stw	r17,4(sp)
  106250:	dc000015 	stw	r16,0(sp)
  106254:	2500b804 	addi	r20,r4,736
  106258:	a0002326 	beq	r20,zero,1062e8 <_fwalk_reent+0xbc>
  10625c:	282b883a 	mov	r21,r5
  106260:	2027883a 	mov	r19,r4
  106264:	002f883a 	mov	r23,zero
  106268:	05800044 	movi	r22,1
  10626c:	04bfffc4 	movi	r18,-1
  106270:	a4400117 	ldw	r17,4(r20)
  106274:	a4000217 	ldw	r16,8(r20)
  106278:	8c7fffc4 	addi	r17,r17,-1
  10627c:	88000c16 	blt	r17,zero,1062b0 <_fwalk_reent+0x84>
  106280:	84000304 	addi	r16,r16,12
  106284:	8080000b 	ldhu	r2,0(r16)
  106288:	8c7fffc4 	addi	r17,r17,-1
  10628c:	817ffd04 	addi	r5,r16,-12
  106290:	b080052e 	bgeu	r22,r2,1062a8 <_fwalk_reent+0x7c>
  106294:	8080008f 	ldh	r2,2(r16)
  106298:	9809883a 	mov	r4,r19
  10629c:	14800226 	beq	r2,r18,1062a8 <_fwalk_reent+0x7c>
  1062a0:	a83ee83a 	callr	r21
  1062a4:	b8aeb03a 	or	r23,r23,r2
  1062a8:	84001a04 	addi	r16,r16,104
  1062ac:	8cbff51e 	bne	r17,r18,106284 <__alt_data_end+0xfff06284>
  1062b0:	a5000017 	ldw	r20,0(r20)
  1062b4:	a03fee1e 	bne	r20,zero,106270 <__alt_data_end+0xfff06270>
  1062b8:	b805883a 	mov	r2,r23
  1062bc:	dfc00817 	ldw	ra,32(sp)
  1062c0:	ddc00717 	ldw	r23,28(sp)
  1062c4:	dd800617 	ldw	r22,24(sp)
  1062c8:	dd400517 	ldw	r21,20(sp)
  1062cc:	dd000417 	ldw	r20,16(sp)
  1062d0:	dcc00317 	ldw	r19,12(sp)
  1062d4:	dc800217 	ldw	r18,8(sp)
  1062d8:	dc400117 	ldw	r17,4(sp)
  1062dc:	dc000017 	ldw	r16,0(sp)
  1062e0:	dec00904 	addi	sp,sp,36
  1062e4:	f800283a 	ret
  1062e8:	002f883a 	mov	r23,zero
  1062ec:	003ff206 	br	1062b8 <__alt_data_end+0xfff062b8>

001062f0 <_setlocale_r>:
  1062f0:	30001b26 	beq	r6,zero,106360 <_setlocale_r+0x70>
  1062f4:	01400474 	movhi	r5,17
  1062f8:	defffe04 	addi	sp,sp,-8
  1062fc:	29415404 	addi	r5,r5,1360
  106300:	3009883a 	mov	r4,r6
  106304:	dc000015 	stw	r16,0(sp)
  106308:	dfc00115 	stw	ra,4(sp)
  10630c:	3021883a 	mov	r16,r6
  106310:	01082e80 	call	1082e8 <strcmp>
  106314:	1000061e 	bne	r2,zero,106330 <_setlocale_r+0x40>
  106318:	00800474 	movhi	r2,17
  10631c:	10815304 	addi	r2,r2,1356
  106320:	dfc00117 	ldw	ra,4(sp)
  106324:	dc000017 	ldw	r16,0(sp)
  106328:	dec00204 	addi	sp,sp,8
  10632c:	f800283a 	ret
  106330:	01400474 	movhi	r5,17
  106334:	29415304 	addi	r5,r5,1356
  106338:	8009883a 	mov	r4,r16
  10633c:	01082e80 	call	1082e8 <strcmp>
  106340:	103ff526 	beq	r2,zero,106318 <__alt_data_end+0xfff06318>
  106344:	01400474 	movhi	r5,17
  106348:	29413e04 	addi	r5,r5,1272
  10634c:	8009883a 	mov	r4,r16
  106350:	01082e80 	call	1082e8 <strcmp>
  106354:	103ff026 	beq	r2,zero,106318 <__alt_data_end+0xfff06318>
  106358:	0005883a 	mov	r2,zero
  10635c:	003ff006 	br	106320 <__alt_data_end+0xfff06320>
  106360:	00800474 	movhi	r2,17
  106364:	10815304 	addi	r2,r2,1356
  106368:	f800283a 	ret

0010636c <__locale_charset>:
  10636c:	00800474 	movhi	r2,17
  106370:	1083f804 	addi	r2,r2,4064
  106374:	f800283a 	ret

00106378 <__locale_mb_cur_max>:
  106378:	00800474 	movhi	r2,17
  10637c:	1085ad04 	addi	r2,r2,5812
  106380:	10800017 	ldw	r2,0(r2)
  106384:	f800283a 	ret

00106388 <__locale_msgcharset>:
  106388:	00800474 	movhi	r2,17
  10638c:	1083f004 	addi	r2,r2,4032
  106390:	f800283a 	ret

00106394 <__locale_cjk_lang>:
  106394:	0005883a 	mov	r2,zero
  106398:	f800283a 	ret

0010639c <_localeconv_r>:
  10639c:	00800474 	movhi	r2,17
  1063a0:	10840004 	addi	r2,r2,4096
  1063a4:	f800283a 	ret

001063a8 <setlocale>:
  1063a8:	00800474 	movhi	r2,17
  1063ac:	1085ac04 	addi	r2,r2,5808
  1063b0:	280d883a 	mov	r6,r5
  1063b4:	200b883a 	mov	r5,r4
  1063b8:	11000017 	ldw	r4,0(r2)
  1063bc:	01062f01 	jmpi	1062f0 <_setlocale_r>

001063c0 <localeconv>:
  1063c0:	00800474 	movhi	r2,17
  1063c4:	10840004 	addi	r2,r2,4096
  1063c8:	f800283a 	ret

001063cc <__smakebuf_r>:
  1063cc:	2880030b 	ldhu	r2,12(r5)
  1063d0:	10c0008c 	andi	r3,r2,2
  1063d4:	1800411e 	bne	r3,zero,1064dc <__smakebuf_r+0x110>
  1063d8:	deffec04 	addi	sp,sp,-80
  1063dc:	dc000f15 	stw	r16,60(sp)
  1063e0:	2821883a 	mov	r16,r5
  1063e4:	2940038f 	ldh	r5,14(r5)
  1063e8:	dc401015 	stw	r17,64(sp)
  1063ec:	dfc01315 	stw	ra,76(sp)
  1063f0:	dcc01215 	stw	r19,72(sp)
  1063f4:	dc801115 	stw	r18,68(sp)
  1063f8:	2023883a 	mov	r17,r4
  1063fc:	28001c16 	blt	r5,zero,106470 <__smakebuf_r+0xa4>
  106400:	d80d883a 	mov	r6,sp
  106404:	0109f280 	call	109f28 <_fstat_r>
  106408:	10001816 	blt	r2,zero,10646c <__smakebuf_r+0xa0>
  10640c:	d8800117 	ldw	r2,4(sp)
  106410:	00e00014 	movui	r3,32768
  106414:	10bc000c 	andi	r2,r2,61440
  106418:	14c80020 	cmpeqi	r19,r2,8192
  10641c:	10c03726 	beq	r2,r3,1064fc <__smakebuf_r+0x130>
  106420:	80c0030b 	ldhu	r3,12(r16)
  106424:	18c20014 	ori	r3,r3,2048
  106428:	80c0030d 	sth	r3,12(r16)
  10642c:	00c80004 	movi	r3,8192
  106430:	10c0521e 	bne	r2,r3,10657c <__smakebuf_r+0x1b0>
  106434:	8140038f 	ldh	r5,14(r16)
  106438:	8809883a 	mov	r4,r17
  10643c:	010a4400 	call	10a440 <_isatty_r>
  106440:	10004c26 	beq	r2,zero,106574 <__smakebuf_r+0x1a8>
  106444:	8080030b 	ldhu	r2,12(r16)
  106448:	80c010c4 	addi	r3,r16,67
  10644c:	80c00015 	stw	r3,0(r16)
  106450:	10800054 	ori	r2,r2,1
  106454:	8080030d 	sth	r2,12(r16)
  106458:	00800044 	movi	r2,1
  10645c:	80c00415 	stw	r3,16(r16)
  106460:	80800515 	stw	r2,20(r16)
  106464:	04810004 	movi	r18,1024
  106468:	00000706 	br	106488 <__smakebuf_r+0xbc>
  10646c:	8080030b 	ldhu	r2,12(r16)
  106470:	10c0200c 	andi	r3,r2,128
  106474:	18001f1e 	bne	r3,zero,1064f4 <__smakebuf_r+0x128>
  106478:	04810004 	movi	r18,1024
  10647c:	10820014 	ori	r2,r2,2048
  106480:	8080030d 	sth	r2,12(r16)
  106484:	0027883a 	mov	r19,zero
  106488:	900b883a 	mov	r5,r18
  10648c:	8809883a 	mov	r4,r17
  106490:	01065880 	call	106588 <_malloc_r>
  106494:	10002c26 	beq	r2,zero,106548 <__smakebuf_r+0x17c>
  106498:	80c0030b 	ldhu	r3,12(r16)
  10649c:	01000434 	movhi	r4,16
  1064a0:	21166704 	addi	r4,r4,22940
  1064a4:	89000f15 	stw	r4,60(r17)
  1064a8:	18c02014 	ori	r3,r3,128
  1064ac:	80c0030d 	sth	r3,12(r16)
  1064b0:	80800015 	stw	r2,0(r16)
  1064b4:	80800415 	stw	r2,16(r16)
  1064b8:	84800515 	stw	r18,20(r16)
  1064bc:	98001a1e 	bne	r19,zero,106528 <__smakebuf_r+0x15c>
  1064c0:	dfc01317 	ldw	ra,76(sp)
  1064c4:	dcc01217 	ldw	r19,72(sp)
  1064c8:	dc801117 	ldw	r18,68(sp)
  1064cc:	dc401017 	ldw	r17,64(sp)
  1064d0:	dc000f17 	ldw	r16,60(sp)
  1064d4:	dec01404 	addi	sp,sp,80
  1064d8:	f800283a 	ret
  1064dc:	288010c4 	addi	r2,r5,67
  1064e0:	28800015 	stw	r2,0(r5)
  1064e4:	28800415 	stw	r2,16(r5)
  1064e8:	00800044 	movi	r2,1
  1064ec:	28800515 	stw	r2,20(r5)
  1064f0:	f800283a 	ret
  1064f4:	04801004 	movi	r18,64
  1064f8:	003fe006 	br	10647c <__alt_data_end+0xfff0647c>
  1064fc:	81000a17 	ldw	r4,40(r16)
  106500:	00c00474 	movhi	r3,17
  106504:	18e0a104 	addi	r3,r3,-32124
  106508:	20ffc51e 	bne	r4,r3,106420 <__alt_data_end+0xfff06420>
  10650c:	8080030b 	ldhu	r2,12(r16)
  106510:	04810004 	movi	r18,1024
  106514:	84801315 	stw	r18,76(r16)
  106518:	1484b03a 	or	r2,r2,r18
  10651c:	8080030d 	sth	r2,12(r16)
  106520:	0027883a 	mov	r19,zero
  106524:	003fd806 	br	106488 <__alt_data_end+0xfff06488>
  106528:	8140038f 	ldh	r5,14(r16)
  10652c:	8809883a 	mov	r4,r17
  106530:	010a4400 	call	10a440 <_isatty_r>
  106534:	103fe226 	beq	r2,zero,1064c0 <__alt_data_end+0xfff064c0>
  106538:	8080030b 	ldhu	r2,12(r16)
  10653c:	10800054 	ori	r2,r2,1
  106540:	8080030d 	sth	r2,12(r16)
  106544:	003fde06 	br	1064c0 <__alt_data_end+0xfff064c0>
  106548:	8080030b 	ldhu	r2,12(r16)
  10654c:	10c0800c 	andi	r3,r2,512
  106550:	183fdb1e 	bne	r3,zero,1064c0 <__alt_data_end+0xfff064c0>
  106554:	10800094 	ori	r2,r2,2
  106558:	80c010c4 	addi	r3,r16,67
  10655c:	8080030d 	sth	r2,12(r16)
  106560:	00800044 	movi	r2,1
  106564:	80c00015 	stw	r3,0(r16)
  106568:	80c00415 	stw	r3,16(r16)
  10656c:	80800515 	stw	r2,20(r16)
  106570:	003fd306 	br	1064c0 <__alt_data_end+0xfff064c0>
  106574:	04810004 	movi	r18,1024
  106578:	003fc306 	br	106488 <__alt_data_end+0xfff06488>
  10657c:	0027883a 	mov	r19,zero
  106580:	04810004 	movi	r18,1024
  106584:	003fc006 	br	106488 <__alt_data_end+0xfff06488>

00106588 <_malloc_r>:
  106588:	defff504 	addi	sp,sp,-44
  10658c:	dc800315 	stw	r18,12(sp)
  106590:	dfc00a15 	stw	ra,40(sp)
  106594:	df000915 	stw	fp,36(sp)
  106598:	ddc00815 	stw	r23,32(sp)
  10659c:	dd800715 	stw	r22,28(sp)
  1065a0:	dd400615 	stw	r21,24(sp)
  1065a4:	dd000515 	stw	r20,20(sp)
  1065a8:	dcc00415 	stw	r19,16(sp)
  1065ac:	dc400215 	stw	r17,8(sp)
  1065b0:	dc000115 	stw	r16,4(sp)
  1065b4:	288002c4 	addi	r2,r5,11
  1065b8:	00c00584 	movi	r3,22
  1065bc:	2025883a 	mov	r18,r4
  1065c0:	18807f2e 	bgeu	r3,r2,1067c0 <_malloc_r+0x238>
  1065c4:	047ffe04 	movi	r17,-8
  1065c8:	1462703a 	and	r17,r2,r17
  1065cc:	8800a316 	blt	r17,zero,10685c <_malloc_r+0x2d4>
  1065d0:	8940a236 	bltu	r17,r5,10685c <_malloc_r+0x2d4>
  1065d4:	010e5840 	call	10e584 <__malloc_lock>
  1065d8:	00807dc4 	movi	r2,503
  1065dc:	1441e92e 	bgeu	r2,r17,106d84 <_malloc_r+0x7fc>
  1065e0:	8804d27a 	srli	r2,r17,9
  1065e4:	1000a126 	beq	r2,zero,10686c <_malloc_r+0x2e4>
  1065e8:	00c00104 	movi	r3,4
  1065ec:	18811e36 	bltu	r3,r2,106a68 <_malloc_r+0x4e0>
  1065f0:	8804d1ba 	srli	r2,r17,6
  1065f4:	12000e44 	addi	r8,r2,57
  1065f8:	11c00e04 	addi	r7,r2,56
  1065fc:	4209883a 	add	r4,r8,r8
  106600:	04c00474 	movhi	r19,17
  106604:	2109883a 	add	r4,r4,r4
  106608:	9cc40e04 	addi	r19,r19,4152
  10660c:	2109883a 	add	r4,r4,r4
  106610:	9909883a 	add	r4,r19,r4
  106614:	24000117 	ldw	r16,4(r4)
  106618:	213ffe04 	addi	r4,r4,-8
  10661c:	24009726 	beq	r4,r16,10687c <_malloc_r+0x2f4>
  106620:	80800117 	ldw	r2,4(r16)
  106624:	01bfff04 	movi	r6,-4
  106628:	014003c4 	movi	r5,15
  10662c:	1184703a 	and	r2,r2,r6
  106630:	1447c83a 	sub	r3,r2,r17
  106634:	28c00716 	blt	r5,r3,106654 <_malloc_r+0xcc>
  106638:	1800920e 	bge	r3,zero,106884 <_malloc_r+0x2fc>
  10663c:	84000317 	ldw	r16,12(r16)
  106640:	24008e26 	beq	r4,r16,10687c <_malloc_r+0x2f4>
  106644:	80800117 	ldw	r2,4(r16)
  106648:	1184703a 	and	r2,r2,r6
  10664c:	1447c83a 	sub	r3,r2,r17
  106650:	28fff90e 	bge	r5,r3,106638 <__alt_data_end+0xfff06638>
  106654:	3809883a 	mov	r4,r7
  106658:	01800474 	movhi	r6,17
  10665c:	9c000417 	ldw	r16,16(r19)
  106660:	31840e04 	addi	r6,r6,4152
  106664:	32000204 	addi	r8,r6,8
  106668:	82013426 	beq	r16,r8,106b3c <_malloc_r+0x5b4>
  10666c:	80c00117 	ldw	r3,4(r16)
  106670:	00bfff04 	movi	r2,-4
  106674:	188e703a 	and	r7,r3,r2
  106678:	3c45c83a 	sub	r2,r7,r17
  10667c:	00c003c4 	movi	r3,15
  106680:	18811f16 	blt	r3,r2,106b00 <_malloc_r+0x578>
  106684:	32000515 	stw	r8,20(r6)
  106688:	32000415 	stw	r8,16(r6)
  10668c:	10007f0e 	bge	r2,zero,10688c <_malloc_r+0x304>
  106690:	00807fc4 	movi	r2,511
  106694:	11c0fd36 	bltu	r2,r7,106a8c <_malloc_r+0x504>
  106698:	3806d0fa 	srli	r3,r7,3
  10669c:	01c00044 	movi	r7,1
  1066a0:	30800117 	ldw	r2,4(r6)
  1066a4:	19400044 	addi	r5,r3,1
  1066a8:	294b883a 	add	r5,r5,r5
  1066ac:	1807d0ba 	srai	r3,r3,2
  1066b0:	294b883a 	add	r5,r5,r5
  1066b4:	294b883a 	add	r5,r5,r5
  1066b8:	298b883a 	add	r5,r5,r6
  1066bc:	38c6983a 	sll	r3,r7,r3
  1066c0:	29c00017 	ldw	r7,0(r5)
  1066c4:	2a7ffe04 	addi	r9,r5,-8
  1066c8:	1886b03a 	or	r3,r3,r2
  1066cc:	82400315 	stw	r9,12(r16)
  1066d0:	81c00215 	stw	r7,8(r16)
  1066d4:	30c00115 	stw	r3,4(r6)
  1066d8:	2c000015 	stw	r16,0(r5)
  1066dc:	3c000315 	stw	r16,12(r7)
  1066e0:	2005d0ba 	srai	r2,r4,2
  1066e4:	01400044 	movi	r5,1
  1066e8:	288a983a 	sll	r5,r5,r2
  1066ec:	19406f36 	bltu	r3,r5,1068ac <_malloc_r+0x324>
  1066f0:	28c4703a 	and	r2,r5,r3
  1066f4:	10000a1e 	bne	r2,zero,106720 <_malloc_r+0x198>
  1066f8:	00bfff04 	movi	r2,-4
  1066fc:	294b883a 	add	r5,r5,r5
  106700:	2088703a 	and	r4,r4,r2
  106704:	28c4703a 	and	r2,r5,r3
  106708:	21000104 	addi	r4,r4,4
  10670c:	1000041e 	bne	r2,zero,106720 <_malloc_r+0x198>
  106710:	294b883a 	add	r5,r5,r5
  106714:	28c4703a 	and	r2,r5,r3
  106718:	21000104 	addi	r4,r4,4
  10671c:	103ffc26 	beq	r2,zero,106710 <__alt_data_end+0xfff06710>
  106720:	02bfff04 	movi	r10,-4
  106724:	024003c4 	movi	r9,15
  106728:	21800044 	addi	r6,r4,1
  10672c:	318d883a 	add	r6,r6,r6
  106730:	318d883a 	add	r6,r6,r6
  106734:	318d883a 	add	r6,r6,r6
  106738:	998d883a 	add	r6,r19,r6
  10673c:	333ffe04 	addi	r12,r6,-8
  106740:	2017883a 	mov	r11,r4
  106744:	31800104 	addi	r6,r6,4
  106748:	34000017 	ldw	r16,0(r6)
  10674c:	31fffd04 	addi	r7,r6,-12
  106750:	81c0041e 	bne	r16,r7,106764 <_malloc_r+0x1dc>
  106754:	0000fb06 	br	106b44 <_malloc_r+0x5bc>
  106758:	1801030e 	bge	r3,zero,106b68 <_malloc_r+0x5e0>
  10675c:	84000317 	ldw	r16,12(r16)
  106760:	81c0f826 	beq	r16,r7,106b44 <_malloc_r+0x5bc>
  106764:	80800117 	ldw	r2,4(r16)
  106768:	1284703a 	and	r2,r2,r10
  10676c:	1447c83a 	sub	r3,r2,r17
  106770:	48fff90e 	bge	r9,r3,106758 <__alt_data_end+0xfff06758>
  106774:	80800317 	ldw	r2,12(r16)
  106778:	81000217 	ldw	r4,8(r16)
  10677c:	89400054 	ori	r5,r17,1
  106780:	81400115 	stw	r5,4(r16)
  106784:	20800315 	stw	r2,12(r4)
  106788:	11000215 	stw	r4,8(r2)
  10678c:	8463883a 	add	r17,r16,r17
  106790:	9c400515 	stw	r17,20(r19)
  106794:	9c400415 	stw	r17,16(r19)
  106798:	18800054 	ori	r2,r3,1
  10679c:	88800115 	stw	r2,4(r17)
  1067a0:	8a000315 	stw	r8,12(r17)
  1067a4:	8a000215 	stw	r8,8(r17)
  1067a8:	88e3883a 	add	r17,r17,r3
  1067ac:	88c00015 	stw	r3,0(r17)
  1067b0:	9009883a 	mov	r4,r18
  1067b4:	010e5a80 	call	10e5a8 <__malloc_unlock>
  1067b8:	80800204 	addi	r2,r16,8
  1067bc:	00001b06 	br	10682c <_malloc_r+0x2a4>
  1067c0:	04400404 	movi	r17,16
  1067c4:	89402536 	bltu	r17,r5,10685c <_malloc_r+0x2d4>
  1067c8:	010e5840 	call	10e584 <__malloc_lock>
  1067cc:	00800184 	movi	r2,6
  1067d0:	01000084 	movi	r4,2
  1067d4:	04c00474 	movhi	r19,17
  1067d8:	1085883a 	add	r2,r2,r2
  1067dc:	9cc40e04 	addi	r19,r19,4152
  1067e0:	1085883a 	add	r2,r2,r2
  1067e4:	9885883a 	add	r2,r19,r2
  1067e8:	14000117 	ldw	r16,4(r2)
  1067ec:	10fffe04 	addi	r3,r2,-8
  1067f0:	80c0d926 	beq	r16,r3,106b58 <_malloc_r+0x5d0>
  1067f4:	80c00117 	ldw	r3,4(r16)
  1067f8:	81000317 	ldw	r4,12(r16)
  1067fc:	00bfff04 	movi	r2,-4
  106800:	1884703a 	and	r2,r3,r2
  106804:	81400217 	ldw	r5,8(r16)
  106808:	8085883a 	add	r2,r16,r2
  10680c:	10c00117 	ldw	r3,4(r2)
  106810:	29000315 	stw	r4,12(r5)
  106814:	21400215 	stw	r5,8(r4)
  106818:	18c00054 	ori	r3,r3,1
  10681c:	10c00115 	stw	r3,4(r2)
  106820:	9009883a 	mov	r4,r18
  106824:	010e5a80 	call	10e5a8 <__malloc_unlock>
  106828:	80800204 	addi	r2,r16,8
  10682c:	dfc00a17 	ldw	ra,40(sp)
  106830:	df000917 	ldw	fp,36(sp)
  106834:	ddc00817 	ldw	r23,32(sp)
  106838:	dd800717 	ldw	r22,28(sp)
  10683c:	dd400617 	ldw	r21,24(sp)
  106840:	dd000517 	ldw	r20,20(sp)
  106844:	dcc00417 	ldw	r19,16(sp)
  106848:	dc800317 	ldw	r18,12(sp)
  10684c:	dc400217 	ldw	r17,8(sp)
  106850:	dc000117 	ldw	r16,4(sp)
  106854:	dec00b04 	addi	sp,sp,44
  106858:	f800283a 	ret
  10685c:	00800304 	movi	r2,12
  106860:	90800015 	stw	r2,0(r18)
  106864:	0005883a 	mov	r2,zero
  106868:	003ff006 	br	10682c <__alt_data_end+0xfff0682c>
  10686c:	01002004 	movi	r4,128
  106870:	02001004 	movi	r8,64
  106874:	01c00fc4 	movi	r7,63
  106878:	003f6106 	br	106600 <__alt_data_end+0xfff06600>
  10687c:	4009883a 	mov	r4,r8
  106880:	003f7506 	br	106658 <__alt_data_end+0xfff06658>
  106884:	81000317 	ldw	r4,12(r16)
  106888:	003fde06 	br	106804 <__alt_data_end+0xfff06804>
  10688c:	81c5883a 	add	r2,r16,r7
  106890:	11400117 	ldw	r5,4(r2)
  106894:	9009883a 	mov	r4,r18
  106898:	29400054 	ori	r5,r5,1
  10689c:	11400115 	stw	r5,4(r2)
  1068a0:	010e5a80 	call	10e5a8 <__malloc_unlock>
  1068a4:	80800204 	addi	r2,r16,8
  1068a8:	003fe006 	br	10682c <__alt_data_end+0xfff0682c>
  1068ac:	9c000217 	ldw	r16,8(r19)
  1068b0:	00bfff04 	movi	r2,-4
  1068b4:	85800117 	ldw	r22,4(r16)
  1068b8:	b0ac703a 	and	r22,r22,r2
  1068bc:	b4400336 	bltu	r22,r17,1068cc <_malloc_r+0x344>
  1068c0:	b445c83a 	sub	r2,r22,r17
  1068c4:	00c003c4 	movi	r3,15
  1068c8:	18805d16 	blt	r3,r2,106a40 <_malloc_r+0x4b8>
  1068cc:	05c00474 	movhi	r23,17
  1068d0:	00800474 	movhi	r2,17
  1068d4:	1089c904 	addi	r2,r2,10020
  1068d8:	bdc5ae04 	addi	r23,r23,5816
  1068dc:	15400017 	ldw	r21,0(r2)
  1068e0:	b8c00017 	ldw	r3,0(r23)
  1068e4:	00bfffc4 	movi	r2,-1
  1068e8:	858d883a 	add	r6,r16,r22
  1068ec:	8d6b883a 	add	r21,r17,r21
  1068f0:	1880ea26 	beq	r3,r2,106c9c <_malloc_r+0x714>
  1068f4:	ad4403c4 	addi	r21,r21,4111
  1068f8:	00bc0004 	movi	r2,-4096
  1068fc:	a8aa703a 	and	r21,r21,r2
  106900:	a80b883a 	mov	r5,r21
  106904:	9009883a 	mov	r4,r18
  106908:	d9800015 	stw	r6,0(sp)
  10690c:	01081580 	call	108158 <_sbrk_r>
  106910:	1029883a 	mov	r20,r2
  106914:	00bfffc4 	movi	r2,-1
  106918:	d9800017 	ldw	r6,0(sp)
  10691c:	a080e826 	beq	r20,r2,106cc0 <_malloc_r+0x738>
  106920:	a180a636 	bltu	r20,r6,106bbc <_malloc_r+0x634>
  106924:	07000474 	movhi	fp,17
  106928:	e709d504 	addi	fp,fp,10068
  10692c:	e0800017 	ldw	r2,0(fp)
  106930:	a887883a 	add	r3,r21,r2
  106934:	e0c00015 	stw	r3,0(fp)
  106938:	3500e626 	beq	r6,r20,106cd4 <_malloc_r+0x74c>
  10693c:	b9000017 	ldw	r4,0(r23)
  106940:	00bfffc4 	movi	r2,-1
  106944:	2080ee26 	beq	r4,r2,106d00 <_malloc_r+0x778>
  106948:	a185c83a 	sub	r2,r20,r6
  10694c:	10c5883a 	add	r2,r2,r3
  106950:	e0800015 	stw	r2,0(fp)
  106954:	a0c001cc 	andi	r3,r20,7
  106958:	1800bc26 	beq	r3,zero,106c4c <_malloc_r+0x6c4>
  10695c:	a0e9c83a 	sub	r20,r20,r3
  106960:	00840204 	movi	r2,4104
  106964:	a5000204 	addi	r20,r20,8
  106968:	10c7c83a 	sub	r3,r2,r3
  10696c:	a545883a 	add	r2,r20,r21
  106970:	1083ffcc 	andi	r2,r2,4095
  106974:	18abc83a 	sub	r21,r3,r2
  106978:	a80b883a 	mov	r5,r21
  10697c:	9009883a 	mov	r4,r18
  106980:	01081580 	call	108158 <_sbrk_r>
  106984:	00ffffc4 	movi	r3,-1
  106988:	10c0e126 	beq	r2,r3,106d10 <_malloc_r+0x788>
  10698c:	1505c83a 	sub	r2,r2,r20
  106990:	1545883a 	add	r2,r2,r21
  106994:	10800054 	ori	r2,r2,1
  106998:	e0c00017 	ldw	r3,0(fp)
  10699c:	9d000215 	stw	r20,8(r19)
  1069a0:	a0800115 	stw	r2,4(r20)
  1069a4:	a8c7883a 	add	r3,r21,r3
  1069a8:	e0c00015 	stw	r3,0(fp)
  1069ac:	84c00e26 	beq	r16,r19,1069e8 <_malloc_r+0x460>
  1069b0:	018003c4 	movi	r6,15
  1069b4:	3580a72e 	bgeu	r6,r22,106c54 <_malloc_r+0x6cc>
  1069b8:	81400117 	ldw	r5,4(r16)
  1069bc:	013ffe04 	movi	r4,-8
  1069c0:	b0bffd04 	addi	r2,r22,-12
  1069c4:	1104703a 	and	r2,r2,r4
  1069c8:	2900004c 	andi	r4,r5,1
  1069cc:	2088b03a 	or	r4,r4,r2
  1069d0:	81000115 	stw	r4,4(r16)
  1069d4:	01400144 	movi	r5,5
  1069d8:	8089883a 	add	r4,r16,r2
  1069dc:	21400115 	stw	r5,4(r4)
  1069e0:	21400215 	stw	r5,8(r4)
  1069e4:	3080cd36 	bltu	r6,r2,106d1c <_malloc_r+0x794>
  1069e8:	00800474 	movhi	r2,17
  1069ec:	1089c804 	addi	r2,r2,10016
  1069f0:	11000017 	ldw	r4,0(r2)
  1069f4:	20c0012e 	bgeu	r4,r3,1069fc <_malloc_r+0x474>
  1069f8:	10c00015 	stw	r3,0(r2)
  1069fc:	00800474 	movhi	r2,17
  106a00:	1089c704 	addi	r2,r2,10012
  106a04:	11000017 	ldw	r4,0(r2)
  106a08:	9c000217 	ldw	r16,8(r19)
  106a0c:	20c0012e 	bgeu	r4,r3,106a14 <_malloc_r+0x48c>
  106a10:	10c00015 	stw	r3,0(r2)
  106a14:	80c00117 	ldw	r3,4(r16)
  106a18:	00bfff04 	movi	r2,-4
  106a1c:	1886703a 	and	r3,r3,r2
  106a20:	1c45c83a 	sub	r2,r3,r17
  106a24:	1c400236 	bltu	r3,r17,106a30 <_malloc_r+0x4a8>
  106a28:	00c003c4 	movi	r3,15
  106a2c:	18800416 	blt	r3,r2,106a40 <_malloc_r+0x4b8>
  106a30:	9009883a 	mov	r4,r18
  106a34:	010e5a80 	call	10e5a8 <__malloc_unlock>
  106a38:	0005883a 	mov	r2,zero
  106a3c:	003f7b06 	br	10682c <__alt_data_end+0xfff0682c>
  106a40:	88c00054 	ori	r3,r17,1
  106a44:	80c00115 	stw	r3,4(r16)
  106a48:	8463883a 	add	r17,r16,r17
  106a4c:	10800054 	ori	r2,r2,1
  106a50:	9c400215 	stw	r17,8(r19)
  106a54:	88800115 	stw	r2,4(r17)
  106a58:	9009883a 	mov	r4,r18
  106a5c:	010e5a80 	call	10e5a8 <__malloc_unlock>
  106a60:	80800204 	addi	r2,r16,8
  106a64:	003f7106 	br	10682c <__alt_data_end+0xfff0682c>
  106a68:	00c00504 	movi	r3,20
  106a6c:	18804a2e 	bgeu	r3,r2,106b98 <_malloc_r+0x610>
  106a70:	00c01504 	movi	r3,84
  106a74:	18806e36 	bltu	r3,r2,106c30 <_malloc_r+0x6a8>
  106a78:	8804d33a 	srli	r2,r17,12
  106a7c:	12001bc4 	addi	r8,r2,111
  106a80:	11c01b84 	addi	r7,r2,110
  106a84:	4209883a 	add	r4,r8,r8
  106a88:	003edd06 	br	106600 <__alt_data_end+0xfff06600>
  106a8c:	3804d27a 	srli	r2,r7,9
  106a90:	00c00104 	movi	r3,4
  106a94:	1880442e 	bgeu	r3,r2,106ba8 <_malloc_r+0x620>
  106a98:	00c00504 	movi	r3,20
  106a9c:	18808136 	bltu	r3,r2,106ca4 <_malloc_r+0x71c>
  106aa0:	11401704 	addi	r5,r2,92
  106aa4:	10c016c4 	addi	r3,r2,91
  106aa8:	294b883a 	add	r5,r5,r5
  106aac:	294b883a 	add	r5,r5,r5
  106ab0:	294b883a 	add	r5,r5,r5
  106ab4:	994b883a 	add	r5,r19,r5
  106ab8:	28800017 	ldw	r2,0(r5)
  106abc:	01800474 	movhi	r6,17
  106ac0:	297ffe04 	addi	r5,r5,-8
  106ac4:	31840e04 	addi	r6,r6,4152
  106ac8:	28806526 	beq	r5,r2,106c60 <_malloc_r+0x6d8>
  106acc:	01bfff04 	movi	r6,-4
  106ad0:	10c00117 	ldw	r3,4(r2)
  106ad4:	1986703a 	and	r3,r3,r6
  106ad8:	38c0022e 	bgeu	r7,r3,106ae4 <_malloc_r+0x55c>
  106adc:	10800217 	ldw	r2,8(r2)
  106ae0:	28bffb1e 	bne	r5,r2,106ad0 <__alt_data_end+0xfff06ad0>
  106ae4:	11400317 	ldw	r5,12(r2)
  106ae8:	98c00117 	ldw	r3,4(r19)
  106aec:	81400315 	stw	r5,12(r16)
  106af0:	80800215 	stw	r2,8(r16)
  106af4:	2c000215 	stw	r16,8(r5)
  106af8:	14000315 	stw	r16,12(r2)
  106afc:	003ef806 	br	1066e0 <__alt_data_end+0xfff066e0>
  106b00:	88c00054 	ori	r3,r17,1
  106b04:	80c00115 	stw	r3,4(r16)
  106b08:	8463883a 	add	r17,r16,r17
  106b0c:	34400515 	stw	r17,20(r6)
  106b10:	34400415 	stw	r17,16(r6)
  106b14:	10c00054 	ori	r3,r2,1
  106b18:	8a000315 	stw	r8,12(r17)
  106b1c:	8a000215 	stw	r8,8(r17)
  106b20:	88c00115 	stw	r3,4(r17)
  106b24:	88a3883a 	add	r17,r17,r2
  106b28:	88800015 	stw	r2,0(r17)
  106b2c:	9009883a 	mov	r4,r18
  106b30:	010e5a80 	call	10e5a8 <__malloc_unlock>
  106b34:	80800204 	addi	r2,r16,8
  106b38:	003f3c06 	br	10682c <__alt_data_end+0xfff0682c>
  106b3c:	30c00117 	ldw	r3,4(r6)
  106b40:	003ee706 	br	1066e0 <__alt_data_end+0xfff066e0>
  106b44:	5ac00044 	addi	r11,r11,1
  106b48:	588000cc 	andi	r2,r11,3
  106b4c:	31800204 	addi	r6,r6,8
  106b50:	103efd1e 	bne	r2,zero,106748 <__alt_data_end+0xfff06748>
  106b54:	00002406 	br	106be8 <_malloc_r+0x660>
  106b58:	14000317 	ldw	r16,12(r2)
  106b5c:	143f251e 	bne	r2,r16,1067f4 <__alt_data_end+0xfff067f4>
  106b60:	21000084 	addi	r4,r4,2
  106b64:	003ebc06 	br	106658 <__alt_data_end+0xfff06658>
  106b68:	8085883a 	add	r2,r16,r2
  106b6c:	10c00117 	ldw	r3,4(r2)
  106b70:	81000317 	ldw	r4,12(r16)
  106b74:	81400217 	ldw	r5,8(r16)
  106b78:	18c00054 	ori	r3,r3,1
  106b7c:	10c00115 	stw	r3,4(r2)
  106b80:	29000315 	stw	r4,12(r5)
  106b84:	21400215 	stw	r5,8(r4)
  106b88:	9009883a 	mov	r4,r18
  106b8c:	010e5a80 	call	10e5a8 <__malloc_unlock>
  106b90:	80800204 	addi	r2,r16,8
  106b94:	003f2506 	br	10682c <__alt_data_end+0xfff0682c>
  106b98:	12001704 	addi	r8,r2,92
  106b9c:	11c016c4 	addi	r7,r2,91
  106ba0:	4209883a 	add	r4,r8,r8
  106ba4:	003e9606 	br	106600 <__alt_data_end+0xfff06600>
  106ba8:	3804d1ba 	srli	r2,r7,6
  106bac:	11400e44 	addi	r5,r2,57
  106bb0:	10c00e04 	addi	r3,r2,56
  106bb4:	294b883a 	add	r5,r5,r5
  106bb8:	003fbc06 	br	106aac <__alt_data_end+0xfff06aac>
  106bbc:	84ff5926 	beq	r16,r19,106924 <__alt_data_end+0xfff06924>
  106bc0:	00800474 	movhi	r2,17
  106bc4:	10840e04 	addi	r2,r2,4152
  106bc8:	14000217 	ldw	r16,8(r2)
  106bcc:	00bfff04 	movi	r2,-4
  106bd0:	80c00117 	ldw	r3,4(r16)
  106bd4:	1886703a 	and	r3,r3,r2
  106bd8:	003f9106 	br	106a20 <__alt_data_end+0xfff06a20>
  106bdc:	60800217 	ldw	r2,8(r12)
  106be0:	213fffc4 	addi	r4,r4,-1
  106be4:	1300651e 	bne	r2,r12,106d7c <_malloc_r+0x7f4>
  106be8:	208000cc 	andi	r2,r4,3
  106bec:	633ffe04 	addi	r12,r12,-8
  106bf0:	103ffa1e 	bne	r2,zero,106bdc <__alt_data_end+0xfff06bdc>
  106bf4:	98800117 	ldw	r2,4(r19)
  106bf8:	0146303a 	nor	r3,zero,r5
  106bfc:	1884703a 	and	r2,r3,r2
  106c00:	98800115 	stw	r2,4(r19)
  106c04:	294b883a 	add	r5,r5,r5
  106c08:	117f2836 	bltu	r2,r5,1068ac <__alt_data_end+0xfff068ac>
  106c0c:	283f2726 	beq	r5,zero,1068ac <__alt_data_end+0xfff068ac>
  106c10:	2886703a 	and	r3,r5,r2
  106c14:	5809883a 	mov	r4,r11
  106c18:	183ec31e 	bne	r3,zero,106728 <__alt_data_end+0xfff06728>
  106c1c:	294b883a 	add	r5,r5,r5
  106c20:	2886703a 	and	r3,r5,r2
  106c24:	21000104 	addi	r4,r4,4
  106c28:	183ffc26 	beq	r3,zero,106c1c <__alt_data_end+0xfff06c1c>
  106c2c:	003ebe06 	br	106728 <__alt_data_end+0xfff06728>
  106c30:	00c05504 	movi	r3,340
  106c34:	18801236 	bltu	r3,r2,106c80 <_malloc_r+0x6f8>
  106c38:	8804d3fa 	srli	r2,r17,15
  106c3c:	12001e04 	addi	r8,r2,120
  106c40:	11c01dc4 	addi	r7,r2,119
  106c44:	4209883a 	add	r4,r8,r8
  106c48:	003e6d06 	br	106600 <__alt_data_end+0xfff06600>
  106c4c:	00c40004 	movi	r3,4096
  106c50:	003f4606 	br	10696c <__alt_data_end+0xfff0696c>
  106c54:	00800044 	movi	r2,1
  106c58:	a0800115 	stw	r2,4(r20)
  106c5c:	003f7406 	br	106a30 <__alt_data_end+0xfff06a30>
  106c60:	1805d0ba 	srai	r2,r3,2
  106c64:	01c00044 	movi	r7,1
  106c68:	30c00117 	ldw	r3,4(r6)
  106c6c:	388e983a 	sll	r7,r7,r2
  106c70:	2805883a 	mov	r2,r5
  106c74:	38c6b03a 	or	r3,r7,r3
  106c78:	30c00115 	stw	r3,4(r6)
  106c7c:	003f9b06 	br	106aec <__alt_data_end+0xfff06aec>
  106c80:	00c15504 	movi	r3,1364
  106c84:	18801a36 	bltu	r3,r2,106cf0 <_malloc_r+0x768>
  106c88:	8804d4ba 	srli	r2,r17,18
  106c8c:	12001f44 	addi	r8,r2,125
  106c90:	11c01f04 	addi	r7,r2,124
  106c94:	4209883a 	add	r4,r8,r8
  106c98:	003e5906 	br	106600 <__alt_data_end+0xfff06600>
  106c9c:	ad400404 	addi	r21,r21,16
  106ca0:	003f1706 	br	106900 <__alt_data_end+0xfff06900>
  106ca4:	00c01504 	movi	r3,84
  106ca8:	18802336 	bltu	r3,r2,106d38 <_malloc_r+0x7b0>
  106cac:	3804d33a 	srli	r2,r7,12
  106cb0:	11401bc4 	addi	r5,r2,111
  106cb4:	10c01b84 	addi	r3,r2,110
  106cb8:	294b883a 	add	r5,r5,r5
  106cbc:	003f7b06 	br	106aac <__alt_data_end+0xfff06aac>
  106cc0:	9c000217 	ldw	r16,8(r19)
  106cc4:	00bfff04 	movi	r2,-4
  106cc8:	80c00117 	ldw	r3,4(r16)
  106ccc:	1886703a 	and	r3,r3,r2
  106cd0:	003f5306 	br	106a20 <__alt_data_end+0xfff06a20>
  106cd4:	3083ffcc 	andi	r2,r6,4095
  106cd8:	103f181e 	bne	r2,zero,10693c <__alt_data_end+0xfff0693c>
  106cdc:	99000217 	ldw	r4,8(r19)
  106ce0:	b545883a 	add	r2,r22,r21
  106ce4:	10800054 	ori	r2,r2,1
  106ce8:	20800115 	stw	r2,4(r4)
  106cec:	003f3e06 	br	1069e8 <__alt_data_end+0xfff069e8>
  106cf0:	01003f84 	movi	r4,254
  106cf4:	02001fc4 	movi	r8,127
  106cf8:	01c01f84 	movi	r7,126
  106cfc:	003e4006 	br	106600 <__alt_data_end+0xfff06600>
  106d00:	00800474 	movhi	r2,17
  106d04:	1085ae04 	addi	r2,r2,5816
  106d08:	15000015 	stw	r20,0(r2)
  106d0c:	003f1106 	br	106954 <__alt_data_end+0xfff06954>
  106d10:	00800044 	movi	r2,1
  106d14:	002b883a 	mov	r21,zero
  106d18:	003f1f06 	br	106998 <__alt_data_end+0xfff06998>
  106d1c:	81400204 	addi	r5,r16,8
  106d20:	9009883a 	mov	r4,r18
  106d24:	0105e580 	call	105e58 <_free_r>
  106d28:	00800474 	movhi	r2,17
  106d2c:	1089d504 	addi	r2,r2,10068
  106d30:	10c00017 	ldw	r3,0(r2)
  106d34:	003f2c06 	br	1069e8 <__alt_data_end+0xfff069e8>
  106d38:	00c05504 	movi	r3,340
  106d3c:	18800536 	bltu	r3,r2,106d54 <_malloc_r+0x7cc>
  106d40:	3804d3fa 	srli	r2,r7,15
  106d44:	11401e04 	addi	r5,r2,120
  106d48:	10c01dc4 	addi	r3,r2,119
  106d4c:	294b883a 	add	r5,r5,r5
  106d50:	003f5606 	br	106aac <__alt_data_end+0xfff06aac>
  106d54:	00c15504 	movi	r3,1364
  106d58:	18800536 	bltu	r3,r2,106d70 <_malloc_r+0x7e8>
  106d5c:	3804d4ba 	srli	r2,r7,18
  106d60:	11401f44 	addi	r5,r2,125
  106d64:	10c01f04 	addi	r3,r2,124
  106d68:	294b883a 	add	r5,r5,r5
  106d6c:	003f4f06 	br	106aac <__alt_data_end+0xfff06aac>
  106d70:	01403f84 	movi	r5,254
  106d74:	00c01f84 	movi	r3,126
  106d78:	003f4c06 	br	106aac <__alt_data_end+0xfff06aac>
  106d7c:	98800117 	ldw	r2,4(r19)
  106d80:	003fa006 	br	106c04 <__alt_data_end+0xfff06c04>
  106d84:	8808d0fa 	srli	r4,r17,3
  106d88:	20800044 	addi	r2,r4,1
  106d8c:	1085883a 	add	r2,r2,r2
  106d90:	003e9006 	br	1067d4 <__alt_data_end+0xfff067d4>

00106d94 <memchr>:
  106d94:	208000cc 	andi	r2,r4,3
  106d98:	280f883a 	mov	r7,r5
  106d9c:	10003426 	beq	r2,zero,106e70 <memchr+0xdc>
  106da0:	30bfffc4 	addi	r2,r6,-1
  106da4:	30001a26 	beq	r6,zero,106e10 <memchr+0x7c>
  106da8:	20c00003 	ldbu	r3,0(r4)
  106dac:	29803fcc 	andi	r6,r5,255
  106db0:	30c0051e 	bne	r6,r3,106dc8 <memchr+0x34>
  106db4:	00001806 	br	106e18 <memchr+0x84>
  106db8:	10001526 	beq	r2,zero,106e10 <memchr+0x7c>
  106dbc:	20c00003 	ldbu	r3,0(r4)
  106dc0:	10bfffc4 	addi	r2,r2,-1
  106dc4:	30c01426 	beq	r6,r3,106e18 <memchr+0x84>
  106dc8:	21000044 	addi	r4,r4,1
  106dcc:	20c000cc 	andi	r3,r4,3
  106dd0:	183ff91e 	bne	r3,zero,106db8 <__alt_data_end+0xfff06db8>
  106dd4:	020000c4 	movi	r8,3
  106dd8:	40801136 	bltu	r8,r2,106e20 <memchr+0x8c>
  106ddc:	10000c26 	beq	r2,zero,106e10 <memchr+0x7c>
  106de0:	20c00003 	ldbu	r3,0(r4)
  106de4:	29403fcc 	andi	r5,r5,255
  106de8:	28c00b26 	beq	r5,r3,106e18 <memchr+0x84>
  106dec:	20c00044 	addi	r3,r4,1
  106df0:	39803fcc 	andi	r6,r7,255
  106df4:	2089883a 	add	r4,r4,r2
  106df8:	00000306 	br	106e08 <memchr+0x74>
  106dfc:	18c00044 	addi	r3,r3,1
  106e00:	197fffc3 	ldbu	r5,-1(r3)
  106e04:	31400526 	beq	r6,r5,106e1c <memchr+0x88>
  106e08:	1805883a 	mov	r2,r3
  106e0c:	20fffb1e 	bne	r4,r3,106dfc <__alt_data_end+0xfff06dfc>
  106e10:	0005883a 	mov	r2,zero
  106e14:	f800283a 	ret
  106e18:	2005883a 	mov	r2,r4
  106e1c:	f800283a 	ret
  106e20:	28c03fcc 	andi	r3,r5,255
  106e24:	1812923a 	slli	r9,r3,8
  106e28:	02ffbff4 	movhi	r11,65279
  106e2c:	02a02074 	movhi	r10,32897
  106e30:	48d2b03a 	or	r9,r9,r3
  106e34:	4806943a 	slli	r3,r9,16
  106e38:	5affbfc4 	addi	r11,r11,-257
  106e3c:	52a02004 	addi	r10,r10,-32640
  106e40:	48d2b03a 	or	r9,r9,r3
  106e44:	20c00017 	ldw	r3,0(r4)
  106e48:	48c6f03a 	xor	r3,r9,r3
  106e4c:	1acd883a 	add	r6,r3,r11
  106e50:	00c6303a 	nor	r3,zero,r3
  106e54:	30c6703a 	and	r3,r6,r3
  106e58:	1a86703a 	and	r3,r3,r10
  106e5c:	183fe01e 	bne	r3,zero,106de0 <__alt_data_end+0xfff06de0>
  106e60:	10bfff04 	addi	r2,r2,-4
  106e64:	21000104 	addi	r4,r4,4
  106e68:	40bff636 	bltu	r8,r2,106e44 <__alt_data_end+0xfff06e44>
  106e6c:	003fdb06 	br	106ddc <__alt_data_end+0xfff06ddc>
  106e70:	3005883a 	mov	r2,r6
  106e74:	003fd706 	br	106dd4 <__alt_data_end+0xfff06dd4>

00106e78 <memcpy>:
  106e78:	defffd04 	addi	sp,sp,-12
  106e7c:	dfc00215 	stw	ra,8(sp)
  106e80:	dc400115 	stw	r17,4(sp)
  106e84:	dc000015 	stw	r16,0(sp)
  106e88:	00c003c4 	movi	r3,15
  106e8c:	2005883a 	mov	r2,r4
  106e90:	1980452e 	bgeu	r3,r6,106fa8 <memcpy+0x130>
  106e94:	2906b03a 	or	r3,r5,r4
  106e98:	18c000cc 	andi	r3,r3,3
  106e9c:	1800441e 	bne	r3,zero,106fb0 <memcpy+0x138>
  106ea0:	347ffc04 	addi	r17,r6,-16
  106ea4:	8822d13a 	srli	r17,r17,4
  106ea8:	28c00104 	addi	r3,r5,4
  106eac:	23400104 	addi	r13,r4,4
  106eb0:	8820913a 	slli	r16,r17,4
  106eb4:	2b000204 	addi	r12,r5,8
  106eb8:	22c00204 	addi	r11,r4,8
  106ebc:	84000504 	addi	r16,r16,20
  106ec0:	2a800304 	addi	r10,r5,12
  106ec4:	22400304 	addi	r9,r4,12
  106ec8:	2c21883a 	add	r16,r5,r16
  106ecc:	2811883a 	mov	r8,r5
  106ed0:	200f883a 	mov	r7,r4
  106ed4:	41000017 	ldw	r4,0(r8)
  106ed8:	1fc00017 	ldw	ra,0(r3)
  106edc:	63c00017 	ldw	r15,0(r12)
  106ee0:	39000015 	stw	r4,0(r7)
  106ee4:	53800017 	ldw	r14,0(r10)
  106ee8:	6fc00015 	stw	ra,0(r13)
  106eec:	5bc00015 	stw	r15,0(r11)
  106ef0:	4b800015 	stw	r14,0(r9)
  106ef4:	18c00404 	addi	r3,r3,16
  106ef8:	39c00404 	addi	r7,r7,16
  106efc:	42000404 	addi	r8,r8,16
  106f00:	6b400404 	addi	r13,r13,16
  106f04:	63000404 	addi	r12,r12,16
  106f08:	5ac00404 	addi	r11,r11,16
  106f0c:	52800404 	addi	r10,r10,16
  106f10:	4a400404 	addi	r9,r9,16
  106f14:	1c3fef1e 	bne	r3,r16,106ed4 <__alt_data_end+0xfff06ed4>
  106f18:	89c00044 	addi	r7,r17,1
  106f1c:	380e913a 	slli	r7,r7,4
  106f20:	310003cc 	andi	r4,r6,15
  106f24:	02c000c4 	movi	r11,3
  106f28:	11c7883a 	add	r3,r2,r7
  106f2c:	29cb883a 	add	r5,r5,r7
  106f30:	5900212e 	bgeu	r11,r4,106fb8 <memcpy+0x140>
  106f34:	1813883a 	mov	r9,r3
  106f38:	2811883a 	mov	r8,r5
  106f3c:	200f883a 	mov	r7,r4
  106f40:	42800017 	ldw	r10,0(r8)
  106f44:	4a400104 	addi	r9,r9,4
  106f48:	39ffff04 	addi	r7,r7,-4
  106f4c:	4abfff15 	stw	r10,-4(r9)
  106f50:	42000104 	addi	r8,r8,4
  106f54:	59fffa36 	bltu	r11,r7,106f40 <__alt_data_end+0xfff06f40>
  106f58:	213fff04 	addi	r4,r4,-4
  106f5c:	2008d0ba 	srli	r4,r4,2
  106f60:	318000cc 	andi	r6,r6,3
  106f64:	21000044 	addi	r4,r4,1
  106f68:	2109883a 	add	r4,r4,r4
  106f6c:	2109883a 	add	r4,r4,r4
  106f70:	1907883a 	add	r3,r3,r4
  106f74:	290b883a 	add	r5,r5,r4
  106f78:	30000626 	beq	r6,zero,106f94 <memcpy+0x11c>
  106f7c:	198d883a 	add	r6,r3,r6
  106f80:	29c00003 	ldbu	r7,0(r5)
  106f84:	18c00044 	addi	r3,r3,1
  106f88:	29400044 	addi	r5,r5,1
  106f8c:	19ffffc5 	stb	r7,-1(r3)
  106f90:	19bffb1e 	bne	r3,r6,106f80 <__alt_data_end+0xfff06f80>
  106f94:	dfc00217 	ldw	ra,8(sp)
  106f98:	dc400117 	ldw	r17,4(sp)
  106f9c:	dc000017 	ldw	r16,0(sp)
  106fa0:	dec00304 	addi	sp,sp,12
  106fa4:	f800283a 	ret
  106fa8:	2007883a 	mov	r3,r4
  106fac:	003ff206 	br	106f78 <__alt_data_end+0xfff06f78>
  106fb0:	2007883a 	mov	r3,r4
  106fb4:	003ff106 	br	106f7c <__alt_data_end+0xfff06f7c>
  106fb8:	200d883a 	mov	r6,r4
  106fbc:	003fee06 	br	106f78 <__alt_data_end+0xfff06f78>

00106fc0 <memset>:
  106fc0:	20c000cc 	andi	r3,r4,3
  106fc4:	2005883a 	mov	r2,r4
  106fc8:	18004426 	beq	r3,zero,1070dc <memset+0x11c>
  106fcc:	31ffffc4 	addi	r7,r6,-1
  106fd0:	30004026 	beq	r6,zero,1070d4 <memset+0x114>
  106fd4:	2813883a 	mov	r9,r5
  106fd8:	200d883a 	mov	r6,r4
  106fdc:	2007883a 	mov	r3,r4
  106fe0:	00000406 	br	106ff4 <memset+0x34>
  106fe4:	3a3fffc4 	addi	r8,r7,-1
  106fe8:	31800044 	addi	r6,r6,1
  106fec:	38003926 	beq	r7,zero,1070d4 <memset+0x114>
  106ff0:	400f883a 	mov	r7,r8
  106ff4:	18c00044 	addi	r3,r3,1
  106ff8:	32400005 	stb	r9,0(r6)
  106ffc:	1a0000cc 	andi	r8,r3,3
  107000:	403ff81e 	bne	r8,zero,106fe4 <__alt_data_end+0xfff06fe4>
  107004:	010000c4 	movi	r4,3
  107008:	21c02d2e 	bgeu	r4,r7,1070c0 <memset+0x100>
  10700c:	29003fcc 	andi	r4,r5,255
  107010:	200c923a 	slli	r6,r4,8
  107014:	3108b03a 	or	r4,r6,r4
  107018:	200c943a 	slli	r6,r4,16
  10701c:	218cb03a 	or	r6,r4,r6
  107020:	010003c4 	movi	r4,15
  107024:	21c0182e 	bgeu	r4,r7,107088 <memset+0xc8>
  107028:	3b3ffc04 	addi	r12,r7,-16
  10702c:	6018d13a 	srli	r12,r12,4
  107030:	1a000104 	addi	r8,r3,4
  107034:	1ac00204 	addi	r11,r3,8
  107038:	6008913a 	slli	r4,r12,4
  10703c:	1a800304 	addi	r10,r3,12
  107040:	1813883a 	mov	r9,r3
  107044:	21000504 	addi	r4,r4,20
  107048:	1909883a 	add	r4,r3,r4
  10704c:	49800015 	stw	r6,0(r9)
  107050:	41800015 	stw	r6,0(r8)
  107054:	59800015 	stw	r6,0(r11)
  107058:	51800015 	stw	r6,0(r10)
  10705c:	42000404 	addi	r8,r8,16
  107060:	4a400404 	addi	r9,r9,16
  107064:	5ac00404 	addi	r11,r11,16
  107068:	52800404 	addi	r10,r10,16
  10706c:	413ff71e 	bne	r8,r4,10704c <__alt_data_end+0xfff0704c>
  107070:	63000044 	addi	r12,r12,1
  107074:	6018913a 	slli	r12,r12,4
  107078:	39c003cc 	andi	r7,r7,15
  10707c:	010000c4 	movi	r4,3
  107080:	1b07883a 	add	r3,r3,r12
  107084:	21c00e2e 	bgeu	r4,r7,1070c0 <memset+0x100>
  107088:	1813883a 	mov	r9,r3
  10708c:	3811883a 	mov	r8,r7
  107090:	010000c4 	movi	r4,3
  107094:	49800015 	stw	r6,0(r9)
  107098:	423fff04 	addi	r8,r8,-4
  10709c:	4a400104 	addi	r9,r9,4
  1070a0:	223ffc36 	bltu	r4,r8,107094 <__alt_data_end+0xfff07094>
  1070a4:	393fff04 	addi	r4,r7,-4
  1070a8:	2008d0ba 	srli	r4,r4,2
  1070ac:	39c000cc 	andi	r7,r7,3
  1070b0:	21000044 	addi	r4,r4,1
  1070b4:	2109883a 	add	r4,r4,r4
  1070b8:	2109883a 	add	r4,r4,r4
  1070bc:	1907883a 	add	r3,r3,r4
  1070c0:	38000526 	beq	r7,zero,1070d8 <memset+0x118>
  1070c4:	19cf883a 	add	r7,r3,r7
  1070c8:	19400005 	stb	r5,0(r3)
  1070cc:	18c00044 	addi	r3,r3,1
  1070d0:	38fffd1e 	bne	r7,r3,1070c8 <__alt_data_end+0xfff070c8>
  1070d4:	f800283a 	ret
  1070d8:	f800283a 	ret
  1070dc:	2007883a 	mov	r3,r4
  1070e0:	300f883a 	mov	r7,r6
  1070e4:	003fc706 	br	107004 <__alt_data_end+0xfff07004>

001070e8 <_Balloc>:
  1070e8:	20801317 	ldw	r2,76(r4)
  1070ec:	defffc04 	addi	sp,sp,-16
  1070f0:	dc400115 	stw	r17,4(sp)
  1070f4:	dc000015 	stw	r16,0(sp)
  1070f8:	dfc00315 	stw	ra,12(sp)
  1070fc:	dc800215 	stw	r18,8(sp)
  107100:	2023883a 	mov	r17,r4
  107104:	2821883a 	mov	r16,r5
  107108:	10000f26 	beq	r2,zero,107148 <_Balloc+0x60>
  10710c:	8407883a 	add	r3,r16,r16
  107110:	18c7883a 	add	r3,r3,r3
  107114:	10c7883a 	add	r3,r2,r3
  107118:	18800017 	ldw	r2,0(r3)
  10711c:	10001126 	beq	r2,zero,107164 <_Balloc+0x7c>
  107120:	11000017 	ldw	r4,0(r2)
  107124:	19000015 	stw	r4,0(r3)
  107128:	10000415 	stw	zero,16(r2)
  10712c:	10000315 	stw	zero,12(r2)
  107130:	dfc00317 	ldw	ra,12(sp)
  107134:	dc800217 	ldw	r18,8(sp)
  107138:	dc400117 	ldw	r17,4(sp)
  10713c:	dc000017 	ldw	r16,0(sp)
  107140:	dec00404 	addi	sp,sp,16
  107144:	f800283a 	ret
  107148:	01800844 	movi	r6,33
  10714c:	01400104 	movi	r5,4
  107150:	0109b580 	call	109b58 <_calloc_r>
  107154:	88801315 	stw	r2,76(r17)
  107158:	103fec1e 	bne	r2,zero,10710c <__alt_data_end+0xfff0710c>
  10715c:	0005883a 	mov	r2,zero
  107160:	003ff306 	br	107130 <__alt_data_end+0xfff07130>
  107164:	01400044 	movi	r5,1
  107168:	2c24983a 	sll	r18,r5,r16
  10716c:	8809883a 	mov	r4,r17
  107170:	91800144 	addi	r6,r18,5
  107174:	318d883a 	add	r6,r6,r6
  107178:	318d883a 	add	r6,r6,r6
  10717c:	0109b580 	call	109b58 <_calloc_r>
  107180:	103ff626 	beq	r2,zero,10715c <__alt_data_end+0xfff0715c>
  107184:	14000115 	stw	r16,4(r2)
  107188:	14800215 	stw	r18,8(r2)
  10718c:	003fe606 	br	107128 <__alt_data_end+0xfff07128>

00107190 <_Bfree>:
  107190:	28000826 	beq	r5,zero,1071b4 <_Bfree+0x24>
  107194:	28c00117 	ldw	r3,4(r5)
  107198:	20801317 	ldw	r2,76(r4)
  10719c:	18c7883a 	add	r3,r3,r3
  1071a0:	18c7883a 	add	r3,r3,r3
  1071a4:	10c5883a 	add	r2,r2,r3
  1071a8:	10c00017 	ldw	r3,0(r2)
  1071ac:	28c00015 	stw	r3,0(r5)
  1071b0:	11400015 	stw	r5,0(r2)
  1071b4:	f800283a 	ret

001071b8 <__multadd>:
  1071b8:	defffa04 	addi	sp,sp,-24
  1071bc:	dc800315 	stw	r18,12(sp)
  1071c0:	dc400215 	stw	r17,8(sp)
  1071c4:	dc000115 	stw	r16,4(sp)
  1071c8:	2823883a 	mov	r17,r5
  1071cc:	2c000417 	ldw	r16,16(r5)
  1071d0:	dfc00515 	stw	ra,20(sp)
  1071d4:	dcc00415 	stw	r19,16(sp)
  1071d8:	2025883a 	mov	r18,r4
  1071dc:	29400504 	addi	r5,r5,20
  1071e0:	0011883a 	mov	r8,zero
  1071e4:	28c00017 	ldw	r3,0(r5)
  1071e8:	29400104 	addi	r5,r5,4
  1071ec:	42000044 	addi	r8,r8,1
  1071f0:	18bfffcc 	andi	r2,r3,65535
  1071f4:	1185383a 	mul	r2,r2,r6
  1071f8:	1806d43a 	srli	r3,r3,16
  1071fc:	11cf883a 	add	r7,r2,r7
  107200:	3808d43a 	srli	r4,r7,16
  107204:	1987383a 	mul	r3,r3,r6
  107208:	38bfffcc 	andi	r2,r7,65535
  10720c:	1907883a 	add	r3,r3,r4
  107210:	1808943a 	slli	r4,r3,16
  107214:	180ed43a 	srli	r7,r3,16
  107218:	2085883a 	add	r2,r4,r2
  10721c:	28bfff15 	stw	r2,-4(r5)
  107220:	443ff016 	blt	r8,r16,1071e4 <__alt_data_end+0xfff071e4>
  107224:	38000926 	beq	r7,zero,10724c <__multadd+0x94>
  107228:	88800217 	ldw	r2,8(r17)
  10722c:	80800f0e 	bge	r16,r2,10726c <__multadd+0xb4>
  107230:	80800144 	addi	r2,r16,5
  107234:	1085883a 	add	r2,r2,r2
  107238:	1085883a 	add	r2,r2,r2
  10723c:	8885883a 	add	r2,r17,r2
  107240:	11c00015 	stw	r7,0(r2)
  107244:	84000044 	addi	r16,r16,1
  107248:	8c000415 	stw	r16,16(r17)
  10724c:	8805883a 	mov	r2,r17
  107250:	dfc00517 	ldw	ra,20(sp)
  107254:	dcc00417 	ldw	r19,16(sp)
  107258:	dc800317 	ldw	r18,12(sp)
  10725c:	dc400217 	ldw	r17,8(sp)
  107260:	dc000117 	ldw	r16,4(sp)
  107264:	dec00604 	addi	sp,sp,24
  107268:	f800283a 	ret
  10726c:	89400117 	ldw	r5,4(r17)
  107270:	9009883a 	mov	r4,r18
  107274:	d9c00015 	stw	r7,0(sp)
  107278:	29400044 	addi	r5,r5,1
  10727c:	01070e80 	call	1070e8 <_Balloc>
  107280:	89800417 	ldw	r6,16(r17)
  107284:	89400304 	addi	r5,r17,12
  107288:	11000304 	addi	r4,r2,12
  10728c:	31800084 	addi	r6,r6,2
  107290:	318d883a 	add	r6,r6,r6
  107294:	318d883a 	add	r6,r6,r6
  107298:	1027883a 	mov	r19,r2
  10729c:	0106e780 	call	106e78 <memcpy>
  1072a0:	d9c00017 	ldw	r7,0(sp)
  1072a4:	88000a26 	beq	r17,zero,1072d0 <__multadd+0x118>
  1072a8:	88c00117 	ldw	r3,4(r17)
  1072ac:	90801317 	ldw	r2,76(r18)
  1072b0:	18c7883a 	add	r3,r3,r3
  1072b4:	18c7883a 	add	r3,r3,r3
  1072b8:	10c5883a 	add	r2,r2,r3
  1072bc:	10c00017 	ldw	r3,0(r2)
  1072c0:	88c00015 	stw	r3,0(r17)
  1072c4:	14400015 	stw	r17,0(r2)
  1072c8:	9823883a 	mov	r17,r19
  1072cc:	003fd806 	br	107230 <__alt_data_end+0xfff07230>
  1072d0:	9823883a 	mov	r17,r19
  1072d4:	003fd606 	br	107230 <__alt_data_end+0xfff07230>

001072d8 <__s2b>:
  1072d8:	defff904 	addi	sp,sp,-28
  1072dc:	dc400115 	stw	r17,4(sp)
  1072e0:	dc000015 	stw	r16,0(sp)
  1072e4:	2023883a 	mov	r17,r4
  1072e8:	2821883a 	mov	r16,r5
  1072ec:	39000204 	addi	r4,r7,8
  1072f0:	01400244 	movi	r5,9
  1072f4:	dcc00315 	stw	r19,12(sp)
  1072f8:	dc800215 	stw	r18,8(sp)
  1072fc:	dfc00615 	stw	ra,24(sp)
  107300:	dd400515 	stw	r21,20(sp)
  107304:	dd000415 	stw	r20,16(sp)
  107308:	3825883a 	mov	r18,r7
  10730c:	3027883a 	mov	r19,r6
  107310:	0100dec0 	call	100dec <__divsi3>
  107314:	00c00044 	movi	r3,1
  107318:	000b883a 	mov	r5,zero
  10731c:	1880030e 	bge	r3,r2,10732c <__s2b+0x54>
  107320:	18c7883a 	add	r3,r3,r3
  107324:	29400044 	addi	r5,r5,1
  107328:	18bffd16 	blt	r3,r2,107320 <__alt_data_end+0xfff07320>
  10732c:	8809883a 	mov	r4,r17
  107330:	01070e80 	call	1070e8 <_Balloc>
  107334:	d8c00717 	ldw	r3,28(sp)
  107338:	10c00515 	stw	r3,20(r2)
  10733c:	00c00044 	movi	r3,1
  107340:	10c00415 	stw	r3,16(r2)
  107344:	00c00244 	movi	r3,9
  107348:	1cc0210e 	bge	r3,r19,1073d0 <__s2b+0xf8>
  10734c:	80eb883a 	add	r21,r16,r3
  107350:	a829883a 	mov	r20,r21
  107354:	84e1883a 	add	r16,r16,r19
  107358:	a1c00007 	ldb	r7,0(r20)
  10735c:	01800284 	movi	r6,10
  107360:	a5000044 	addi	r20,r20,1
  107364:	100b883a 	mov	r5,r2
  107368:	39fff404 	addi	r7,r7,-48
  10736c:	8809883a 	mov	r4,r17
  107370:	01071b80 	call	1071b8 <__multadd>
  107374:	a43ff81e 	bne	r20,r16,107358 <__alt_data_end+0xfff07358>
  107378:	ace1883a 	add	r16,r21,r19
  10737c:	843ffe04 	addi	r16,r16,-8
  107380:	9c800a0e 	bge	r19,r18,1073ac <__s2b+0xd4>
  107384:	94e5c83a 	sub	r18,r18,r19
  107388:	84a5883a 	add	r18,r16,r18
  10738c:	81c00007 	ldb	r7,0(r16)
  107390:	01800284 	movi	r6,10
  107394:	84000044 	addi	r16,r16,1
  107398:	100b883a 	mov	r5,r2
  10739c:	39fff404 	addi	r7,r7,-48
  1073a0:	8809883a 	mov	r4,r17
  1073a4:	01071b80 	call	1071b8 <__multadd>
  1073a8:	84bff81e 	bne	r16,r18,10738c <__alt_data_end+0xfff0738c>
  1073ac:	dfc00617 	ldw	ra,24(sp)
  1073b0:	dd400517 	ldw	r21,20(sp)
  1073b4:	dd000417 	ldw	r20,16(sp)
  1073b8:	dcc00317 	ldw	r19,12(sp)
  1073bc:	dc800217 	ldw	r18,8(sp)
  1073c0:	dc400117 	ldw	r17,4(sp)
  1073c4:	dc000017 	ldw	r16,0(sp)
  1073c8:	dec00704 	addi	sp,sp,28
  1073cc:	f800283a 	ret
  1073d0:	84000284 	addi	r16,r16,10
  1073d4:	1827883a 	mov	r19,r3
  1073d8:	003fe906 	br	107380 <__alt_data_end+0xfff07380>

001073dc <__hi0bits>:
  1073dc:	20bfffec 	andhi	r2,r4,65535
  1073e0:	1000141e 	bne	r2,zero,107434 <__hi0bits+0x58>
  1073e4:	2008943a 	slli	r4,r4,16
  1073e8:	00800404 	movi	r2,16
  1073ec:	20ffc02c 	andhi	r3,r4,65280
  1073f0:	1800021e 	bne	r3,zero,1073fc <__hi0bits+0x20>
  1073f4:	2008923a 	slli	r4,r4,8
  1073f8:	10800204 	addi	r2,r2,8
  1073fc:	20fc002c 	andhi	r3,r4,61440
  107400:	1800021e 	bne	r3,zero,10740c <__hi0bits+0x30>
  107404:	2008913a 	slli	r4,r4,4
  107408:	10800104 	addi	r2,r2,4
  10740c:	20f0002c 	andhi	r3,r4,49152
  107410:	1800031e 	bne	r3,zero,107420 <__hi0bits+0x44>
  107414:	2109883a 	add	r4,r4,r4
  107418:	10800084 	addi	r2,r2,2
  10741c:	2109883a 	add	r4,r4,r4
  107420:	20000316 	blt	r4,zero,107430 <__hi0bits+0x54>
  107424:	2110002c 	andhi	r4,r4,16384
  107428:	2000041e 	bne	r4,zero,10743c <__hi0bits+0x60>
  10742c:	00800804 	movi	r2,32
  107430:	f800283a 	ret
  107434:	0005883a 	mov	r2,zero
  107438:	003fec06 	br	1073ec <__alt_data_end+0xfff073ec>
  10743c:	10800044 	addi	r2,r2,1
  107440:	f800283a 	ret

00107444 <__lo0bits>:
  107444:	20c00017 	ldw	r3,0(r4)
  107448:	188001cc 	andi	r2,r3,7
  10744c:	10000826 	beq	r2,zero,107470 <__lo0bits+0x2c>
  107450:	1880004c 	andi	r2,r3,1
  107454:	1000211e 	bne	r2,zero,1074dc <__lo0bits+0x98>
  107458:	1880008c 	andi	r2,r3,2
  10745c:	1000211e 	bne	r2,zero,1074e4 <__lo0bits+0xa0>
  107460:	1806d0ba 	srli	r3,r3,2
  107464:	00800084 	movi	r2,2
  107468:	20c00015 	stw	r3,0(r4)
  10746c:	f800283a 	ret
  107470:	18bfffcc 	andi	r2,r3,65535
  107474:	10001326 	beq	r2,zero,1074c4 <__lo0bits+0x80>
  107478:	0005883a 	mov	r2,zero
  10747c:	19403fcc 	andi	r5,r3,255
  107480:	2800021e 	bne	r5,zero,10748c <__lo0bits+0x48>
  107484:	1806d23a 	srli	r3,r3,8
  107488:	10800204 	addi	r2,r2,8
  10748c:	194003cc 	andi	r5,r3,15
  107490:	2800021e 	bne	r5,zero,10749c <__lo0bits+0x58>
  107494:	1806d13a 	srli	r3,r3,4
  107498:	10800104 	addi	r2,r2,4
  10749c:	194000cc 	andi	r5,r3,3
  1074a0:	2800021e 	bne	r5,zero,1074ac <__lo0bits+0x68>
  1074a4:	1806d0ba 	srli	r3,r3,2
  1074a8:	10800084 	addi	r2,r2,2
  1074ac:	1940004c 	andi	r5,r3,1
  1074b0:	2800081e 	bne	r5,zero,1074d4 <__lo0bits+0x90>
  1074b4:	1806d07a 	srli	r3,r3,1
  1074b8:	1800051e 	bne	r3,zero,1074d0 <__lo0bits+0x8c>
  1074bc:	00800804 	movi	r2,32
  1074c0:	f800283a 	ret
  1074c4:	1806d43a 	srli	r3,r3,16
  1074c8:	00800404 	movi	r2,16
  1074cc:	003feb06 	br	10747c <__alt_data_end+0xfff0747c>
  1074d0:	10800044 	addi	r2,r2,1
  1074d4:	20c00015 	stw	r3,0(r4)
  1074d8:	f800283a 	ret
  1074dc:	0005883a 	mov	r2,zero
  1074e0:	f800283a 	ret
  1074e4:	1806d07a 	srli	r3,r3,1
  1074e8:	00800044 	movi	r2,1
  1074ec:	20c00015 	stw	r3,0(r4)
  1074f0:	f800283a 	ret

001074f4 <__i2b>:
  1074f4:	defffd04 	addi	sp,sp,-12
  1074f8:	dc000015 	stw	r16,0(sp)
  1074fc:	04000044 	movi	r16,1
  107500:	dc400115 	stw	r17,4(sp)
  107504:	2823883a 	mov	r17,r5
  107508:	800b883a 	mov	r5,r16
  10750c:	dfc00215 	stw	ra,8(sp)
  107510:	01070e80 	call	1070e8 <_Balloc>
  107514:	14400515 	stw	r17,20(r2)
  107518:	14000415 	stw	r16,16(r2)
  10751c:	dfc00217 	ldw	ra,8(sp)
  107520:	dc400117 	ldw	r17,4(sp)
  107524:	dc000017 	ldw	r16,0(sp)
  107528:	dec00304 	addi	sp,sp,12
  10752c:	f800283a 	ret

00107530 <__multiply>:
  107530:	defffa04 	addi	sp,sp,-24
  107534:	dcc00315 	stw	r19,12(sp)
  107538:	dc800215 	stw	r18,8(sp)
  10753c:	34c00417 	ldw	r19,16(r6)
  107540:	2c800417 	ldw	r18,16(r5)
  107544:	dd000415 	stw	r20,16(sp)
  107548:	dc400115 	stw	r17,4(sp)
  10754c:	dfc00515 	stw	ra,20(sp)
  107550:	dc000015 	stw	r16,0(sp)
  107554:	2829883a 	mov	r20,r5
  107558:	3023883a 	mov	r17,r6
  10755c:	94c0050e 	bge	r18,r19,107574 <__multiply+0x44>
  107560:	9007883a 	mov	r3,r18
  107564:	3029883a 	mov	r20,r6
  107568:	9825883a 	mov	r18,r19
  10756c:	2823883a 	mov	r17,r5
  107570:	1827883a 	mov	r19,r3
  107574:	a0800217 	ldw	r2,8(r20)
  107578:	94e1883a 	add	r16,r18,r19
  10757c:	a1400117 	ldw	r5,4(r20)
  107580:	1400010e 	bge	r2,r16,107588 <__multiply+0x58>
  107584:	29400044 	addi	r5,r5,1
  107588:	01070e80 	call	1070e8 <_Balloc>
  10758c:	8415883a 	add	r10,r16,r16
  107590:	12c00504 	addi	r11,r2,20
  107594:	5295883a 	add	r10,r10,r10
  107598:	5a95883a 	add	r10,r11,r10
  10759c:	5807883a 	mov	r3,r11
  1075a0:	5a80032e 	bgeu	r11,r10,1075b0 <__multiply+0x80>
  1075a4:	18000015 	stw	zero,0(r3)
  1075a8:	18c00104 	addi	r3,r3,4
  1075ac:	1abffd36 	bltu	r3,r10,1075a4 <__alt_data_end+0xfff075a4>
  1075b0:	9ce7883a 	add	r19,r19,r19
  1075b4:	94a5883a 	add	r18,r18,r18
  1075b8:	89800504 	addi	r6,r17,20
  1075bc:	9ce7883a 	add	r19,r19,r19
  1075c0:	a3400504 	addi	r13,r20,20
  1075c4:	94a5883a 	add	r18,r18,r18
  1075c8:	34d9883a 	add	r12,r6,r19
  1075cc:	6c93883a 	add	r9,r13,r18
  1075d0:	3300422e 	bgeu	r6,r12,1076dc <__multiply+0x1ac>
  1075d4:	37c00017 	ldw	ra,0(r6)
  1075d8:	fbffffcc 	andi	r15,ra,65535
  1075dc:	78001b26 	beq	r15,zero,10764c <__multiply+0x11c>
  1075e0:	5811883a 	mov	r8,r11
  1075e4:	681d883a 	mov	r14,r13
  1075e8:	000f883a 	mov	r7,zero
  1075ec:	71000017 	ldw	r4,0(r14)
  1075f0:	40c00017 	ldw	r3,0(r8)
  1075f4:	73800104 	addi	r14,r14,4
  1075f8:	217fffcc 	andi	r5,r4,65535
  1075fc:	2bcb383a 	mul	r5,r5,r15
  107600:	2008d43a 	srli	r4,r4,16
  107604:	1c7fffcc 	andi	r17,r3,65535
  107608:	2c4b883a 	add	r5,r5,r17
  10760c:	29cb883a 	add	r5,r5,r7
  107610:	23c9383a 	mul	r4,r4,r15
  107614:	1806d43a 	srli	r3,r3,16
  107618:	280ed43a 	srli	r7,r5,16
  10761c:	297fffcc 	andi	r5,r5,65535
  107620:	20c7883a 	add	r3,r4,r3
  107624:	19c7883a 	add	r3,r3,r7
  107628:	1808943a 	slli	r4,r3,16
  10762c:	4023883a 	mov	r17,r8
  107630:	180ed43a 	srli	r7,r3,16
  107634:	214ab03a 	or	r5,r4,r5
  107638:	41400015 	stw	r5,0(r8)
  10763c:	42000104 	addi	r8,r8,4
  107640:	727fea36 	bltu	r14,r9,1075ec <__alt_data_end+0xfff075ec>
  107644:	89c00115 	stw	r7,4(r17)
  107648:	37c00017 	ldw	ra,0(r6)
  10764c:	f83ed43a 	srli	ra,ra,16
  107650:	f8001f26 	beq	ra,zero,1076d0 <__multiply+0x1a0>
  107654:	58c00017 	ldw	r3,0(r11)
  107658:	681d883a 	mov	r14,r13
  10765c:	581f883a 	mov	r15,r11
  107660:	1811883a 	mov	r8,r3
  107664:	5825883a 	mov	r18,r11
  107668:	000f883a 	mov	r7,zero
  10766c:	00000106 	br	107674 <__multiply+0x144>
  107670:	8825883a 	mov	r18,r17
  107674:	7140000b 	ldhu	r5,0(r14)
  107678:	4010d43a 	srli	r8,r8,16
  10767c:	193fffcc 	andi	r4,r3,65535
  107680:	2fcb383a 	mul	r5,r5,ra
  107684:	7bc00104 	addi	r15,r15,4
  107688:	73800104 	addi	r14,r14,4
  10768c:	2a0b883a 	add	r5,r5,r8
  107690:	29cb883a 	add	r5,r5,r7
  107694:	2806943a 	slli	r3,r5,16
  107698:	94400104 	addi	r17,r18,4
  10769c:	280ad43a 	srli	r5,r5,16
  1076a0:	1908b03a 	or	r4,r3,r4
  1076a4:	793fff15 	stw	r4,-4(r15)
  1076a8:	70ffff17 	ldw	r3,-4(r14)
  1076ac:	8a000017 	ldw	r8,0(r17)
  1076b0:	1806d43a 	srli	r3,r3,16
  1076b4:	413fffcc 	andi	r4,r8,65535
  1076b8:	1fc7383a 	mul	r3,r3,ra
  1076bc:	1907883a 	add	r3,r3,r4
  1076c0:	1947883a 	add	r3,r3,r5
  1076c4:	180ed43a 	srli	r7,r3,16
  1076c8:	727fe936 	bltu	r14,r9,107670 <__alt_data_end+0xfff07670>
  1076cc:	90c00115 	stw	r3,4(r18)
  1076d0:	31800104 	addi	r6,r6,4
  1076d4:	5ac00104 	addi	r11,r11,4
  1076d8:	333fbe36 	bltu	r6,r12,1075d4 <__alt_data_end+0xfff075d4>
  1076dc:	0400090e 	bge	zero,r16,107704 <__multiply+0x1d4>
  1076e0:	50ffff17 	ldw	r3,-4(r10)
  1076e4:	52bfff04 	addi	r10,r10,-4
  1076e8:	18000326 	beq	r3,zero,1076f8 <__multiply+0x1c8>
  1076ec:	00000506 	br	107704 <__multiply+0x1d4>
  1076f0:	50c00017 	ldw	r3,0(r10)
  1076f4:	1800031e 	bne	r3,zero,107704 <__multiply+0x1d4>
  1076f8:	843fffc4 	addi	r16,r16,-1
  1076fc:	52bfff04 	addi	r10,r10,-4
  107700:	803ffb1e 	bne	r16,zero,1076f0 <__alt_data_end+0xfff076f0>
  107704:	14000415 	stw	r16,16(r2)
  107708:	dfc00517 	ldw	ra,20(sp)
  10770c:	dd000417 	ldw	r20,16(sp)
  107710:	dcc00317 	ldw	r19,12(sp)
  107714:	dc800217 	ldw	r18,8(sp)
  107718:	dc400117 	ldw	r17,4(sp)
  10771c:	dc000017 	ldw	r16,0(sp)
  107720:	dec00604 	addi	sp,sp,24
  107724:	f800283a 	ret

00107728 <__pow5mult>:
  107728:	defffa04 	addi	sp,sp,-24
  10772c:	dcc00315 	stw	r19,12(sp)
  107730:	dc000015 	stw	r16,0(sp)
  107734:	dfc00515 	stw	ra,20(sp)
  107738:	dd000415 	stw	r20,16(sp)
  10773c:	dc800215 	stw	r18,8(sp)
  107740:	dc400115 	stw	r17,4(sp)
  107744:	308000cc 	andi	r2,r6,3
  107748:	3021883a 	mov	r16,r6
  10774c:	2027883a 	mov	r19,r4
  107750:	10002f1e 	bne	r2,zero,107810 <__pow5mult+0xe8>
  107754:	2825883a 	mov	r18,r5
  107758:	8021d0ba 	srai	r16,r16,2
  10775c:	80001a26 	beq	r16,zero,1077c8 <__pow5mult+0xa0>
  107760:	9c401217 	ldw	r17,72(r19)
  107764:	8800061e 	bne	r17,zero,107780 <__pow5mult+0x58>
  107768:	00003406 	br	10783c <__pow5mult+0x114>
  10776c:	8021d07a 	srai	r16,r16,1
  107770:	80001526 	beq	r16,zero,1077c8 <__pow5mult+0xa0>
  107774:	88800017 	ldw	r2,0(r17)
  107778:	10001c26 	beq	r2,zero,1077ec <__pow5mult+0xc4>
  10777c:	1023883a 	mov	r17,r2
  107780:	8080004c 	andi	r2,r16,1
  107784:	103ff926 	beq	r2,zero,10776c <__alt_data_end+0xfff0776c>
  107788:	880d883a 	mov	r6,r17
  10778c:	900b883a 	mov	r5,r18
  107790:	9809883a 	mov	r4,r19
  107794:	01075300 	call	107530 <__multiply>
  107798:	90001b26 	beq	r18,zero,107808 <__pow5mult+0xe0>
  10779c:	91000117 	ldw	r4,4(r18)
  1077a0:	98c01317 	ldw	r3,76(r19)
  1077a4:	8021d07a 	srai	r16,r16,1
  1077a8:	2109883a 	add	r4,r4,r4
  1077ac:	2109883a 	add	r4,r4,r4
  1077b0:	1907883a 	add	r3,r3,r4
  1077b4:	19000017 	ldw	r4,0(r3)
  1077b8:	91000015 	stw	r4,0(r18)
  1077bc:	1c800015 	stw	r18,0(r3)
  1077c0:	1025883a 	mov	r18,r2
  1077c4:	803feb1e 	bne	r16,zero,107774 <__alt_data_end+0xfff07774>
  1077c8:	9005883a 	mov	r2,r18
  1077cc:	dfc00517 	ldw	ra,20(sp)
  1077d0:	dd000417 	ldw	r20,16(sp)
  1077d4:	dcc00317 	ldw	r19,12(sp)
  1077d8:	dc800217 	ldw	r18,8(sp)
  1077dc:	dc400117 	ldw	r17,4(sp)
  1077e0:	dc000017 	ldw	r16,0(sp)
  1077e4:	dec00604 	addi	sp,sp,24
  1077e8:	f800283a 	ret
  1077ec:	880d883a 	mov	r6,r17
  1077f0:	880b883a 	mov	r5,r17
  1077f4:	9809883a 	mov	r4,r19
  1077f8:	01075300 	call	107530 <__multiply>
  1077fc:	88800015 	stw	r2,0(r17)
  107800:	10000015 	stw	zero,0(r2)
  107804:	003fdd06 	br	10777c <__alt_data_end+0xfff0777c>
  107808:	1025883a 	mov	r18,r2
  10780c:	003fd706 	br	10776c <__alt_data_end+0xfff0776c>
  107810:	10bfffc4 	addi	r2,r2,-1
  107814:	1085883a 	add	r2,r2,r2
  107818:	00c00474 	movhi	r3,17
  10781c:	18c15704 	addi	r3,r3,1372
  107820:	1085883a 	add	r2,r2,r2
  107824:	1885883a 	add	r2,r3,r2
  107828:	11800017 	ldw	r6,0(r2)
  10782c:	000f883a 	mov	r7,zero
  107830:	01071b80 	call	1071b8 <__multadd>
  107834:	1025883a 	mov	r18,r2
  107838:	003fc706 	br	107758 <__alt_data_end+0xfff07758>
  10783c:	05000044 	movi	r20,1
  107840:	a00b883a 	mov	r5,r20
  107844:	9809883a 	mov	r4,r19
  107848:	01070e80 	call	1070e8 <_Balloc>
  10784c:	1023883a 	mov	r17,r2
  107850:	00809c44 	movi	r2,625
  107854:	88800515 	stw	r2,20(r17)
  107858:	8d000415 	stw	r20,16(r17)
  10785c:	9c401215 	stw	r17,72(r19)
  107860:	88000015 	stw	zero,0(r17)
  107864:	003fc606 	br	107780 <__alt_data_end+0xfff07780>

00107868 <__lshift>:
  107868:	defff904 	addi	sp,sp,-28
  10786c:	dd400515 	stw	r21,20(sp)
  107870:	dcc00315 	stw	r19,12(sp)
  107874:	302bd17a 	srai	r21,r6,5
  107878:	2cc00417 	ldw	r19,16(r5)
  10787c:	28800217 	ldw	r2,8(r5)
  107880:	dd000415 	stw	r20,16(sp)
  107884:	ace7883a 	add	r19,r21,r19
  107888:	dc800215 	stw	r18,8(sp)
  10788c:	dc400115 	stw	r17,4(sp)
  107890:	dc000015 	stw	r16,0(sp)
  107894:	dfc00615 	stw	ra,24(sp)
  107898:	9c000044 	addi	r16,r19,1
  10789c:	2823883a 	mov	r17,r5
  1078a0:	3029883a 	mov	r20,r6
  1078a4:	2025883a 	mov	r18,r4
  1078a8:	29400117 	ldw	r5,4(r5)
  1078ac:	1400030e 	bge	r2,r16,1078bc <__lshift+0x54>
  1078b0:	1085883a 	add	r2,r2,r2
  1078b4:	29400044 	addi	r5,r5,1
  1078b8:	143ffd16 	blt	r2,r16,1078b0 <__alt_data_end+0xfff078b0>
  1078bc:	9009883a 	mov	r4,r18
  1078c0:	01070e80 	call	1070e8 <_Balloc>
  1078c4:	10c00504 	addi	r3,r2,20
  1078c8:	0540070e 	bge	zero,r21,1078e8 <__lshift+0x80>
  1078cc:	ad6b883a 	add	r21,r21,r21
  1078d0:	ad6b883a 	add	r21,r21,r21
  1078d4:	1809883a 	mov	r4,r3
  1078d8:	1d47883a 	add	r3,r3,r21
  1078dc:	20000015 	stw	zero,0(r4)
  1078e0:	21000104 	addi	r4,r4,4
  1078e4:	193ffd1e 	bne	r3,r4,1078dc <__alt_data_end+0xfff078dc>
  1078e8:	8a000417 	ldw	r8,16(r17)
  1078ec:	89000504 	addi	r4,r17,20
  1078f0:	a18007cc 	andi	r6,r20,31
  1078f4:	4211883a 	add	r8,r8,r8
  1078f8:	4211883a 	add	r8,r8,r8
  1078fc:	2211883a 	add	r8,r4,r8
  107900:	30002326 	beq	r6,zero,107990 <__lshift+0x128>
  107904:	02400804 	movi	r9,32
  107908:	4993c83a 	sub	r9,r9,r6
  10790c:	000b883a 	mov	r5,zero
  107910:	21c00017 	ldw	r7,0(r4)
  107914:	1815883a 	mov	r10,r3
  107918:	18c00104 	addi	r3,r3,4
  10791c:	398e983a 	sll	r7,r7,r6
  107920:	21000104 	addi	r4,r4,4
  107924:	394ab03a 	or	r5,r7,r5
  107928:	197fff15 	stw	r5,-4(r3)
  10792c:	217fff17 	ldw	r5,-4(r4)
  107930:	2a4ad83a 	srl	r5,r5,r9
  107934:	223ff636 	bltu	r4,r8,107910 <__alt_data_end+0xfff07910>
  107938:	51400115 	stw	r5,4(r10)
  10793c:	28001a1e 	bne	r5,zero,1079a8 <__lshift+0x140>
  107940:	843fffc4 	addi	r16,r16,-1
  107944:	14000415 	stw	r16,16(r2)
  107948:	88000826 	beq	r17,zero,10796c <__lshift+0x104>
  10794c:	89000117 	ldw	r4,4(r17)
  107950:	90c01317 	ldw	r3,76(r18)
  107954:	2109883a 	add	r4,r4,r4
  107958:	2109883a 	add	r4,r4,r4
  10795c:	1907883a 	add	r3,r3,r4
  107960:	19000017 	ldw	r4,0(r3)
  107964:	89000015 	stw	r4,0(r17)
  107968:	1c400015 	stw	r17,0(r3)
  10796c:	dfc00617 	ldw	ra,24(sp)
  107970:	dd400517 	ldw	r21,20(sp)
  107974:	dd000417 	ldw	r20,16(sp)
  107978:	dcc00317 	ldw	r19,12(sp)
  10797c:	dc800217 	ldw	r18,8(sp)
  107980:	dc400117 	ldw	r17,4(sp)
  107984:	dc000017 	ldw	r16,0(sp)
  107988:	dec00704 	addi	sp,sp,28
  10798c:	f800283a 	ret
  107990:	21400017 	ldw	r5,0(r4)
  107994:	18c00104 	addi	r3,r3,4
  107998:	21000104 	addi	r4,r4,4
  10799c:	197fff15 	stw	r5,-4(r3)
  1079a0:	223ffb36 	bltu	r4,r8,107990 <__alt_data_end+0xfff07990>
  1079a4:	003fe606 	br	107940 <__alt_data_end+0xfff07940>
  1079a8:	9c000084 	addi	r16,r19,2
  1079ac:	003fe406 	br	107940 <__alt_data_end+0xfff07940>

001079b0 <__mcmp>:
  1079b0:	20800417 	ldw	r2,16(r4)
  1079b4:	28c00417 	ldw	r3,16(r5)
  1079b8:	10c5c83a 	sub	r2,r2,r3
  1079bc:	1000111e 	bne	r2,zero,107a04 <__mcmp+0x54>
  1079c0:	18c7883a 	add	r3,r3,r3
  1079c4:	18c7883a 	add	r3,r3,r3
  1079c8:	21000504 	addi	r4,r4,20
  1079cc:	29400504 	addi	r5,r5,20
  1079d0:	20c5883a 	add	r2,r4,r3
  1079d4:	28cb883a 	add	r5,r5,r3
  1079d8:	00000106 	br	1079e0 <__mcmp+0x30>
  1079dc:	20800a2e 	bgeu	r4,r2,107a08 <__mcmp+0x58>
  1079e0:	10bfff04 	addi	r2,r2,-4
  1079e4:	297fff04 	addi	r5,r5,-4
  1079e8:	11800017 	ldw	r6,0(r2)
  1079ec:	28c00017 	ldw	r3,0(r5)
  1079f0:	30fffa26 	beq	r6,r3,1079dc <__alt_data_end+0xfff079dc>
  1079f4:	30c00236 	bltu	r6,r3,107a00 <__mcmp+0x50>
  1079f8:	00800044 	movi	r2,1
  1079fc:	f800283a 	ret
  107a00:	00bfffc4 	movi	r2,-1
  107a04:	f800283a 	ret
  107a08:	0005883a 	mov	r2,zero
  107a0c:	f800283a 	ret

00107a10 <__mdiff>:
  107a10:	28c00417 	ldw	r3,16(r5)
  107a14:	30800417 	ldw	r2,16(r6)
  107a18:	defffa04 	addi	sp,sp,-24
  107a1c:	dcc00315 	stw	r19,12(sp)
  107a20:	dc800215 	stw	r18,8(sp)
  107a24:	dfc00515 	stw	ra,20(sp)
  107a28:	dd000415 	stw	r20,16(sp)
  107a2c:	dc400115 	stw	r17,4(sp)
  107a30:	dc000015 	stw	r16,0(sp)
  107a34:	1887c83a 	sub	r3,r3,r2
  107a38:	2825883a 	mov	r18,r5
  107a3c:	3027883a 	mov	r19,r6
  107a40:	1800141e 	bne	r3,zero,107a94 <__mdiff+0x84>
  107a44:	1085883a 	add	r2,r2,r2
  107a48:	1085883a 	add	r2,r2,r2
  107a4c:	2a000504 	addi	r8,r5,20
  107a50:	34000504 	addi	r16,r6,20
  107a54:	4087883a 	add	r3,r8,r2
  107a58:	8085883a 	add	r2,r16,r2
  107a5c:	00000106 	br	107a64 <__mdiff+0x54>
  107a60:	40c0592e 	bgeu	r8,r3,107bc8 <__mdiff+0x1b8>
  107a64:	18ffff04 	addi	r3,r3,-4
  107a68:	10bfff04 	addi	r2,r2,-4
  107a6c:	19c00017 	ldw	r7,0(r3)
  107a70:	11400017 	ldw	r5,0(r2)
  107a74:	397ffa26 	beq	r7,r5,107a60 <__alt_data_end+0xfff07a60>
  107a78:	3940592e 	bgeu	r7,r5,107be0 <__mdiff+0x1d0>
  107a7c:	9005883a 	mov	r2,r18
  107a80:	4023883a 	mov	r17,r8
  107a84:	9825883a 	mov	r18,r19
  107a88:	05000044 	movi	r20,1
  107a8c:	1027883a 	mov	r19,r2
  107a90:	00000406 	br	107aa4 <__mdiff+0x94>
  107a94:	18005616 	blt	r3,zero,107bf0 <__mdiff+0x1e0>
  107a98:	34400504 	addi	r17,r6,20
  107a9c:	2c000504 	addi	r16,r5,20
  107aa0:	0029883a 	mov	r20,zero
  107aa4:	91400117 	ldw	r5,4(r18)
  107aa8:	01070e80 	call	1070e8 <_Balloc>
  107aac:	92400417 	ldw	r9,16(r18)
  107ab0:	9b000417 	ldw	r12,16(r19)
  107ab4:	12c00504 	addi	r11,r2,20
  107ab8:	4a51883a 	add	r8,r9,r9
  107abc:	6319883a 	add	r12,r12,r12
  107ac0:	4211883a 	add	r8,r8,r8
  107ac4:	6319883a 	add	r12,r12,r12
  107ac8:	15000315 	stw	r20,12(r2)
  107acc:	8211883a 	add	r8,r16,r8
  107ad0:	8b19883a 	add	r12,r17,r12
  107ad4:	0007883a 	mov	r3,zero
  107ad8:	81400017 	ldw	r5,0(r16)
  107adc:	89c00017 	ldw	r7,0(r17)
  107ae0:	59800104 	addi	r6,r11,4
  107ae4:	293fffcc 	andi	r4,r5,65535
  107ae8:	20c7883a 	add	r3,r4,r3
  107aec:	393fffcc 	andi	r4,r7,65535
  107af0:	1909c83a 	sub	r4,r3,r4
  107af4:	280ad43a 	srli	r5,r5,16
  107af8:	380ed43a 	srli	r7,r7,16
  107afc:	2007d43a 	srai	r3,r4,16
  107b00:	213fffcc 	andi	r4,r4,65535
  107b04:	29cbc83a 	sub	r5,r5,r7
  107b08:	28c7883a 	add	r3,r5,r3
  107b0c:	180a943a 	slli	r5,r3,16
  107b10:	8c400104 	addi	r17,r17,4
  107b14:	84000104 	addi	r16,r16,4
  107b18:	2908b03a 	or	r4,r5,r4
  107b1c:	59000015 	stw	r4,0(r11)
  107b20:	1807d43a 	srai	r3,r3,16
  107b24:	3015883a 	mov	r10,r6
  107b28:	3017883a 	mov	r11,r6
  107b2c:	8b3fea36 	bltu	r17,r12,107ad8 <__alt_data_end+0xfff07ad8>
  107b30:	8200162e 	bgeu	r16,r8,107b8c <__mdiff+0x17c>
  107b34:	8017883a 	mov	r11,r16
  107b38:	59400017 	ldw	r5,0(r11)
  107b3c:	31800104 	addi	r6,r6,4
  107b40:	5ac00104 	addi	r11,r11,4
  107b44:	293fffcc 	andi	r4,r5,65535
  107b48:	20c7883a 	add	r3,r4,r3
  107b4c:	280ed43a 	srli	r7,r5,16
  107b50:	180bd43a 	srai	r5,r3,16
  107b54:	193fffcc 	andi	r4,r3,65535
  107b58:	3947883a 	add	r3,r7,r5
  107b5c:	180a943a 	slli	r5,r3,16
  107b60:	1807d43a 	srai	r3,r3,16
  107b64:	2908b03a 	or	r4,r5,r4
  107b68:	313fff15 	stw	r4,-4(r6)
  107b6c:	5a3ff236 	bltu	r11,r8,107b38 <__alt_data_end+0xfff07b38>
  107b70:	0406303a 	nor	r3,zero,r16
  107b74:	1a07883a 	add	r3,r3,r8
  107b78:	1806d0ba 	srli	r3,r3,2
  107b7c:	18c00044 	addi	r3,r3,1
  107b80:	18c7883a 	add	r3,r3,r3
  107b84:	18c7883a 	add	r3,r3,r3
  107b88:	50d5883a 	add	r10,r10,r3
  107b8c:	50ffff04 	addi	r3,r10,-4
  107b90:	2000041e 	bne	r4,zero,107ba4 <__mdiff+0x194>
  107b94:	18ffff04 	addi	r3,r3,-4
  107b98:	19000017 	ldw	r4,0(r3)
  107b9c:	4a7fffc4 	addi	r9,r9,-1
  107ba0:	203ffc26 	beq	r4,zero,107b94 <__alt_data_end+0xfff07b94>
  107ba4:	12400415 	stw	r9,16(r2)
  107ba8:	dfc00517 	ldw	ra,20(sp)
  107bac:	dd000417 	ldw	r20,16(sp)
  107bb0:	dcc00317 	ldw	r19,12(sp)
  107bb4:	dc800217 	ldw	r18,8(sp)
  107bb8:	dc400117 	ldw	r17,4(sp)
  107bbc:	dc000017 	ldw	r16,0(sp)
  107bc0:	dec00604 	addi	sp,sp,24
  107bc4:	f800283a 	ret
  107bc8:	000b883a 	mov	r5,zero
  107bcc:	01070e80 	call	1070e8 <_Balloc>
  107bd0:	00c00044 	movi	r3,1
  107bd4:	10c00415 	stw	r3,16(r2)
  107bd8:	10000515 	stw	zero,20(r2)
  107bdc:	003ff206 	br	107ba8 <__alt_data_end+0xfff07ba8>
  107be0:	8023883a 	mov	r17,r16
  107be4:	0029883a 	mov	r20,zero
  107be8:	4021883a 	mov	r16,r8
  107bec:	003fad06 	br	107aa4 <__alt_data_end+0xfff07aa4>
  107bf0:	9005883a 	mov	r2,r18
  107bf4:	94400504 	addi	r17,r18,20
  107bf8:	9c000504 	addi	r16,r19,20
  107bfc:	9825883a 	mov	r18,r19
  107c00:	05000044 	movi	r20,1
  107c04:	1027883a 	mov	r19,r2
  107c08:	003fa606 	br	107aa4 <__alt_data_end+0xfff07aa4>

00107c0c <__ulp>:
  107c0c:	295ffc2c 	andhi	r5,r5,32752
  107c10:	00bf3034 	movhi	r2,64704
  107c14:	2887883a 	add	r3,r5,r2
  107c18:	00c0020e 	bge	zero,r3,107c24 <__ulp+0x18>
  107c1c:	0005883a 	mov	r2,zero
  107c20:	f800283a 	ret
  107c24:	00c7c83a 	sub	r3,zero,r3
  107c28:	1807d53a 	srai	r3,r3,20
  107c2c:	008004c4 	movi	r2,19
  107c30:	10c00b0e 	bge	r2,r3,107c60 <__ulp+0x54>
  107c34:	18bffb04 	addi	r2,r3,-20
  107c38:	01000784 	movi	r4,30
  107c3c:	0007883a 	mov	r3,zero
  107c40:	20800516 	blt	r4,r2,107c58 <__ulp+0x4c>
  107c44:	010007c4 	movi	r4,31
  107c48:	2089c83a 	sub	r4,r4,r2
  107c4c:	00800044 	movi	r2,1
  107c50:	1104983a 	sll	r2,r2,r4
  107c54:	f800283a 	ret
  107c58:	00800044 	movi	r2,1
  107c5c:	f800283a 	ret
  107c60:	01400234 	movhi	r5,8
  107c64:	28c7d83a 	sra	r3,r5,r3
  107c68:	0005883a 	mov	r2,zero
  107c6c:	f800283a 	ret

00107c70 <__b2d>:
  107c70:	defffa04 	addi	sp,sp,-24
  107c74:	dc000015 	stw	r16,0(sp)
  107c78:	24000417 	ldw	r16,16(r4)
  107c7c:	dc400115 	stw	r17,4(sp)
  107c80:	24400504 	addi	r17,r4,20
  107c84:	8421883a 	add	r16,r16,r16
  107c88:	8421883a 	add	r16,r16,r16
  107c8c:	8c21883a 	add	r16,r17,r16
  107c90:	dc800215 	stw	r18,8(sp)
  107c94:	84bfff17 	ldw	r18,-4(r16)
  107c98:	dd000415 	stw	r20,16(sp)
  107c9c:	dcc00315 	stw	r19,12(sp)
  107ca0:	9009883a 	mov	r4,r18
  107ca4:	2829883a 	mov	r20,r5
  107ca8:	dfc00515 	stw	ra,20(sp)
  107cac:	01073dc0 	call	1073dc <__hi0bits>
  107cb0:	00c00804 	movi	r3,32
  107cb4:	1889c83a 	sub	r4,r3,r2
  107cb8:	a1000015 	stw	r4,0(r20)
  107cbc:	01000284 	movi	r4,10
  107cc0:	84ffff04 	addi	r19,r16,-4
  107cc4:	20801216 	blt	r4,r2,107d10 <__b2d+0xa0>
  107cc8:	018002c4 	movi	r6,11
  107ccc:	308dc83a 	sub	r6,r6,r2
  107cd0:	9186d83a 	srl	r3,r18,r6
  107cd4:	18cffc34 	orhi	r3,r3,16368
  107cd8:	8cc0212e 	bgeu	r17,r19,107d60 <__b2d+0xf0>
  107cdc:	813ffe17 	ldw	r4,-8(r16)
  107ce0:	218cd83a 	srl	r6,r4,r6
  107ce4:	10800544 	addi	r2,r2,21
  107ce8:	9084983a 	sll	r2,r18,r2
  107cec:	1184b03a 	or	r2,r2,r6
  107cf0:	dfc00517 	ldw	ra,20(sp)
  107cf4:	dd000417 	ldw	r20,16(sp)
  107cf8:	dcc00317 	ldw	r19,12(sp)
  107cfc:	dc800217 	ldw	r18,8(sp)
  107d00:	dc400117 	ldw	r17,4(sp)
  107d04:	dc000017 	ldw	r16,0(sp)
  107d08:	dec00604 	addi	sp,sp,24
  107d0c:	f800283a 	ret
  107d10:	8cc00f2e 	bgeu	r17,r19,107d50 <__b2d+0xe0>
  107d14:	117ffd44 	addi	r5,r2,-11
  107d18:	80bffe17 	ldw	r2,-8(r16)
  107d1c:	28000e26 	beq	r5,zero,107d58 <__b2d+0xe8>
  107d20:	1949c83a 	sub	r4,r3,r5
  107d24:	9164983a 	sll	r18,r18,r5
  107d28:	1106d83a 	srl	r3,r2,r4
  107d2c:	81bffe04 	addi	r6,r16,-8
  107d30:	948ffc34 	orhi	r18,r18,16368
  107d34:	90c6b03a 	or	r3,r18,r3
  107d38:	89800e2e 	bgeu	r17,r6,107d74 <__b2d+0x104>
  107d3c:	81bffd17 	ldw	r6,-12(r16)
  107d40:	1144983a 	sll	r2,r2,r5
  107d44:	310ad83a 	srl	r5,r6,r4
  107d48:	2884b03a 	or	r2,r5,r2
  107d4c:	003fe806 	br	107cf0 <__alt_data_end+0xfff07cf0>
  107d50:	10bffd44 	addi	r2,r2,-11
  107d54:	1000041e 	bne	r2,zero,107d68 <__b2d+0xf8>
  107d58:	90cffc34 	orhi	r3,r18,16368
  107d5c:	003fe406 	br	107cf0 <__alt_data_end+0xfff07cf0>
  107d60:	000d883a 	mov	r6,zero
  107d64:	003fdf06 	br	107ce4 <__alt_data_end+0xfff07ce4>
  107d68:	90a4983a 	sll	r18,r18,r2
  107d6c:	0005883a 	mov	r2,zero
  107d70:	003ff906 	br	107d58 <__alt_data_end+0xfff07d58>
  107d74:	1144983a 	sll	r2,r2,r5
  107d78:	003fdd06 	br	107cf0 <__alt_data_end+0xfff07cf0>

00107d7c <__d2b>:
  107d7c:	defff804 	addi	sp,sp,-32
  107d80:	dc000215 	stw	r16,8(sp)
  107d84:	3021883a 	mov	r16,r6
  107d88:	dc400315 	stw	r17,12(sp)
  107d8c:	8022907a 	slli	r17,r16,1
  107d90:	dd000615 	stw	r20,24(sp)
  107d94:	2829883a 	mov	r20,r5
  107d98:	01400044 	movi	r5,1
  107d9c:	dcc00515 	stw	r19,20(sp)
  107da0:	dc800415 	stw	r18,16(sp)
  107da4:	dfc00715 	stw	ra,28(sp)
  107da8:	3825883a 	mov	r18,r7
  107dac:	8822d57a 	srli	r17,r17,21
  107db0:	01070e80 	call	1070e8 <_Balloc>
  107db4:	1027883a 	mov	r19,r2
  107db8:	00800434 	movhi	r2,16
  107dbc:	10bfffc4 	addi	r2,r2,-1
  107dc0:	808c703a 	and	r6,r16,r2
  107dc4:	88000126 	beq	r17,zero,107dcc <__d2b+0x50>
  107dc8:	31800434 	orhi	r6,r6,16
  107dcc:	d9800015 	stw	r6,0(sp)
  107dd0:	a0002426 	beq	r20,zero,107e64 <__d2b+0xe8>
  107dd4:	d9000104 	addi	r4,sp,4
  107dd8:	dd000115 	stw	r20,4(sp)
  107ddc:	01074440 	call	107444 <__lo0bits>
  107de0:	d8c00017 	ldw	r3,0(sp)
  107de4:	10002f1e 	bne	r2,zero,107ea4 <__d2b+0x128>
  107de8:	d9000117 	ldw	r4,4(sp)
  107dec:	99000515 	stw	r4,20(r19)
  107df0:	1821003a 	cmpeq	r16,r3,zero
  107df4:	01000084 	movi	r4,2
  107df8:	2421c83a 	sub	r16,r4,r16
  107dfc:	98c00615 	stw	r3,24(r19)
  107e00:	9c000415 	stw	r16,16(r19)
  107e04:	88001f1e 	bne	r17,zero,107e84 <__d2b+0x108>
  107e08:	10bef384 	addi	r2,r2,-1074
  107e0c:	90800015 	stw	r2,0(r18)
  107e10:	00900034 	movhi	r2,16384
  107e14:	10bfffc4 	addi	r2,r2,-1
  107e18:	8085883a 	add	r2,r16,r2
  107e1c:	1085883a 	add	r2,r2,r2
  107e20:	1085883a 	add	r2,r2,r2
  107e24:	9885883a 	add	r2,r19,r2
  107e28:	11000517 	ldw	r4,20(r2)
  107e2c:	8020917a 	slli	r16,r16,5
  107e30:	01073dc0 	call	1073dc <__hi0bits>
  107e34:	d8c00817 	ldw	r3,32(sp)
  107e38:	8085c83a 	sub	r2,r16,r2
  107e3c:	18800015 	stw	r2,0(r3)
  107e40:	9805883a 	mov	r2,r19
  107e44:	dfc00717 	ldw	ra,28(sp)
  107e48:	dd000617 	ldw	r20,24(sp)
  107e4c:	dcc00517 	ldw	r19,20(sp)
  107e50:	dc800417 	ldw	r18,16(sp)
  107e54:	dc400317 	ldw	r17,12(sp)
  107e58:	dc000217 	ldw	r16,8(sp)
  107e5c:	dec00804 	addi	sp,sp,32
  107e60:	f800283a 	ret
  107e64:	d809883a 	mov	r4,sp
  107e68:	01074440 	call	107444 <__lo0bits>
  107e6c:	d8c00017 	ldw	r3,0(sp)
  107e70:	04000044 	movi	r16,1
  107e74:	9c000415 	stw	r16,16(r19)
  107e78:	98c00515 	stw	r3,20(r19)
  107e7c:	10800804 	addi	r2,r2,32
  107e80:	883fe126 	beq	r17,zero,107e08 <__alt_data_end+0xfff07e08>
  107e84:	00c00d44 	movi	r3,53
  107e88:	8c7ef344 	addi	r17,r17,-1075
  107e8c:	88a3883a 	add	r17,r17,r2
  107e90:	1885c83a 	sub	r2,r3,r2
  107e94:	d8c00817 	ldw	r3,32(sp)
  107e98:	94400015 	stw	r17,0(r18)
  107e9c:	18800015 	stw	r2,0(r3)
  107ea0:	003fe706 	br	107e40 <__alt_data_end+0xfff07e40>
  107ea4:	01000804 	movi	r4,32
  107ea8:	2089c83a 	sub	r4,r4,r2
  107eac:	1908983a 	sll	r4,r3,r4
  107eb0:	d9400117 	ldw	r5,4(sp)
  107eb4:	1886d83a 	srl	r3,r3,r2
  107eb8:	2148b03a 	or	r4,r4,r5
  107ebc:	99000515 	stw	r4,20(r19)
  107ec0:	d8c00015 	stw	r3,0(sp)
  107ec4:	003fca06 	br	107df0 <__alt_data_end+0xfff07df0>

00107ec8 <__ratio>:
  107ec8:	defff904 	addi	sp,sp,-28
  107ecc:	dc400315 	stw	r17,12(sp)
  107ed0:	2823883a 	mov	r17,r5
  107ed4:	d9400104 	addi	r5,sp,4
  107ed8:	dfc00615 	stw	ra,24(sp)
  107edc:	dcc00515 	stw	r19,20(sp)
  107ee0:	dc800415 	stw	r18,16(sp)
  107ee4:	2027883a 	mov	r19,r4
  107ee8:	dc000215 	stw	r16,8(sp)
  107eec:	0107c700 	call	107c70 <__b2d>
  107ef0:	d80b883a 	mov	r5,sp
  107ef4:	8809883a 	mov	r4,r17
  107ef8:	1025883a 	mov	r18,r2
  107efc:	1821883a 	mov	r16,r3
  107f00:	0107c700 	call	107c70 <__b2d>
  107f04:	8a000417 	ldw	r8,16(r17)
  107f08:	99000417 	ldw	r4,16(r19)
  107f0c:	d9400117 	ldw	r5,4(sp)
  107f10:	2209c83a 	sub	r4,r4,r8
  107f14:	2010917a 	slli	r8,r4,5
  107f18:	d9000017 	ldw	r4,0(sp)
  107f1c:	2909c83a 	sub	r4,r5,r4
  107f20:	4109883a 	add	r4,r8,r4
  107f24:	01000e0e 	bge	zero,r4,107f60 <__ratio+0x98>
  107f28:	2008953a 	slli	r4,r4,20
  107f2c:	2421883a 	add	r16,r4,r16
  107f30:	100d883a 	mov	r6,r2
  107f34:	180f883a 	mov	r7,r3
  107f38:	9009883a 	mov	r4,r18
  107f3c:	800b883a 	mov	r5,r16
  107f40:	010c2b00 	call	10c2b0 <__divdf3>
  107f44:	dfc00617 	ldw	ra,24(sp)
  107f48:	dcc00517 	ldw	r19,20(sp)
  107f4c:	dc800417 	ldw	r18,16(sp)
  107f50:	dc400317 	ldw	r17,12(sp)
  107f54:	dc000217 	ldw	r16,8(sp)
  107f58:	dec00704 	addi	sp,sp,28
  107f5c:	f800283a 	ret
  107f60:	2008953a 	slli	r4,r4,20
  107f64:	1907c83a 	sub	r3,r3,r4
  107f68:	003ff106 	br	107f30 <__alt_data_end+0xfff07f30>

00107f6c <_mprec_log10>:
  107f6c:	defffe04 	addi	sp,sp,-8
  107f70:	dc000015 	stw	r16,0(sp)
  107f74:	dfc00115 	stw	ra,4(sp)
  107f78:	008005c4 	movi	r2,23
  107f7c:	2021883a 	mov	r16,r4
  107f80:	11000d0e 	bge	r2,r4,107fb8 <_mprec_log10+0x4c>
  107f84:	0005883a 	mov	r2,zero
  107f88:	00cffc34 	movhi	r3,16368
  107f8c:	843fffc4 	addi	r16,r16,-1
  107f90:	000d883a 	mov	r6,zero
  107f94:	01d00934 	movhi	r7,16420
  107f98:	1009883a 	mov	r4,r2
  107f9c:	180b883a 	mov	r5,r3
  107fa0:	010cdf00 	call	10cdf0 <__muldf3>
  107fa4:	803ff91e 	bne	r16,zero,107f8c <__alt_data_end+0xfff07f8c>
  107fa8:	dfc00117 	ldw	ra,4(sp)
  107fac:	dc000017 	ldw	r16,0(sp)
  107fb0:	dec00204 	addi	sp,sp,8
  107fb4:	f800283a 	ret
  107fb8:	202090fa 	slli	r16,r4,3
  107fbc:	00800474 	movhi	r2,17
  107fc0:	10816e04 	addi	r2,r2,1464
  107fc4:	1421883a 	add	r16,r2,r16
  107fc8:	80800017 	ldw	r2,0(r16)
  107fcc:	80c00117 	ldw	r3,4(r16)
  107fd0:	dfc00117 	ldw	ra,4(sp)
  107fd4:	dc000017 	ldw	r16,0(sp)
  107fd8:	dec00204 	addi	sp,sp,8
  107fdc:	f800283a 	ret

00107fe0 <__copybits>:
  107fe0:	297fffc4 	addi	r5,r5,-1
  107fe4:	280fd17a 	srai	r7,r5,5
  107fe8:	30c00417 	ldw	r3,16(r6)
  107fec:	30800504 	addi	r2,r6,20
  107ff0:	39c00044 	addi	r7,r7,1
  107ff4:	18c7883a 	add	r3,r3,r3
  107ff8:	39cf883a 	add	r7,r7,r7
  107ffc:	18c7883a 	add	r3,r3,r3
  108000:	39cf883a 	add	r7,r7,r7
  108004:	10c7883a 	add	r3,r2,r3
  108008:	21cf883a 	add	r7,r4,r7
  10800c:	10c00d2e 	bgeu	r2,r3,108044 <__copybits+0x64>
  108010:	200b883a 	mov	r5,r4
  108014:	12000017 	ldw	r8,0(r2)
  108018:	29400104 	addi	r5,r5,4
  10801c:	10800104 	addi	r2,r2,4
  108020:	2a3fff15 	stw	r8,-4(r5)
  108024:	10fffb36 	bltu	r2,r3,108014 <__alt_data_end+0xfff08014>
  108028:	1985c83a 	sub	r2,r3,r6
  10802c:	10bffac4 	addi	r2,r2,-21
  108030:	1004d0ba 	srli	r2,r2,2
  108034:	10800044 	addi	r2,r2,1
  108038:	1085883a 	add	r2,r2,r2
  10803c:	1085883a 	add	r2,r2,r2
  108040:	2089883a 	add	r4,r4,r2
  108044:	21c0032e 	bgeu	r4,r7,108054 <__copybits+0x74>
  108048:	20000015 	stw	zero,0(r4)
  10804c:	21000104 	addi	r4,r4,4
  108050:	21fffd36 	bltu	r4,r7,108048 <__alt_data_end+0xfff08048>
  108054:	f800283a 	ret

00108058 <__any_on>:
  108058:	20c00417 	ldw	r3,16(r4)
  10805c:	2805d17a 	srai	r2,r5,5
  108060:	21000504 	addi	r4,r4,20
  108064:	18800d0e 	bge	r3,r2,10809c <__any_on+0x44>
  108068:	18c7883a 	add	r3,r3,r3
  10806c:	18c7883a 	add	r3,r3,r3
  108070:	20c7883a 	add	r3,r4,r3
  108074:	20c0192e 	bgeu	r4,r3,1080dc <__any_on+0x84>
  108078:	18bfff17 	ldw	r2,-4(r3)
  10807c:	18ffff04 	addi	r3,r3,-4
  108080:	1000041e 	bne	r2,zero,108094 <__any_on+0x3c>
  108084:	20c0142e 	bgeu	r4,r3,1080d8 <__any_on+0x80>
  108088:	18ffff04 	addi	r3,r3,-4
  10808c:	19400017 	ldw	r5,0(r3)
  108090:	283ffc26 	beq	r5,zero,108084 <__alt_data_end+0xfff08084>
  108094:	00800044 	movi	r2,1
  108098:	f800283a 	ret
  10809c:	10c00a0e 	bge	r2,r3,1080c8 <__any_on+0x70>
  1080a0:	1085883a 	add	r2,r2,r2
  1080a4:	1085883a 	add	r2,r2,r2
  1080a8:	294007cc 	andi	r5,r5,31
  1080ac:	2087883a 	add	r3,r4,r2
  1080b0:	283ff026 	beq	r5,zero,108074 <__alt_data_end+0xfff08074>
  1080b4:	19800017 	ldw	r6,0(r3)
  1080b8:	3144d83a 	srl	r2,r6,r5
  1080bc:	114a983a 	sll	r5,r2,r5
  1080c0:	317ff41e 	bne	r6,r5,108094 <__alt_data_end+0xfff08094>
  1080c4:	003feb06 	br	108074 <__alt_data_end+0xfff08074>
  1080c8:	1085883a 	add	r2,r2,r2
  1080cc:	1085883a 	add	r2,r2,r2
  1080d0:	2087883a 	add	r3,r4,r2
  1080d4:	003fe706 	br	108074 <__alt_data_end+0xfff08074>
  1080d8:	f800283a 	ret
  1080dc:	0005883a 	mov	r2,zero
  1080e0:	f800283a 	ret

001080e4 <__fpclassifyd>:
  1080e4:	00a00034 	movhi	r2,32768
  1080e8:	10bfffc4 	addi	r2,r2,-1
  1080ec:	2884703a 	and	r2,r5,r2
  1080f0:	10000726 	beq	r2,zero,108110 <__fpclassifyd+0x2c>
  1080f4:	00fffc34 	movhi	r3,65520
  1080f8:	019ff834 	movhi	r6,32736
  1080fc:	28c7883a 	add	r3,r5,r3
  108100:	31bfffc4 	addi	r6,r6,-1
  108104:	30c00536 	bltu	r6,r3,10811c <__fpclassifyd+0x38>
  108108:	00800104 	movi	r2,4
  10810c:	f800283a 	ret
  108110:	2000021e 	bne	r4,zero,10811c <__fpclassifyd+0x38>
  108114:	00800084 	movi	r2,2
  108118:	f800283a 	ret
  10811c:	00dffc34 	movhi	r3,32752
  108120:	019ff834 	movhi	r6,32736
  108124:	28cb883a 	add	r5,r5,r3
  108128:	31bfffc4 	addi	r6,r6,-1
  10812c:	317ff62e 	bgeu	r6,r5,108108 <__alt_data_end+0xfff08108>
  108130:	01400434 	movhi	r5,16
  108134:	297fffc4 	addi	r5,r5,-1
  108138:	28800236 	bltu	r5,r2,108144 <__fpclassifyd+0x60>
  10813c:	008000c4 	movi	r2,3
  108140:	f800283a 	ret
  108144:	10c00226 	beq	r2,r3,108150 <__fpclassifyd+0x6c>
  108148:	0005883a 	mov	r2,zero
  10814c:	f800283a 	ret
  108150:	2005003a 	cmpeq	r2,r4,zero
  108154:	f800283a 	ret

00108158 <_sbrk_r>:
  108158:	defffd04 	addi	sp,sp,-12
  10815c:	dc000015 	stw	r16,0(sp)
  108160:	04000474 	movhi	r16,17
  108164:	dc400115 	stw	r17,4(sp)
  108168:	8409ca04 	addi	r16,r16,10024
  10816c:	2023883a 	mov	r17,r4
  108170:	2809883a 	mov	r4,r5
  108174:	dfc00215 	stw	ra,8(sp)
  108178:	80000015 	stw	zero,0(r16)
  10817c:	010e7680 	call	10e768 <sbrk>
  108180:	00ffffc4 	movi	r3,-1
  108184:	10c00526 	beq	r2,r3,10819c <_sbrk_r+0x44>
  108188:	dfc00217 	ldw	ra,8(sp)
  10818c:	dc400117 	ldw	r17,4(sp)
  108190:	dc000017 	ldw	r16,0(sp)
  108194:	dec00304 	addi	sp,sp,12
  108198:	f800283a 	ret
  10819c:	80c00017 	ldw	r3,0(r16)
  1081a0:	183ff926 	beq	r3,zero,108188 <__alt_data_end+0xfff08188>
  1081a4:	88c00015 	stw	r3,0(r17)
  1081a8:	003ff706 	br	108188 <__alt_data_end+0xfff08188>

001081ac <__sread>:
  1081ac:	defffe04 	addi	sp,sp,-8
  1081b0:	dc000015 	stw	r16,0(sp)
  1081b4:	2821883a 	mov	r16,r5
  1081b8:	2940038f 	ldh	r5,14(r5)
  1081bc:	dfc00115 	stw	ra,4(sp)
  1081c0:	010a6500 	call	10a650 <_read_r>
  1081c4:	10000716 	blt	r2,zero,1081e4 <__sread+0x38>
  1081c8:	80c01417 	ldw	r3,80(r16)
  1081cc:	1887883a 	add	r3,r3,r2
  1081d0:	80c01415 	stw	r3,80(r16)
  1081d4:	dfc00117 	ldw	ra,4(sp)
  1081d8:	dc000017 	ldw	r16,0(sp)
  1081dc:	dec00204 	addi	sp,sp,8
  1081e0:	f800283a 	ret
  1081e4:	80c0030b 	ldhu	r3,12(r16)
  1081e8:	18fbffcc 	andi	r3,r3,61439
  1081ec:	80c0030d 	sth	r3,12(r16)
  1081f0:	dfc00117 	ldw	ra,4(sp)
  1081f4:	dc000017 	ldw	r16,0(sp)
  1081f8:	dec00204 	addi	sp,sp,8
  1081fc:	f800283a 	ret

00108200 <__seofread>:
  108200:	0005883a 	mov	r2,zero
  108204:	f800283a 	ret

00108208 <__swrite>:
  108208:	2880030b 	ldhu	r2,12(r5)
  10820c:	defffb04 	addi	sp,sp,-20
  108210:	dcc00315 	stw	r19,12(sp)
  108214:	dc800215 	stw	r18,8(sp)
  108218:	dc400115 	stw	r17,4(sp)
  10821c:	dc000015 	stw	r16,0(sp)
  108220:	dfc00415 	stw	ra,16(sp)
  108224:	10c0400c 	andi	r3,r2,256
  108228:	2821883a 	mov	r16,r5
  10822c:	2023883a 	mov	r17,r4
  108230:	3025883a 	mov	r18,r6
  108234:	3827883a 	mov	r19,r7
  108238:	18000526 	beq	r3,zero,108250 <__swrite+0x48>
  10823c:	2940038f 	ldh	r5,14(r5)
  108240:	01c00084 	movi	r7,2
  108244:	000d883a 	mov	r6,zero
  108248:	010a4940 	call	10a494 <_lseek_r>
  10824c:	8080030b 	ldhu	r2,12(r16)
  108250:	8140038f 	ldh	r5,14(r16)
  108254:	10bbffcc 	andi	r2,r2,61439
  108258:	980f883a 	mov	r7,r19
  10825c:	900d883a 	mov	r6,r18
  108260:	8809883a 	mov	r4,r17
  108264:	8080030d 	sth	r2,12(r16)
  108268:	dfc00417 	ldw	ra,16(sp)
  10826c:	dcc00317 	ldw	r19,12(sp)
  108270:	dc800217 	ldw	r18,8(sp)
  108274:	dc400117 	ldw	r17,4(sp)
  108278:	dc000017 	ldw	r16,0(sp)
  10827c:	dec00504 	addi	sp,sp,20
  108280:	0109aa41 	jmpi	109aa4 <_write_r>

00108284 <__sseek>:
  108284:	defffe04 	addi	sp,sp,-8
  108288:	dc000015 	stw	r16,0(sp)
  10828c:	2821883a 	mov	r16,r5
  108290:	2940038f 	ldh	r5,14(r5)
  108294:	dfc00115 	stw	ra,4(sp)
  108298:	010a4940 	call	10a494 <_lseek_r>
  10829c:	00ffffc4 	movi	r3,-1
  1082a0:	10c00826 	beq	r2,r3,1082c4 <__sseek+0x40>
  1082a4:	80c0030b 	ldhu	r3,12(r16)
  1082a8:	80801415 	stw	r2,80(r16)
  1082ac:	18c40014 	ori	r3,r3,4096
  1082b0:	80c0030d 	sth	r3,12(r16)
  1082b4:	dfc00117 	ldw	ra,4(sp)
  1082b8:	dc000017 	ldw	r16,0(sp)
  1082bc:	dec00204 	addi	sp,sp,8
  1082c0:	f800283a 	ret
  1082c4:	80c0030b 	ldhu	r3,12(r16)
  1082c8:	18fbffcc 	andi	r3,r3,61439
  1082cc:	80c0030d 	sth	r3,12(r16)
  1082d0:	dfc00117 	ldw	ra,4(sp)
  1082d4:	dc000017 	ldw	r16,0(sp)
  1082d8:	dec00204 	addi	sp,sp,8
  1082dc:	f800283a 	ret

001082e0 <__sclose>:
  1082e0:	2940038f 	ldh	r5,14(r5)
  1082e4:	0109b041 	jmpi	109b04 <_close_r>

001082e8 <strcmp>:
  1082e8:	2144b03a 	or	r2,r4,r5
  1082ec:	108000cc 	andi	r2,r2,3
  1082f0:	1000171e 	bne	r2,zero,108350 <strcmp+0x68>
  1082f4:	20800017 	ldw	r2,0(r4)
  1082f8:	28c00017 	ldw	r3,0(r5)
  1082fc:	10c0141e 	bne	r2,r3,108350 <strcmp+0x68>
  108300:	027fbff4 	movhi	r9,65279
  108304:	4a7fbfc4 	addi	r9,r9,-257
  108308:	0086303a 	nor	r3,zero,r2
  10830c:	02202074 	movhi	r8,32897
  108310:	1245883a 	add	r2,r2,r9
  108314:	42202004 	addi	r8,r8,-32640
  108318:	10c4703a 	and	r2,r2,r3
  10831c:	1204703a 	and	r2,r2,r8
  108320:	10000226 	beq	r2,zero,10832c <strcmp+0x44>
  108324:	00002306 	br	1083b4 <strcmp+0xcc>
  108328:	1000221e 	bne	r2,zero,1083b4 <strcmp+0xcc>
  10832c:	21000104 	addi	r4,r4,4
  108330:	20c00017 	ldw	r3,0(r4)
  108334:	29400104 	addi	r5,r5,4
  108338:	29800017 	ldw	r6,0(r5)
  10833c:	1a4f883a 	add	r7,r3,r9
  108340:	00c4303a 	nor	r2,zero,r3
  108344:	3884703a 	and	r2,r7,r2
  108348:	1204703a 	and	r2,r2,r8
  10834c:	19bff626 	beq	r3,r6,108328 <__alt_data_end+0xfff08328>
  108350:	20800003 	ldbu	r2,0(r4)
  108354:	10c03fcc 	andi	r3,r2,255
  108358:	18c0201c 	xori	r3,r3,128
  10835c:	18ffe004 	addi	r3,r3,-128
  108360:	18000c26 	beq	r3,zero,108394 <strcmp+0xac>
  108364:	29800007 	ldb	r6,0(r5)
  108368:	19800326 	beq	r3,r6,108378 <strcmp+0x90>
  10836c:	00001306 	br	1083bc <strcmp+0xd4>
  108370:	29800007 	ldb	r6,0(r5)
  108374:	11800b1e 	bne	r2,r6,1083a4 <strcmp+0xbc>
  108378:	21000044 	addi	r4,r4,1
  10837c:	20c00003 	ldbu	r3,0(r4)
  108380:	29400044 	addi	r5,r5,1
  108384:	18803fcc 	andi	r2,r3,255
  108388:	1080201c 	xori	r2,r2,128
  10838c:	10bfe004 	addi	r2,r2,-128
  108390:	103ff71e 	bne	r2,zero,108370 <__alt_data_end+0xfff08370>
  108394:	0007883a 	mov	r3,zero
  108398:	28800003 	ldbu	r2,0(r5)
  10839c:	1885c83a 	sub	r2,r3,r2
  1083a0:	f800283a 	ret
  1083a4:	28800003 	ldbu	r2,0(r5)
  1083a8:	18c03fcc 	andi	r3,r3,255
  1083ac:	1885c83a 	sub	r2,r3,r2
  1083b0:	f800283a 	ret
  1083b4:	0005883a 	mov	r2,zero
  1083b8:	f800283a 	ret
  1083bc:	10c03fcc 	andi	r3,r2,255
  1083c0:	003ff506 	br	108398 <__alt_data_end+0xfff08398>

001083c4 <strlen>:
  1083c4:	208000cc 	andi	r2,r4,3
  1083c8:	10002026 	beq	r2,zero,10844c <strlen+0x88>
  1083cc:	20800007 	ldb	r2,0(r4)
  1083d0:	10002026 	beq	r2,zero,108454 <strlen+0x90>
  1083d4:	2005883a 	mov	r2,r4
  1083d8:	00000206 	br	1083e4 <strlen+0x20>
  1083dc:	10c00007 	ldb	r3,0(r2)
  1083e0:	18001826 	beq	r3,zero,108444 <strlen+0x80>
  1083e4:	10800044 	addi	r2,r2,1
  1083e8:	10c000cc 	andi	r3,r2,3
  1083ec:	183ffb1e 	bne	r3,zero,1083dc <__alt_data_end+0xfff083dc>
  1083f0:	10c00017 	ldw	r3,0(r2)
  1083f4:	01ffbff4 	movhi	r7,65279
  1083f8:	39ffbfc4 	addi	r7,r7,-257
  1083fc:	00ca303a 	nor	r5,zero,r3
  108400:	01a02074 	movhi	r6,32897
  108404:	19c7883a 	add	r3,r3,r7
  108408:	31a02004 	addi	r6,r6,-32640
  10840c:	1946703a 	and	r3,r3,r5
  108410:	1986703a 	and	r3,r3,r6
  108414:	1800091e 	bne	r3,zero,10843c <strlen+0x78>
  108418:	10800104 	addi	r2,r2,4
  10841c:	10c00017 	ldw	r3,0(r2)
  108420:	19cb883a 	add	r5,r3,r7
  108424:	00c6303a 	nor	r3,zero,r3
  108428:	28c6703a 	and	r3,r5,r3
  10842c:	1986703a 	and	r3,r3,r6
  108430:	183ff926 	beq	r3,zero,108418 <__alt_data_end+0xfff08418>
  108434:	00000106 	br	10843c <strlen+0x78>
  108438:	10800044 	addi	r2,r2,1
  10843c:	10c00007 	ldb	r3,0(r2)
  108440:	183ffd1e 	bne	r3,zero,108438 <__alt_data_end+0xfff08438>
  108444:	1105c83a 	sub	r2,r2,r4
  108448:	f800283a 	ret
  10844c:	2005883a 	mov	r2,r4
  108450:	003fe706 	br	1083f0 <__alt_data_end+0xfff083f0>
  108454:	0005883a 	mov	r2,zero
  108458:	f800283a 	ret

0010845c <__sprint_r.part.0>:
  10845c:	28801917 	ldw	r2,100(r5)
  108460:	defff604 	addi	sp,sp,-40
  108464:	dd400515 	stw	r21,20(sp)
  108468:	dfc00915 	stw	ra,36(sp)
  10846c:	df000815 	stw	fp,32(sp)
  108470:	ddc00715 	stw	r23,28(sp)
  108474:	dd800615 	stw	r22,24(sp)
  108478:	dd000415 	stw	r20,16(sp)
  10847c:	dcc00315 	stw	r19,12(sp)
  108480:	dc800215 	stw	r18,8(sp)
  108484:	dc400115 	stw	r17,4(sp)
  108488:	dc000015 	stw	r16,0(sp)
  10848c:	1088000c 	andi	r2,r2,8192
  108490:	302b883a 	mov	r21,r6
  108494:	10002e26 	beq	r2,zero,108550 <__sprint_r.part.0+0xf4>
  108498:	30800217 	ldw	r2,8(r6)
  10849c:	35800017 	ldw	r22,0(r6)
  1084a0:	10002926 	beq	r2,zero,108548 <__sprint_r.part.0+0xec>
  1084a4:	2827883a 	mov	r19,r5
  1084a8:	2029883a 	mov	r20,r4
  1084ac:	b5c00104 	addi	r23,r22,4
  1084b0:	04bfffc4 	movi	r18,-1
  1084b4:	bc400017 	ldw	r17,0(r23)
  1084b8:	b4000017 	ldw	r16,0(r22)
  1084bc:	0039883a 	mov	fp,zero
  1084c0:	8822d0ba 	srli	r17,r17,2
  1084c4:	8800031e 	bne	r17,zero,1084d4 <__sprint_r.part.0+0x78>
  1084c8:	00001806 	br	10852c <__sprint_r.part.0+0xd0>
  1084cc:	84000104 	addi	r16,r16,4
  1084d0:	8f001526 	beq	r17,fp,108528 <__sprint_r.part.0+0xcc>
  1084d4:	81400017 	ldw	r5,0(r16)
  1084d8:	980d883a 	mov	r6,r19
  1084dc:	a009883a 	mov	r4,r20
  1084e0:	0109e840 	call	109e84 <_fputwc_r>
  1084e4:	e7000044 	addi	fp,fp,1
  1084e8:	14bff81e 	bne	r2,r18,1084cc <__alt_data_end+0xfff084cc>
  1084ec:	9005883a 	mov	r2,r18
  1084f0:	a8000215 	stw	zero,8(r21)
  1084f4:	a8000115 	stw	zero,4(r21)
  1084f8:	dfc00917 	ldw	ra,36(sp)
  1084fc:	df000817 	ldw	fp,32(sp)
  108500:	ddc00717 	ldw	r23,28(sp)
  108504:	dd800617 	ldw	r22,24(sp)
  108508:	dd400517 	ldw	r21,20(sp)
  10850c:	dd000417 	ldw	r20,16(sp)
  108510:	dcc00317 	ldw	r19,12(sp)
  108514:	dc800217 	ldw	r18,8(sp)
  108518:	dc400117 	ldw	r17,4(sp)
  10851c:	dc000017 	ldw	r16,0(sp)
  108520:	dec00a04 	addi	sp,sp,40
  108524:	f800283a 	ret
  108528:	a8800217 	ldw	r2,8(r21)
  10852c:	8c63883a 	add	r17,r17,r17
  108530:	8c63883a 	add	r17,r17,r17
  108534:	1445c83a 	sub	r2,r2,r17
  108538:	a8800215 	stw	r2,8(r21)
  10853c:	b5800204 	addi	r22,r22,8
  108540:	bdc00204 	addi	r23,r23,8
  108544:	103fdb1e 	bne	r2,zero,1084b4 <__alt_data_end+0xfff084b4>
  108548:	0005883a 	mov	r2,zero
  10854c:	003fe806 	br	1084f0 <__alt_data_end+0xfff084f0>
  108550:	0109f840 	call	109f84 <__sfvwrite_r>
  108554:	003fe606 	br	1084f0 <__alt_data_end+0xfff084f0>

00108558 <__sprint_r>:
  108558:	30c00217 	ldw	r3,8(r6)
  10855c:	18000126 	beq	r3,zero,108564 <__sprint_r+0xc>
  108560:	010845c1 	jmpi	10845c <__sprint_r.part.0>
  108564:	30000115 	stw	zero,4(r6)
  108568:	0005883a 	mov	r2,zero
  10856c:	f800283a 	ret

00108570 <___vfiprintf_internal_r>:
  108570:	deffc904 	addi	sp,sp,-220
  108574:	df003515 	stw	fp,212(sp)
  108578:	dd003115 	stw	r20,196(sp)
  10857c:	dfc03615 	stw	ra,216(sp)
  108580:	ddc03415 	stw	r23,208(sp)
  108584:	dd803315 	stw	r22,204(sp)
  108588:	dd403215 	stw	r21,200(sp)
  10858c:	dcc03015 	stw	r19,192(sp)
  108590:	dc802f15 	stw	r18,188(sp)
  108594:	dc402e15 	stw	r17,184(sp)
  108598:	dc002d15 	stw	r16,180(sp)
  10859c:	d9002015 	stw	r4,128(sp)
  1085a0:	d9c02215 	stw	r7,136(sp)
  1085a4:	2829883a 	mov	r20,r5
  1085a8:	3039883a 	mov	fp,r6
  1085ac:	20000226 	beq	r4,zero,1085b8 <___vfiprintf_internal_r+0x48>
  1085b0:	20800e17 	ldw	r2,56(r4)
  1085b4:	1000cf26 	beq	r2,zero,1088f4 <___vfiprintf_internal_r+0x384>
  1085b8:	a080030b 	ldhu	r2,12(r20)
  1085bc:	10c8000c 	andi	r3,r2,8192
  1085c0:	1800061e 	bne	r3,zero,1085dc <___vfiprintf_internal_r+0x6c>
  1085c4:	a1001917 	ldw	r4,100(r20)
  1085c8:	00f7ffc4 	movi	r3,-8193
  1085cc:	10880014 	ori	r2,r2,8192
  1085d0:	20c6703a 	and	r3,r4,r3
  1085d4:	a080030d 	sth	r2,12(r20)
  1085d8:	a0c01915 	stw	r3,100(r20)
  1085dc:	10c0020c 	andi	r3,r2,8
  1085e0:	1800a926 	beq	r3,zero,108888 <___vfiprintf_internal_r+0x318>
  1085e4:	a0c00417 	ldw	r3,16(r20)
  1085e8:	1800a726 	beq	r3,zero,108888 <___vfiprintf_internal_r+0x318>
  1085ec:	1080068c 	andi	r2,r2,26
  1085f0:	00c00284 	movi	r3,10
  1085f4:	10c0ac26 	beq	r2,r3,1088a8 <___vfiprintf_internal_r+0x338>
  1085f8:	da801a04 	addi	r10,sp,104
  1085fc:	da801e15 	stw	r10,120(sp)
  108600:	d8801e17 	ldw	r2,120(sp)
  108604:	da8019c4 	addi	r10,sp,103
  108608:	05800474 	movhi	r22,17
  10860c:	05c00474 	movhi	r23,17
  108610:	da801f15 	stw	r10,124(sp)
  108614:	1295c83a 	sub	r10,r2,r10
  108618:	b581a404 	addi	r22,r22,1680
  10861c:	bdc1a004 	addi	r23,r23,1664
  108620:	dec01a15 	stw	sp,104(sp)
  108624:	d8001c15 	stw	zero,112(sp)
  108628:	d8001b15 	stw	zero,108(sp)
  10862c:	d8002615 	stw	zero,152(sp)
  108630:	d8002315 	stw	zero,140(sp)
  108634:	da802715 	stw	r10,156(sp)
  108638:	d811883a 	mov	r8,sp
  10863c:	dd002115 	stw	r20,132(sp)
  108640:	e021883a 	mov	r16,fp
  108644:	80800007 	ldb	r2,0(r16)
  108648:	1003ea26 	beq	r2,zero,1095f4 <___vfiprintf_internal_r+0x1084>
  10864c:	00c00944 	movi	r3,37
  108650:	8025883a 	mov	r18,r16
  108654:	10c0021e 	bne	r2,r3,108660 <___vfiprintf_internal_r+0xf0>
  108658:	00001606 	br	1086b4 <___vfiprintf_internal_r+0x144>
  10865c:	10c00326 	beq	r2,r3,10866c <___vfiprintf_internal_r+0xfc>
  108660:	94800044 	addi	r18,r18,1
  108664:	90800007 	ldb	r2,0(r18)
  108668:	103ffc1e 	bne	r2,zero,10865c <__alt_data_end+0xfff0865c>
  10866c:	9423c83a 	sub	r17,r18,r16
  108670:	88001026 	beq	r17,zero,1086b4 <___vfiprintf_internal_r+0x144>
  108674:	d8c01c17 	ldw	r3,112(sp)
  108678:	d8801b17 	ldw	r2,108(sp)
  10867c:	44000015 	stw	r16,0(r8)
  108680:	88c7883a 	add	r3,r17,r3
  108684:	10800044 	addi	r2,r2,1
  108688:	44400115 	stw	r17,4(r8)
  10868c:	d8c01c15 	stw	r3,112(sp)
  108690:	d8801b15 	stw	r2,108(sp)
  108694:	010001c4 	movi	r4,7
  108698:	2080760e 	bge	r4,r2,108874 <___vfiprintf_internal_r+0x304>
  10869c:	1803821e 	bne	r3,zero,1094a8 <___vfiprintf_internal_r+0xf38>
  1086a0:	da802317 	ldw	r10,140(sp)
  1086a4:	d8001b15 	stw	zero,108(sp)
  1086a8:	d811883a 	mov	r8,sp
  1086ac:	5455883a 	add	r10,r10,r17
  1086b0:	da802315 	stw	r10,140(sp)
  1086b4:	90800007 	ldb	r2,0(r18)
  1086b8:	10044626 	beq	r2,zero,1097d4 <___vfiprintf_internal_r+0x1264>
  1086bc:	90c00047 	ldb	r3,1(r18)
  1086c0:	94000044 	addi	r16,r18,1
  1086c4:	d8001d85 	stb	zero,118(sp)
  1086c8:	0009883a 	mov	r4,zero
  1086cc:	000f883a 	mov	r7,zero
  1086d0:	027fffc4 	movi	r9,-1
  1086d4:	0023883a 	mov	r17,zero
  1086d8:	0029883a 	mov	r20,zero
  1086dc:	01401604 	movi	r5,88
  1086e0:	01800244 	movi	r6,9
  1086e4:	03400a84 	movi	r13,42
  1086e8:	03001b04 	movi	r12,108
  1086ec:	84000044 	addi	r16,r16,1
  1086f0:	18bff804 	addi	r2,r3,-32
  1086f4:	28827336 	bltu	r5,r2,1090c4 <___vfiprintf_internal_r+0xb54>
  1086f8:	100490ba 	slli	r2,r2,2
  1086fc:	02800474 	movhi	r10,17
  108700:	52a1c404 	addi	r10,r10,-30960
  108704:	1285883a 	add	r2,r2,r10
  108708:	10800017 	ldw	r2,0(r2)
  10870c:	1000683a 	jmp	r2
  108710:	00108df8 	rdprs	zero,zero,16951
  108714:	001090c4 	movi	zero,16963
  108718:	001090c4 	movi	zero,16963
  10871c:	00108e18 	cmpnei	zero,zero,16952
  108720:	001090c4 	movi	zero,16963
  108724:	001090c4 	movi	zero,16963
  108728:	001090c4 	movi	zero,16963
  10872c:	001090c4 	movi	zero,16963
  108730:	001090c4 	movi	zero,16963
  108734:	001090c4 	movi	zero,16963
  108738:	00109000 	call	10900 <__alt_mem_onchip_memory2-0xef700>
  10873c:	0010901c 	xori	zero,zero,16960
  108740:	001090c4 	movi	zero,16963
  108744:	00108904 	movi	zero,16932
  108748:	0010902c 	andhi	zero,zero,16960
  10874c:	001090c4 	movi	zero,16963
  108750:	00108e24 	muli	zero,zero,16952
  108754:	00108e30 	cmpltui	zero,zero,16952
  108758:	00108e30 	cmpltui	zero,zero,16952
  10875c:	00108e30 	cmpltui	zero,zero,16952
  108760:	00108e30 	cmpltui	zero,zero,16952
  108764:	00108e30 	cmpltui	zero,zero,16952
  108768:	00108e30 	cmpltui	zero,zero,16952
  10876c:	00108e30 	cmpltui	zero,zero,16952
  108770:	00108e30 	cmpltui	zero,zero,16952
  108774:	00108e30 	cmpltui	zero,zero,16952
  108778:	001090c4 	movi	zero,16963
  10877c:	001090c4 	movi	zero,16963
  108780:	001090c4 	movi	zero,16963
  108784:	001090c4 	movi	zero,16963
  108788:	001090c4 	movi	zero,16963
  10878c:	001090c4 	movi	zero,16963
  108790:	001090c4 	movi	zero,16963
  108794:	001090c4 	movi	zero,16963
  108798:	001090c4 	movi	zero,16963
  10879c:	001090c4 	movi	zero,16963
  1087a0:	00108e5c 	xori	zero,zero,16953
  1087a4:	001090c4 	movi	zero,16963
  1087a8:	001090c4 	movi	zero,16963
  1087ac:	001090c4 	movi	zero,16963
  1087b0:	001090c4 	movi	zero,16963
  1087b4:	001090c4 	movi	zero,16963
  1087b8:	001090c4 	movi	zero,16963
  1087bc:	001090c4 	movi	zero,16963
  1087c0:	001090c4 	movi	zero,16963
  1087c4:	001090c4 	movi	zero,16963
  1087c8:	001090c4 	movi	zero,16963
  1087cc:	00108e94 	movui	zero,16954
  1087d0:	001090c4 	movi	zero,16963
  1087d4:	001090c4 	movi	zero,16963
  1087d8:	001090c4 	movi	zero,16963
  1087dc:	001090c4 	movi	zero,16963
  1087e0:	001090c4 	movi	zero,16963
  1087e4:	00108eec 	andhi	zero,zero,16955
  1087e8:	001090c4 	movi	zero,16963
  1087ec:	001090c4 	movi	zero,16963
  1087f0:	00108f5c 	xori	zero,zero,16957
  1087f4:	001090c4 	movi	zero,16963
  1087f8:	001090c4 	movi	zero,16963
  1087fc:	001090c4 	movi	zero,16963
  108800:	001090c4 	movi	zero,16963
  108804:	001090c4 	movi	zero,16963
  108808:	001090c4 	movi	zero,16963
  10880c:	001090c4 	movi	zero,16963
  108810:	001090c4 	movi	zero,16963
  108814:	001090c4 	movi	zero,16963
  108818:	001090c4 	movi	zero,16963
  10881c:	00108d08 	cmpgei	zero,zero,16948
  108820:	00108d34 	movhi	zero,16948
  108824:	001090c4 	movi	zero,16963
  108828:	001090c4 	movi	zero,16963
  10882c:	001090c4 	movi	zero,16963
  108830:	0010906c 	andhi	zero,zero,16961
  108834:	00108d34 	movhi	zero,16948
  108838:	001090c4 	movi	zero,16963
  10883c:	001090c4 	movi	zero,16963
  108840:	00108bc8 	cmpgei	zero,zero,16943
  108844:	001090c4 	movi	zero,16963
  108848:	00108bd8 	cmpnei	zero,zero,16943
  10884c:	00108c14 	movui	zero,16944
  108850:	00108910 	cmplti	zero,zero,16932
  108854:	00108bbc 	xorhi	zero,zero,16942
  108858:	001090c4 	movi	zero,16963
  10885c:	00108f98 	cmpnei	zero,zero,16958
  108860:	001090c4 	movi	zero,16963
  108864:	00108ff0 	cmpltui	zero,zero,16959
  108868:	001090c4 	movi	zero,16963
  10886c:	001090c4 	movi	zero,16963
  108870:	00108cb4 	movhi	zero,16946
  108874:	42000204 	addi	r8,r8,8
  108878:	da802317 	ldw	r10,140(sp)
  10887c:	5455883a 	add	r10,r10,r17
  108880:	da802315 	stw	r10,140(sp)
  108884:	003f8b06 	br	1086b4 <__alt_data_end+0xfff086b4>
  108888:	d9002017 	ldw	r4,128(sp)
  10888c:	a00b883a 	mov	r5,r20
  108890:	0103d100 	call	103d10 <__swsetup_r>
  108894:	1003b11e 	bne	r2,zero,10975c <___vfiprintf_internal_r+0x11ec>
  108898:	a080030b 	ldhu	r2,12(r20)
  10889c:	00c00284 	movi	r3,10
  1088a0:	1080068c 	andi	r2,r2,26
  1088a4:	10ff541e 	bne	r2,r3,1085f8 <__alt_data_end+0xfff085f8>
  1088a8:	a080038f 	ldh	r2,14(r20)
  1088ac:	103f5216 	blt	r2,zero,1085f8 <__alt_data_end+0xfff085f8>
  1088b0:	d9c02217 	ldw	r7,136(sp)
  1088b4:	d9002017 	ldw	r4,128(sp)
  1088b8:	e00d883a 	mov	r6,fp
  1088bc:	a00b883a 	mov	r5,r20
  1088c0:	01099e80 	call	1099e8 <__sbprintf>
  1088c4:	dfc03617 	ldw	ra,216(sp)
  1088c8:	df003517 	ldw	fp,212(sp)
  1088cc:	ddc03417 	ldw	r23,208(sp)
  1088d0:	dd803317 	ldw	r22,204(sp)
  1088d4:	dd403217 	ldw	r21,200(sp)
  1088d8:	dd003117 	ldw	r20,196(sp)
  1088dc:	dcc03017 	ldw	r19,192(sp)
  1088e0:	dc802f17 	ldw	r18,188(sp)
  1088e4:	dc402e17 	ldw	r17,184(sp)
  1088e8:	dc002d17 	ldw	r16,180(sp)
  1088ec:	dec03704 	addi	sp,sp,220
  1088f0:	f800283a 	ret
  1088f4:	0105ce40 	call	105ce4 <__sinit>
  1088f8:	003f2f06 	br	1085b8 <__alt_data_end+0xfff085b8>
  1088fc:	0463c83a 	sub	r17,zero,r17
  108900:	d8802215 	stw	r2,136(sp)
  108904:	a5000114 	ori	r20,r20,4
  108908:	80c00007 	ldb	r3,0(r16)
  10890c:	003f7706 	br	1086ec <__alt_data_end+0xfff086ec>
  108910:	00800c04 	movi	r2,48
  108914:	da802217 	ldw	r10,136(sp)
  108918:	d8801d05 	stb	r2,116(sp)
  10891c:	00801e04 	movi	r2,120
  108920:	d8801d45 	stb	r2,117(sp)
  108924:	d8001d85 	stb	zero,118(sp)
  108928:	50c00104 	addi	r3,r10,4
  10892c:	54800017 	ldw	r18,0(r10)
  108930:	0027883a 	mov	r19,zero
  108934:	a0800094 	ori	r2,r20,2
  108938:	48030b16 	blt	r9,zero,109568 <___vfiprintf_internal_r+0xff8>
  10893c:	00bfdfc4 	movi	r2,-129
  108940:	a096703a 	and	r11,r20,r2
  108944:	d8c02215 	stw	r3,136(sp)
  108948:	5d000094 	ori	r20,r11,2
  10894c:	90032b1e 	bne	r18,zero,1095fc <___vfiprintf_internal_r+0x108c>
  108950:	00800474 	movhi	r2,17
  108954:	10813f04 	addi	r2,r2,1276
  108958:	d8802615 	stw	r2,152(sp)
  10895c:	0039883a 	mov	fp,zero
  108960:	48017b1e 	bne	r9,zero,108f50 <___vfiprintf_internal_r+0x9e0>
  108964:	0013883a 	mov	r9,zero
  108968:	0027883a 	mov	r19,zero
  10896c:	dd401a04 	addi	r21,sp,104
  108970:	4825883a 	mov	r18,r9
  108974:	4cc0010e 	bge	r9,r19,10897c <___vfiprintf_internal_r+0x40c>
  108978:	9825883a 	mov	r18,r19
  10897c:	e7003fcc 	andi	fp,fp,255
  108980:	e700201c 	xori	fp,fp,128
  108984:	e73fe004 	addi	fp,fp,-128
  108988:	e0000126 	beq	fp,zero,108990 <___vfiprintf_internal_r+0x420>
  10898c:	94800044 	addi	r18,r18,1
  108990:	a380008c 	andi	r14,r20,2
  108994:	70000126 	beq	r14,zero,10899c <___vfiprintf_internal_r+0x42c>
  108998:	94800084 	addi	r18,r18,2
  10899c:	a700210c 	andi	fp,r20,132
  1089a0:	e001df1e 	bne	fp,zero,109120 <___vfiprintf_internal_r+0xbb0>
  1089a4:	8c87c83a 	sub	r3,r17,r18
  1089a8:	00c1dd0e 	bge	zero,r3,109120 <___vfiprintf_internal_r+0xbb0>
  1089ac:	01c00404 	movi	r7,16
  1089b0:	d8801c17 	ldw	r2,112(sp)
  1089b4:	38c3ad0e 	bge	r7,r3,10986c <___vfiprintf_internal_r+0x12fc>
  1089b8:	02800474 	movhi	r10,17
  1089bc:	5281a404 	addi	r10,r10,1680
  1089c0:	dc002915 	stw	r16,164(sp)
  1089c4:	d9801b17 	ldw	r6,108(sp)
  1089c8:	da802415 	stw	r10,144(sp)
  1089cc:	03c001c4 	movi	r15,7
  1089d0:	da402515 	stw	r9,148(sp)
  1089d4:	db802815 	stw	r14,160(sp)
  1089d8:	1821883a 	mov	r16,r3
  1089dc:	00000506 	br	1089f4 <___vfiprintf_internal_r+0x484>
  1089e0:	31400084 	addi	r5,r6,2
  1089e4:	42000204 	addi	r8,r8,8
  1089e8:	200d883a 	mov	r6,r4
  1089ec:	843ffc04 	addi	r16,r16,-16
  1089f0:	3c000d0e 	bge	r7,r16,108a28 <___vfiprintf_internal_r+0x4b8>
  1089f4:	10800404 	addi	r2,r2,16
  1089f8:	31000044 	addi	r4,r6,1
  1089fc:	45800015 	stw	r22,0(r8)
  108a00:	41c00115 	stw	r7,4(r8)
  108a04:	d8801c15 	stw	r2,112(sp)
  108a08:	d9001b15 	stw	r4,108(sp)
  108a0c:	793ff40e 	bge	r15,r4,1089e0 <__alt_data_end+0xfff089e0>
  108a10:	1001b51e 	bne	r2,zero,1090e8 <___vfiprintf_internal_r+0xb78>
  108a14:	843ffc04 	addi	r16,r16,-16
  108a18:	000d883a 	mov	r6,zero
  108a1c:	01400044 	movi	r5,1
  108a20:	d811883a 	mov	r8,sp
  108a24:	3c3ff316 	blt	r7,r16,1089f4 <__alt_data_end+0xfff089f4>
  108a28:	8007883a 	mov	r3,r16
  108a2c:	da402517 	ldw	r9,148(sp)
  108a30:	db802817 	ldw	r14,160(sp)
  108a34:	dc002917 	ldw	r16,164(sp)
  108a38:	da802417 	ldw	r10,144(sp)
  108a3c:	1885883a 	add	r2,r3,r2
  108a40:	40c00115 	stw	r3,4(r8)
  108a44:	42800015 	stw	r10,0(r8)
  108a48:	d8801c15 	stw	r2,112(sp)
  108a4c:	d9401b15 	stw	r5,108(sp)
  108a50:	00c001c4 	movi	r3,7
  108a54:	19426016 	blt	r3,r5,1093d8 <___vfiprintf_internal_r+0xe68>
  108a58:	d8c01d87 	ldb	r3,118(sp)
  108a5c:	42000204 	addi	r8,r8,8
  108a60:	29000044 	addi	r4,r5,1
  108a64:	1801b31e 	bne	r3,zero,109134 <___vfiprintf_internal_r+0xbc4>
  108a68:	7001c026 	beq	r14,zero,10916c <___vfiprintf_internal_r+0xbfc>
  108a6c:	d8c01d04 	addi	r3,sp,116
  108a70:	10800084 	addi	r2,r2,2
  108a74:	40c00015 	stw	r3,0(r8)
  108a78:	00c00084 	movi	r3,2
  108a7c:	40c00115 	stw	r3,4(r8)
  108a80:	d8801c15 	stw	r2,112(sp)
  108a84:	d9001b15 	stw	r4,108(sp)
  108a88:	00c001c4 	movi	r3,7
  108a8c:	1902650e 	bge	r3,r4,109424 <___vfiprintf_internal_r+0xeb4>
  108a90:	10029a1e 	bne	r2,zero,1094fc <___vfiprintf_internal_r+0xf8c>
  108a94:	00c02004 	movi	r3,128
  108a98:	01000044 	movi	r4,1
  108a9c:	000b883a 	mov	r5,zero
  108aa0:	d811883a 	mov	r8,sp
  108aa4:	e0c1b31e 	bne	fp,r3,109174 <___vfiprintf_internal_r+0xc04>
  108aa8:	8cb9c83a 	sub	fp,r17,r18
  108aac:	0701b10e 	bge	zero,fp,109174 <___vfiprintf_internal_r+0xc04>
  108ab0:	01c00404 	movi	r7,16
  108ab4:	3f03890e 	bge	r7,fp,1098dc <___vfiprintf_internal_r+0x136c>
  108ab8:	00c00474 	movhi	r3,17
  108abc:	18c1a004 	addi	r3,r3,1664
  108ac0:	d8c02415 	stw	r3,144(sp)
  108ac4:	8007883a 	mov	r3,r16
  108ac8:	034001c4 	movi	r13,7
  108acc:	e021883a 	mov	r16,fp
  108ad0:	da402515 	stw	r9,148(sp)
  108ad4:	1839883a 	mov	fp,r3
  108ad8:	00000506 	br	108af0 <___vfiprintf_internal_r+0x580>
  108adc:	29800084 	addi	r6,r5,2
  108ae0:	42000204 	addi	r8,r8,8
  108ae4:	180b883a 	mov	r5,r3
  108ae8:	843ffc04 	addi	r16,r16,-16
  108aec:	3c000d0e 	bge	r7,r16,108b24 <___vfiprintf_internal_r+0x5b4>
  108af0:	10800404 	addi	r2,r2,16
  108af4:	28c00044 	addi	r3,r5,1
  108af8:	45c00015 	stw	r23,0(r8)
  108afc:	41c00115 	stw	r7,4(r8)
  108b00:	d8801c15 	stw	r2,112(sp)
  108b04:	d8c01b15 	stw	r3,108(sp)
  108b08:	68fff40e 	bge	r13,r3,108adc <__alt_data_end+0xfff08adc>
  108b0c:	1002241e 	bne	r2,zero,1093a0 <___vfiprintf_internal_r+0xe30>
  108b10:	843ffc04 	addi	r16,r16,-16
  108b14:	01800044 	movi	r6,1
  108b18:	000b883a 	mov	r5,zero
  108b1c:	d811883a 	mov	r8,sp
  108b20:	3c3ff316 	blt	r7,r16,108af0 <__alt_data_end+0xfff08af0>
  108b24:	da402517 	ldw	r9,148(sp)
  108b28:	e007883a 	mov	r3,fp
  108b2c:	8039883a 	mov	fp,r16
  108b30:	1821883a 	mov	r16,r3
  108b34:	d8c02417 	ldw	r3,144(sp)
  108b38:	1705883a 	add	r2,r2,fp
  108b3c:	47000115 	stw	fp,4(r8)
  108b40:	40c00015 	stw	r3,0(r8)
  108b44:	d8801c15 	stw	r2,112(sp)
  108b48:	d9801b15 	stw	r6,108(sp)
  108b4c:	00c001c4 	movi	r3,7
  108b50:	19827616 	blt	r3,r6,10952c <___vfiprintf_internal_r+0xfbc>
  108b54:	4cf9c83a 	sub	fp,r9,r19
  108b58:	42000204 	addi	r8,r8,8
  108b5c:	31000044 	addi	r4,r6,1
  108b60:	300b883a 	mov	r5,r6
  108b64:	07018516 	blt	zero,fp,10917c <___vfiprintf_internal_r+0xc0c>
  108b68:	9885883a 	add	r2,r19,r2
  108b6c:	45400015 	stw	r21,0(r8)
  108b70:	44c00115 	stw	r19,4(r8)
  108b74:	d8801c15 	stw	r2,112(sp)
  108b78:	d9001b15 	stw	r4,108(sp)
  108b7c:	00c001c4 	movi	r3,7
  108b80:	1901dd0e 	bge	r3,r4,1092f8 <___vfiprintf_internal_r+0xd88>
  108b84:	1002401e 	bne	r2,zero,109488 <___vfiprintf_internal_r+0xf18>
  108b88:	d8001b15 	stw	zero,108(sp)
  108b8c:	a2c0010c 	andi	r11,r20,4
  108b90:	58000226 	beq	r11,zero,108b9c <___vfiprintf_internal_r+0x62c>
  108b94:	8ca7c83a 	sub	r19,r17,r18
  108b98:	04c2f216 	blt	zero,r19,109764 <___vfiprintf_internal_r+0x11f4>
  108b9c:	8c80010e 	bge	r17,r18,108ba4 <___vfiprintf_internal_r+0x634>
  108ba0:	9023883a 	mov	r17,r18
  108ba4:	da802317 	ldw	r10,140(sp)
  108ba8:	5455883a 	add	r10,r10,r17
  108bac:	da802315 	stw	r10,140(sp)
  108bb0:	d8001b15 	stw	zero,108(sp)
  108bb4:	d811883a 	mov	r8,sp
  108bb8:	003ea206 	br	108644 <__alt_data_end+0xfff08644>
  108bbc:	a5000814 	ori	r20,r20,32
  108bc0:	80c00007 	ldb	r3,0(r16)
  108bc4:	003ec906 	br	1086ec <__alt_data_end+0xfff086ec>
  108bc8:	80c00007 	ldb	r3,0(r16)
  108bcc:	1b030926 	beq	r3,r12,1097f4 <___vfiprintf_internal_r+0x1284>
  108bd0:	a5000414 	ori	r20,r20,16
  108bd4:	003ec506 	br	1086ec <__alt_data_end+0xfff086ec>
  108bd8:	21003fcc 	andi	r4,r4,255
  108bdc:	20035e1e 	bne	r4,zero,109958 <___vfiprintf_internal_r+0x13e8>
  108be0:	a080080c 	andi	r2,r20,32
  108be4:	1002a526 	beq	r2,zero,10967c <___vfiprintf_internal_r+0x110c>
  108be8:	da802217 	ldw	r10,136(sp)
  108bec:	50800017 	ldw	r2,0(r10)
  108bf0:	da802317 	ldw	r10,140(sp)
  108bf4:	5007d7fa 	srai	r3,r10,31
  108bf8:	da802217 	ldw	r10,136(sp)
  108bfc:	10c00115 	stw	r3,4(r2)
  108c00:	52800104 	addi	r10,r10,4
  108c04:	da802215 	stw	r10,136(sp)
  108c08:	da802317 	ldw	r10,140(sp)
  108c0c:	12800015 	stw	r10,0(r2)
  108c10:	003e8c06 	br	108644 <__alt_data_end+0xfff08644>
  108c14:	21003fcc 	andi	r4,r4,255
  108c18:	2003511e 	bne	r4,zero,109960 <___vfiprintf_internal_r+0x13f0>
  108c1c:	a080080c 	andi	r2,r20,32
  108c20:	1000a126 	beq	r2,zero,108ea8 <___vfiprintf_internal_r+0x938>
  108c24:	da802217 	ldw	r10,136(sp)
  108c28:	d8001d85 	stb	zero,118(sp)
  108c2c:	50800204 	addi	r2,r10,8
  108c30:	54800017 	ldw	r18,0(r10)
  108c34:	54c00117 	ldw	r19,4(r10)
  108c38:	4802b416 	blt	r9,zero,10970c <___vfiprintf_internal_r+0x119c>
  108c3c:	013fdfc4 	movi	r4,-129
  108c40:	94c6b03a 	or	r3,r18,r19
  108c44:	d8802215 	stw	r2,136(sp)
  108c48:	a128703a 	and	r20,r20,r4
  108c4c:	1800a226 	beq	r3,zero,108ed8 <___vfiprintf_internal_r+0x968>
  108c50:	0039883a 	mov	fp,zero
  108c54:	dd401a04 	addi	r21,sp,104
  108c58:	9006d0fa 	srli	r3,r18,3
  108c5c:	9808977a 	slli	r4,r19,29
  108c60:	9826d0fa 	srli	r19,r19,3
  108c64:	948001cc 	andi	r18,r18,7
  108c68:	90800c04 	addi	r2,r18,48
  108c6c:	ad7fffc4 	addi	r21,r21,-1
  108c70:	20e4b03a 	or	r18,r4,r3
  108c74:	a8800005 	stb	r2,0(r21)
  108c78:	94c6b03a 	or	r3,r18,r19
  108c7c:	183ff61e 	bne	r3,zero,108c58 <__alt_data_end+0xfff08c58>
  108c80:	a0c0004c 	andi	r3,r20,1
  108c84:	18005926 	beq	r3,zero,108dec <___vfiprintf_internal_r+0x87c>
  108c88:	10803fcc 	andi	r2,r2,255
  108c8c:	1080201c 	xori	r2,r2,128
  108c90:	10bfe004 	addi	r2,r2,-128
  108c94:	00c00c04 	movi	r3,48
  108c98:	10c05426 	beq	r2,r3,108dec <___vfiprintf_internal_r+0x87c>
  108c9c:	da801e17 	ldw	r10,120(sp)
  108ca0:	a8bfffc4 	addi	r2,r21,-1
  108ca4:	a8ffffc5 	stb	r3,-1(r21)
  108ca8:	50a7c83a 	sub	r19,r10,r2
  108cac:	102b883a 	mov	r21,r2
  108cb0:	003f2f06 	br	108970 <__alt_data_end+0xfff08970>
  108cb4:	21003fcc 	andi	r4,r4,255
  108cb8:	2003421e 	bne	r4,zero,1099c4 <___vfiprintf_internal_r+0x1454>
  108cbc:	00800474 	movhi	r2,17
  108cc0:	10813f04 	addi	r2,r2,1276
  108cc4:	d8802615 	stw	r2,152(sp)
  108cc8:	a080080c 	andi	r2,r20,32
  108ccc:	1000aa26 	beq	r2,zero,108f78 <___vfiprintf_internal_r+0xa08>
  108cd0:	da802217 	ldw	r10,136(sp)
  108cd4:	54800017 	ldw	r18,0(r10)
  108cd8:	54c00117 	ldw	r19,4(r10)
  108cdc:	52800204 	addi	r10,r10,8
  108ce0:	da802215 	stw	r10,136(sp)
  108ce4:	a080004c 	andi	r2,r20,1
  108ce8:	1001d226 	beq	r2,zero,109434 <___vfiprintf_internal_r+0xec4>
  108cec:	94c4b03a 	or	r2,r18,r19
  108cf0:	1002351e 	bne	r2,zero,1095c8 <___vfiprintf_internal_r+0x1058>
  108cf4:	d8001d85 	stb	zero,118(sp)
  108cf8:	48022216 	blt	r9,zero,109584 <___vfiprintf_internal_r+0x1014>
  108cfc:	00bfdfc4 	movi	r2,-129
  108d00:	a0a8703a 	and	r20,r20,r2
  108d04:	003f1506 	br	10895c <__alt_data_end+0xfff0895c>
  108d08:	da802217 	ldw	r10,136(sp)
  108d0c:	04800044 	movi	r18,1
  108d10:	d8001d85 	stb	zero,118(sp)
  108d14:	50800017 	ldw	r2,0(r10)
  108d18:	52800104 	addi	r10,r10,4
  108d1c:	da802215 	stw	r10,136(sp)
  108d20:	d8801005 	stb	r2,64(sp)
  108d24:	9027883a 	mov	r19,r18
  108d28:	dd401004 	addi	r21,sp,64
  108d2c:	0013883a 	mov	r9,zero
  108d30:	003f1706 	br	108990 <__alt_data_end+0xfff08990>
  108d34:	21003fcc 	andi	r4,r4,255
  108d38:	2003201e 	bne	r4,zero,1099bc <___vfiprintf_internal_r+0x144c>
  108d3c:	a080080c 	andi	r2,r20,32
  108d40:	10004b26 	beq	r2,zero,108e70 <___vfiprintf_internal_r+0x900>
  108d44:	da802217 	ldw	r10,136(sp)
  108d48:	50800117 	ldw	r2,4(r10)
  108d4c:	54800017 	ldw	r18,0(r10)
  108d50:	52800204 	addi	r10,r10,8
  108d54:	da802215 	stw	r10,136(sp)
  108d58:	1027883a 	mov	r19,r2
  108d5c:	10022c16 	blt	r2,zero,109610 <___vfiprintf_internal_r+0x10a0>
  108d60:	df001d83 	ldbu	fp,118(sp)
  108d64:	48007216 	blt	r9,zero,108f30 <___vfiprintf_internal_r+0x9c0>
  108d68:	00ffdfc4 	movi	r3,-129
  108d6c:	94c4b03a 	or	r2,r18,r19
  108d70:	a0e8703a 	and	r20,r20,r3
  108d74:	1000cc26 	beq	r2,zero,1090a8 <___vfiprintf_internal_r+0xb38>
  108d78:	98021026 	beq	r19,zero,1095bc <___vfiprintf_internal_r+0x104c>
  108d7c:	dc402415 	stw	r17,144(sp)
  108d80:	dc002515 	stw	r16,148(sp)
  108d84:	9823883a 	mov	r17,r19
  108d88:	9021883a 	mov	r16,r18
  108d8c:	dd401a04 	addi	r21,sp,104
  108d90:	4825883a 	mov	r18,r9
  108d94:	4027883a 	mov	r19,r8
  108d98:	8009883a 	mov	r4,r16
  108d9c:	880b883a 	mov	r5,r17
  108da0:	01800284 	movi	r6,10
  108da4:	000f883a 	mov	r7,zero
  108da8:	010b4cc0 	call	10b4cc <__umoddi3>
  108dac:	10800c04 	addi	r2,r2,48
  108db0:	ad7fffc4 	addi	r21,r21,-1
  108db4:	8009883a 	mov	r4,r16
  108db8:	880b883a 	mov	r5,r17
  108dbc:	a8800005 	stb	r2,0(r21)
  108dc0:	01800284 	movi	r6,10
  108dc4:	000f883a 	mov	r7,zero
  108dc8:	010af540 	call	10af54 <__udivdi3>
  108dcc:	1021883a 	mov	r16,r2
  108dd0:	10c4b03a 	or	r2,r2,r3
  108dd4:	1823883a 	mov	r17,r3
  108dd8:	103fef1e 	bne	r2,zero,108d98 <__alt_data_end+0xfff08d98>
  108ddc:	dc402417 	ldw	r17,144(sp)
  108de0:	dc002517 	ldw	r16,148(sp)
  108de4:	9013883a 	mov	r9,r18
  108de8:	9811883a 	mov	r8,r19
  108dec:	da801e17 	ldw	r10,120(sp)
  108df0:	5567c83a 	sub	r19,r10,r21
  108df4:	003ede06 	br	108970 <__alt_data_end+0xfff08970>
  108df8:	38803fcc 	andi	r2,r7,255
  108dfc:	1080201c 	xori	r2,r2,128
  108e00:	10bfe004 	addi	r2,r2,-128
  108e04:	1002371e 	bne	r2,zero,1096e4 <___vfiprintf_internal_r+0x1174>
  108e08:	01000044 	movi	r4,1
  108e0c:	01c00804 	movi	r7,32
  108e10:	80c00007 	ldb	r3,0(r16)
  108e14:	003e3506 	br	1086ec <__alt_data_end+0xfff086ec>
  108e18:	a5000054 	ori	r20,r20,1
  108e1c:	80c00007 	ldb	r3,0(r16)
  108e20:	003e3206 	br	1086ec <__alt_data_end+0xfff086ec>
  108e24:	a5002014 	ori	r20,r20,128
  108e28:	80c00007 	ldb	r3,0(r16)
  108e2c:	003e2f06 	br	1086ec <__alt_data_end+0xfff086ec>
  108e30:	8015883a 	mov	r10,r16
  108e34:	0023883a 	mov	r17,zero
  108e38:	18bff404 	addi	r2,r3,-48
  108e3c:	50c00007 	ldb	r3,0(r10)
  108e40:	8c4002a4 	muli	r17,r17,10
  108e44:	84000044 	addi	r16,r16,1
  108e48:	8015883a 	mov	r10,r16
  108e4c:	1463883a 	add	r17,r2,r17
  108e50:	18bff404 	addi	r2,r3,-48
  108e54:	30bff92e 	bgeu	r6,r2,108e3c <__alt_data_end+0xfff08e3c>
  108e58:	003e2506 	br	1086f0 <__alt_data_end+0xfff086f0>
  108e5c:	21003fcc 	andi	r4,r4,255
  108e60:	2002d41e 	bne	r4,zero,1099b4 <___vfiprintf_internal_r+0x1444>
  108e64:	a5000414 	ori	r20,r20,16
  108e68:	a080080c 	andi	r2,r20,32
  108e6c:	103fb51e 	bne	r2,zero,108d44 <__alt_data_end+0xfff08d44>
  108e70:	a080040c 	andi	r2,r20,16
  108e74:	1001f826 	beq	r2,zero,109658 <___vfiprintf_internal_r+0x10e8>
  108e78:	da802217 	ldw	r10,136(sp)
  108e7c:	54800017 	ldw	r18,0(r10)
  108e80:	52800104 	addi	r10,r10,4
  108e84:	da802215 	stw	r10,136(sp)
  108e88:	9027d7fa 	srai	r19,r18,31
  108e8c:	9805883a 	mov	r2,r19
  108e90:	003fb206 	br	108d5c <__alt_data_end+0xfff08d5c>
  108e94:	21003fcc 	andi	r4,r4,255
  108e98:	2002c41e 	bne	r4,zero,1099ac <___vfiprintf_internal_r+0x143c>
  108e9c:	a5000414 	ori	r20,r20,16
  108ea0:	a080080c 	andi	r2,r20,32
  108ea4:	103f5f1e 	bne	r2,zero,108c24 <__alt_data_end+0xfff08c24>
  108ea8:	a080040c 	andi	r2,r20,16
  108eac:	10020f26 	beq	r2,zero,1096ec <___vfiprintf_internal_r+0x117c>
  108eb0:	da802217 	ldw	r10,136(sp)
  108eb4:	d8001d85 	stb	zero,118(sp)
  108eb8:	0027883a 	mov	r19,zero
  108ebc:	50800104 	addi	r2,r10,4
  108ec0:	54800017 	ldw	r18,0(r10)
  108ec4:	48021116 	blt	r9,zero,10970c <___vfiprintf_internal_r+0x119c>
  108ec8:	00ffdfc4 	movi	r3,-129
  108ecc:	d8802215 	stw	r2,136(sp)
  108ed0:	a0e8703a 	and	r20,r20,r3
  108ed4:	903f5e1e 	bne	r18,zero,108c50 <__alt_data_end+0xfff08c50>
  108ed8:	0039883a 	mov	fp,zero
  108edc:	4802a626 	beq	r9,zero,109978 <___vfiprintf_internal_r+0x1408>
  108ee0:	0025883a 	mov	r18,zero
  108ee4:	0027883a 	mov	r19,zero
  108ee8:	003f5a06 	br	108c54 <__alt_data_end+0xfff08c54>
  108eec:	21003fcc 	andi	r4,r4,255
  108ef0:	20029f1e 	bne	r4,zero,109970 <___vfiprintf_internal_r+0x1400>
  108ef4:	a5000414 	ori	r20,r20,16
  108ef8:	a080080c 	andi	r2,r20,32
  108efc:	10005e1e 	bne	r2,zero,109078 <___vfiprintf_internal_r+0xb08>
  108f00:	a080040c 	andi	r2,r20,16
  108f04:	1001a21e 	bne	r2,zero,109590 <___vfiprintf_internal_r+0x1020>
  108f08:	a080100c 	andi	r2,r20,64
  108f0c:	d8001d85 	stb	zero,118(sp)
  108f10:	da802217 	ldw	r10,136(sp)
  108f14:	1002231e 	bne	r2,zero,1097a4 <___vfiprintf_internal_r+0x1234>
  108f18:	50800104 	addi	r2,r10,4
  108f1c:	54800017 	ldw	r18,0(r10)
  108f20:	0027883a 	mov	r19,zero
  108f24:	4801a00e 	bge	r9,zero,1095a8 <___vfiprintf_internal_r+0x1038>
  108f28:	d8802215 	stw	r2,136(sp)
  108f2c:	0039883a 	mov	fp,zero
  108f30:	94c4b03a 	or	r2,r18,r19
  108f34:	103f901e 	bne	r2,zero,108d78 <__alt_data_end+0xfff08d78>
  108f38:	00800044 	movi	r2,1
  108f3c:	10803fcc 	andi	r2,r2,255
  108f40:	00c00044 	movi	r3,1
  108f44:	10c05926 	beq	r2,r3,1090ac <___vfiprintf_internal_r+0xb3c>
  108f48:	00c00084 	movi	r3,2
  108f4c:	10ffe41e 	bne	r2,r3,108ee0 <__alt_data_end+0xfff08ee0>
  108f50:	0025883a 	mov	r18,zero
  108f54:	0027883a 	mov	r19,zero
  108f58:	00013d06 	br	109450 <___vfiprintf_internal_r+0xee0>
  108f5c:	21003fcc 	andi	r4,r4,255
  108f60:	2002811e 	bne	r4,zero,109968 <___vfiprintf_internal_r+0x13f8>
  108f64:	00800474 	movhi	r2,17
  108f68:	10813a04 	addi	r2,r2,1256
  108f6c:	d8802615 	stw	r2,152(sp)
  108f70:	a080080c 	andi	r2,r20,32
  108f74:	103f561e 	bne	r2,zero,108cd0 <__alt_data_end+0xfff08cd0>
  108f78:	a080040c 	andi	r2,r20,16
  108f7c:	1001d126 	beq	r2,zero,1096c4 <___vfiprintf_internal_r+0x1154>
  108f80:	da802217 	ldw	r10,136(sp)
  108f84:	0027883a 	mov	r19,zero
  108f88:	54800017 	ldw	r18,0(r10)
  108f8c:	52800104 	addi	r10,r10,4
  108f90:	da802215 	stw	r10,136(sp)
  108f94:	003f5306 	br	108ce4 <__alt_data_end+0xfff08ce4>
  108f98:	da802217 	ldw	r10,136(sp)
  108f9c:	d8001d85 	stb	zero,118(sp)
  108fa0:	55400017 	ldw	r21,0(r10)
  108fa4:	50c00104 	addi	r3,r10,4
  108fa8:	a8024226 	beq	r21,zero,1098b4 <___vfiprintf_internal_r+0x1344>
  108fac:	48021816 	blt	r9,zero,109810 <___vfiprintf_internal_r+0x12a0>
  108fb0:	480d883a 	mov	r6,r9
  108fb4:	000b883a 	mov	r5,zero
  108fb8:	a809883a 	mov	r4,r21
  108fbc:	d8c02a15 	stw	r3,168(sp)
  108fc0:	da002b15 	stw	r8,172(sp)
  108fc4:	da402c15 	stw	r9,176(sp)
  108fc8:	0106d940 	call	106d94 <memchr>
  108fcc:	d8c02a17 	ldw	r3,168(sp)
  108fd0:	da002b17 	ldw	r8,172(sp)
  108fd4:	da402c17 	ldw	r9,176(sp)
  108fd8:	10024826 	beq	r2,zero,1098fc <___vfiprintf_internal_r+0x138c>
  108fdc:	1567c83a 	sub	r19,r2,r21
  108fe0:	df001d83 	ldbu	fp,118(sp)
  108fe4:	d8c02215 	stw	r3,136(sp)
  108fe8:	0013883a 	mov	r9,zero
  108fec:	003e6006 	br	108970 <__alt_data_end+0xfff08970>
  108ff0:	21003fcc 	andi	r4,r4,255
  108ff4:	203fc026 	beq	r4,zero,108ef8 <__alt_data_end+0xfff08ef8>
  108ff8:	d9c01d85 	stb	r7,118(sp)
  108ffc:	003fbe06 	br	108ef8 <__alt_data_end+0xfff08ef8>
  109000:	da802217 	ldw	r10,136(sp)
  109004:	54400017 	ldw	r17,0(r10)
  109008:	50800104 	addi	r2,r10,4
  10900c:	883e3b16 	blt	r17,zero,1088fc <__alt_data_end+0xfff088fc>
  109010:	d8802215 	stw	r2,136(sp)
  109014:	80c00007 	ldb	r3,0(r16)
  109018:	003db406 	br	1086ec <__alt_data_end+0xfff086ec>
  10901c:	01000044 	movi	r4,1
  109020:	01c00ac4 	movi	r7,43
  109024:	80c00007 	ldb	r3,0(r16)
  109028:	003db006 	br	1086ec <__alt_data_end+0xfff086ec>
  10902c:	80c00007 	ldb	r3,0(r16)
  109030:	82800044 	addi	r10,r16,1
  109034:	1b423c26 	beq	r3,r13,109928 <___vfiprintf_internal_r+0x13b8>
  109038:	18bff404 	addi	r2,r3,-48
  10903c:	0013883a 	mov	r9,zero
  109040:	30822b36 	bltu	r6,r2,1098f0 <___vfiprintf_internal_r+0x1380>
  109044:	50c00007 	ldb	r3,0(r10)
  109048:	4a4002a4 	muli	r9,r9,10
  10904c:	54000044 	addi	r16,r10,1
  109050:	8015883a 	mov	r10,r16
  109054:	4893883a 	add	r9,r9,r2
  109058:	18bff404 	addi	r2,r3,-48
  10905c:	30bff92e 	bgeu	r6,r2,109044 <__alt_data_end+0xfff09044>
  109060:	483da30e 	bge	r9,zero,1086f0 <__alt_data_end+0xfff086f0>
  109064:	027fffc4 	movi	r9,-1
  109068:	003da106 	br	1086f0 <__alt_data_end+0xfff086f0>
  10906c:	a5001014 	ori	r20,r20,64
  109070:	80c00007 	ldb	r3,0(r16)
  109074:	003d9d06 	br	1086ec <__alt_data_end+0xfff086ec>
  109078:	da802217 	ldw	r10,136(sp)
  10907c:	d8001d85 	stb	zero,118(sp)
  109080:	50c00204 	addi	r3,r10,8
  109084:	54800017 	ldw	r18,0(r10)
  109088:	54c00117 	ldw	r19,4(r10)
  10908c:	4801ca16 	blt	r9,zero,1097b8 <___vfiprintf_internal_r+0x1248>
  109090:	013fdfc4 	movi	r4,-129
  109094:	94c4b03a 	or	r2,r18,r19
  109098:	d8c02215 	stw	r3,136(sp)
  10909c:	a128703a 	and	r20,r20,r4
  1090a0:	0039883a 	mov	fp,zero
  1090a4:	103f341e 	bne	r2,zero,108d78 <__alt_data_end+0xfff08d78>
  1090a8:	483e2e26 	beq	r9,zero,108964 <__alt_data_end+0xfff08964>
  1090ac:	0025883a 	mov	r18,zero
  1090b0:	94800c04 	addi	r18,r18,48
  1090b4:	dc8019c5 	stb	r18,103(sp)
  1090b8:	dcc02717 	ldw	r19,156(sp)
  1090bc:	dd4019c4 	addi	r21,sp,103
  1090c0:	003e2b06 	br	108970 <__alt_data_end+0xfff08970>
  1090c4:	21003fcc 	andi	r4,r4,255
  1090c8:	2002361e 	bne	r4,zero,1099a4 <___vfiprintf_internal_r+0x1434>
  1090cc:	1801c126 	beq	r3,zero,1097d4 <___vfiprintf_internal_r+0x1264>
  1090d0:	04800044 	movi	r18,1
  1090d4:	d8c01005 	stb	r3,64(sp)
  1090d8:	d8001d85 	stb	zero,118(sp)
  1090dc:	9027883a 	mov	r19,r18
  1090e0:	dd401004 	addi	r21,sp,64
  1090e4:	003f1106 	br	108d2c <__alt_data_end+0xfff08d2c>
  1090e8:	d9402117 	ldw	r5,132(sp)
  1090ec:	d9002017 	ldw	r4,128(sp)
  1090f0:	d9801a04 	addi	r6,sp,104
  1090f4:	d9c02b15 	stw	r7,172(sp)
  1090f8:	dbc02a15 	stw	r15,168(sp)
  1090fc:	010845c0 	call	10845c <__sprint_r.part.0>
  109100:	d9c02b17 	ldw	r7,172(sp)
  109104:	dbc02a17 	ldw	r15,168(sp)
  109108:	10006d1e 	bne	r2,zero,1092c0 <___vfiprintf_internal_r+0xd50>
  10910c:	d9801b17 	ldw	r6,108(sp)
  109110:	d8801c17 	ldw	r2,112(sp)
  109114:	d811883a 	mov	r8,sp
  109118:	31400044 	addi	r5,r6,1
  10911c:	003e3306 	br	1089ec <__alt_data_end+0xfff089ec>
  109120:	d9401b17 	ldw	r5,108(sp)
  109124:	d8801c17 	ldw	r2,112(sp)
  109128:	29000044 	addi	r4,r5,1
  10912c:	d8c01d87 	ldb	r3,118(sp)
  109130:	183e4d26 	beq	r3,zero,108a68 <__alt_data_end+0xfff08a68>
  109134:	00c00044 	movi	r3,1
  109138:	d9401d84 	addi	r5,sp,118
  10913c:	10c5883a 	add	r2,r2,r3
  109140:	41400015 	stw	r5,0(r8)
  109144:	40c00115 	stw	r3,4(r8)
  109148:	d8801c15 	stw	r2,112(sp)
  10914c:	d9001b15 	stw	r4,108(sp)
  109150:	014001c4 	movi	r5,7
  109154:	2900a90e 	bge	r5,r4,1093fc <___vfiprintf_internal_r+0xe8c>
  109158:	1000da1e 	bne	r2,zero,1094c4 <___vfiprintf_internal_r+0xf54>
  10915c:	7000ab1e 	bne	r14,zero,10940c <___vfiprintf_internal_r+0xe9c>
  109160:	000b883a 	mov	r5,zero
  109164:	1809883a 	mov	r4,r3
  109168:	d811883a 	mov	r8,sp
  10916c:	00c02004 	movi	r3,128
  109170:	e0fe4d26 	beq	fp,r3,108aa8 <__alt_data_end+0xfff08aa8>
  109174:	4cf9c83a 	sub	fp,r9,r19
  109178:	073e7b0e 	bge	zero,fp,108b68 <__alt_data_end+0xfff08b68>
  10917c:	01c00404 	movi	r7,16
  109180:	3f01900e 	bge	r7,fp,1097c4 <___vfiprintf_internal_r+0x1254>
  109184:	00c00474 	movhi	r3,17
  109188:	18c1a004 	addi	r3,r3,1664
  10918c:	d8c02415 	stw	r3,144(sp)
  109190:	034001c4 	movi	r13,7
  109194:	00000506 	br	1091ac <___vfiprintf_internal_r+0xc3c>
  109198:	29000084 	addi	r4,r5,2
  10919c:	42000204 	addi	r8,r8,8
  1091a0:	180b883a 	mov	r5,r3
  1091a4:	e73ffc04 	addi	fp,fp,-16
  1091a8:	3f000d0e 	bge	r7,fp,1091e0 <___vfiprintf_internal_r+0xc70>
  1091ac:	10800404 	addi	r2,r2,16
  1091b0:	28c00044 	addi	r3,r5,1
  1091b4:	45c00015 	stw	r23,0(r8)
  1091b8:	41c00115 	stw	r7,4(r8)
  1091bc:	d8801c15 	stw	r2,112(sp)
  1091c0:	d8c01b15 	stw	r3,108(sp)
  1091c4:	68fff40e 	bge	r13,r3,109198 <__alt_data_end+0xfff09198>
  1091c8:	1000101e 	bne	r2,zero,10920c <___vfiprintf_internal_r+0xc9c>
  1091cc:	e73ffc04 	addi	fp,fp,-16
  1091d0:	01000044 	movi	r4,1
  1091d4:	000b883a 	mov	r5,zero
  1091d8:	d811883a 	mov	r8,sp
  1091dc:	3f3ff316 	blt	r7,fp,1091ac <__alt_data_end+0xfff091ac>
  1091e0:	da802417 	ldw	r10,144(sp)
  1091e4:	1705883a 	add	r2,r2,fp
  1091e8:	47000115 	stw	fp,4(r8)
  1091ec:	42800015 	stw	r10,0(r8)
  1091f0:	d8801c15 	stw	r2,112(sp)
  1091f4:	d9001b15 	stw	r4,108(sp)
  1091f8:	00c001c4 	movi	r3,7
  1091fc:	19003616 	blt	r3,r4,1092d8 <___vfiprintf_internal_r+0xd68>
  109200:	42000204 	addi	r8,r8,8
  109204:	21000044 	addi	r4,r4,1
  109208:	003e5706 	br	108b68 <__alt_data_end+0xfff08b68>
  10920c:	d9402117 	ldw	r5,132(sp)
  109210:	d9002017 	ldw	r4,128(sp)
  109214:	d9801a04 	addi	r6,sp,104
  109218:	d9c02b15 	stw	r7,172(sp)
  10921c:	db402a15 	stw	r13,168(sp)
  109220:	010845c0 	call	10845c <__sprint_r.part.0>
  109224:	d9c02b17 	ldw	r7,172(sp)
  109228:	db402a17 	ldw	r13,168(sp)
  10922c:	1000241e 	bne	r2,zero,1092c0 <___vfiprintf_internal_r+0xd50>
  109230:	d9401b17 	ldw	r5,108(sp)
  109234:	d8801c17 	ldw	r2,112(sp)
  109238:	d811883a 	mov	r8,sp
  10923c:	29000044 	addi	r4,r5,1
  109240:	003fd806 	br	1091a4 <__alt_data_end+0xfff091a4>
  109244:	d9401b17 	ldw	r5,108(sp)
  109248:	00c00474 	movhi	r3,17
  10924c:	18c1a404 	addi	r3,r3,1680
  109250:	d8c02415 	stw	r3,144(sp)
  109254:	29400044 	addi	r5,r5,1
  109258:	d8c02417 	ldw	r3,144(sp)
  10925c:	14c5883a 	add	r2,r2,r19
  109260:	44c00115 	stw	r19,4(r8)
  109264:	40c00015 	stw	r3,0(r8)
  109268:	d8801c15 	stw	r2,112(sp)
  10926c:	d9401b15 	stw	r5,108(sp)
  109270:	00c001c4 	movi	r3,7
  109274:	1940070e 	bge	r3,r5,109294 <___vfiprintf_internal_r+0xd24>
  109278:	103e4826 	beq	r2,zero,108b9c <__alt_data_end+0xfff08b9c>
  10927c:	d9402117 	ldw	r5,132(sp)
  109280:	d9002017 	ldw	r4,128(sp)
  109284:	d9801a04 	addi	r6,sp,104
  109288:	010845c0 	call	10845c <__sprint_r.part.0>
  10928c:	10000c1e 	bne	r2,zero,1092c0 <___vfiprintf_internal_r+0xd50>
  109290:	d8801c17 	ldw	r2,112(sp)
  109294:	8c80010e 	bge	r17,r18,10929c <___vfiprintf_internal_r+0xd2c>
  109298:	9023883a 	mov	r17,r18
  10929c:	da802317 	ldw	r10,140(sp)
  1092a0:	5455883a 	add	r10,r10,r17
  1092a4:	da802315 	stw	r10,140(sp)
  1092a8:	103e4126 	beq	r2,zero,108bb0 <__alt_data_end+0xfff08bb0>
  1092ac:	d9402117 	ldw	r5,132(sp)
  1092b0:	d9002017 	ldw	r4,128(sp)
  1092b4:	d9801a04 	addi	r6,sp,104
  1092b8:	010845c0 	call	10845c <__sprint_r.part.0>
  1092bc:	103e3c26 	beq	r2,zero,108bb0 <__alt_data_end+0xfff08bb0>
  1092c0:	dd002117 	ldw	r20,132(sp)
  1092c4:	a080030b 	ldhu	r2,12(r20)
  1092c8:	1080100c 	andi	r2,r2,64
  1092cc:	1001231e 	bne	r2,zero,10975c <___vfiprintf_internal_r+0x11ec>
  1092d0:	d8802317 	ldw	r2,140(sp)
  1092d4:	003d7b06 	br	1088c4 <__alt_data_end+0xfff088c4>
  1092d8:	1000991e 	bne	r2,zero,109540 <___vfiprintf_internal_r+0xfd0>
  1092dc:	00c00044 	movi	r3,1
  1092e0:	9805883a 	mov	r2,r19
  1092e4:	dd400015 	stw	r21,0(sp)
  1092e8:	dcc00115 	stw	r19,4(sp)
  1092ec:	dcc01c15 	stw	r19,112(sp)
  1092f0:	d8c01b15 	stw	r3,108(sp)
  1092f4:	d811883a 	mov	r8,sp
  1092f8:	42000204 	addi	r8,r8,8
  1092fc:	a2c0010c 	andi	r11,r20,4
  109300:	583fe426 	beq	r11,zero,109294 <__alt_data_end+0xfff09294>
  109304:	8ca7c83a 	sub	r19,r17,r18
  109308:	04ffe20e 	bge	zero,r19,109294 <__alt_data_end+0xfff09294>
  10930c:	01c00404 	movi	r7,16
  109310:	3cffcc0e 	bge	r7,r19,109244 <__alt_data_end+0xfff09244>
  109314:	02800474 	movhi	r10,17
  109318:	5281a404 	addi	r10,r10,1680
  10931c:	d9001b17 	ldw	r4,108(sp)
  109320:	da802415 	stw	r10,144(sp)
  109324:	382b883a 	mov	r21,r7
  109328:	050001c4 	movi	r20,7
  10932c:	df002017 	ldw	fp,128(sp)
  109330:	00000506 	br	109348 <___vfiprintf_internal_r+0xdd8>
  109334:	21400084 	addi	r5,r4,2
  109338:	42000204 	addi	r8,r8,8
  10933c:	1809883a 	mov	r4,r3
  109340:	9cfffc04 	addi	r19,r19,-16
  109344:	acffc40e 	bge	r21,r19,109258 <__alt_data_end+0xfff09258>
  109348:	10800404 	addi	r2,r2,16
  10934c:	20c00044 	addi	r3,r4,1
  109350:	45800015 	stw	r22,0(r8)
  109354:	45400115 	stw	r21,4(r8)
  109358:	d8801c15 	stw	r2,112(sp)
  10935c:	d8c01b15 	stw	r3,108(sp)
  109360:	a0fff40e 	bge	r20,r3,109334 <__alt_data_end+0xfff09334>
  109364:	1000041e 	bne	r2,zero,109378 <___vfiprintf_internal_r+0xe08>
  109368:	01400044 	movi	r5,1
  10936c:	0009883a 	mov	r4,zero
  109370:	d811883a 	mov	r8,sp
  109374:	003ff206 	br	109340 <__alt_data_end+0xfff09340>
  109378:	d9402117 	ldw	r5,132(sp)
  10937c:	d9801a04 	addi	r6,sp,104
  109380:	e009883a 	mov	r4,fp
  109384:	010845c0 	call	10845c <__sprint_r.part.0>
  109388:	103fcd1e 	bne	r2,zero,1092c0 <__alt_data_end+0xfff092c0>
  10938c:	d9001b17 	ldw	r4,108(sp)
  109390:	d8801c17 	ldw	r2,112(sp)
  109394:	d811883a 	mov	r8,sp
  109398:	21400044 	addi	r5,r4,1
  10939c:	003fe806 	br	109340 <__alt_data_end+0xfff09340>
  1093a0:	d9402117 	ldw	r5,132(sp)
  1093a4:	d9002017 	ldw	r4,128(sp)
  1093a8:	d9801a04 	addi	r6,sp,104
  1093ac:	d9c02b15 	stw	r7,172(sp)
  1093b0:	db402a15 	stw	r13,168(sp)
  1093b4:	010845c0 	call	10845c <__sprint_r.part.0>
  1093b8:	d9c02b17 	ldw	r7,172(sp)
  1093bc:	db402a17 	ldw	r13,168(sp)
  1093c0:	103fbf1e 	bne	r2,zero,1092c0 <__alt_data_end+0xfff092c0>
  1093c4:	d9401b17 	ldw	r5,108(sp)
  1093c8:	d8801c17 	ldw	r2,112(sp)
  1093cc:	d811883a 	mov	r8,sp
  1093d0:	29800044 	addi	r6,r5,1
  1093d4:	003dc406 	br	108ae8 <__alt_data_end+0xfff08ae8>
  1093d8:	1000d21e 	bne	r2,zero,109724 <___vfiprintf_internal_r+0x11b4>
  1093dc:	d8c01d87 	ldb	r3,118(sp)
  1093e0:	18009526 	beq	r3,zero,109638 <___vfiprintf_internal_r+0x10c8>
  1093e4:	00800044 	movi	r2,1
  1093e8:	d8c01d84 	addi	r3,sp,118
  1093ec:	1009883a 	mov	r4,r2
  1093f0:	d8c00015 	stw	r3,0(sp)
  1093f4:	d8800115 	stw	r2,4(sp)
  1093f8:	d811883a 	mov	r8,sp
  1093fc:	200b883a 	mov	r5,r4
  109400:	42000204 	addi	r8,r8,8
  109404:	21000044 	addi	r4,r4,1
  109408:	003d9706 	br	108a68 <__alt_data_end+0xfff08a68>
  10940c:	d9001d04 	addi	r4,sp,116
  109410:	00800084 	movi	r2,2
  109414:	d9000015 	stw	r4,0(sp)
  109418:	d8800115 	stw	r2,4(sp)
  10941c:	1809883a 	mov	r4,r3
  109420:	d811883a 	mov	r8,sp
  109424:	200b883a 	mov	r5,r4
  109428:	42000204 	addi	r8,r8,8
  10942c:	21000044 	addi	r4,r4,1
  109430:	003f4e06 	br	10916c <__alt_data_end+0xfff0916c>
  109434:	d8001d85 	stb	zero,118(sp)
  109438:	48005016 	blt	r9,zero,10957c <___vfiprintf_internal_r+0x100c>
  10943c:	00ffdfc4 	movi	r3,-129
  109440:	94c4b03a 	or	r2,r18,r19
  109444:	a0e8703a 	and	r20,r20,r3
  109448:	103d4426 	beq	r2,zero,10895c <__alt_data_end+0xfff0895c>
  10944c:	0039883a 	mov	fp,zero
  109450:	d9002617 	ldw	r4,152(sp)
  109454:	dd401a04 	addi	r21,sp,104
  109458:	908003cc 	andi	r2,r18,15
  10945c:	9806973a 	slli	r3,r19,28
  109460:	2085883a 	add	r2,r4,r2
  109464:	9024d13a 	srli	r18,r18,4
  109468:	10800003 	ldbu	r2,0(r2)
  10946c:	9826d13a 	srli	r19,r19,4
  109470:	ad7fffc4 	addi	r21,r21,-1
  109474:	1ca4b03a 	or	r18,r3,r18
  109478:	a8800005 	stb	r2,0(r21)
  10947c:	94c4b03a 	or	r2,r18,r19
  109480:	103ff51e 	bne	r2,zero,109458 <__alt_data_end+0xfff09458>
  109484:	003e5906 	br	108dec <__alt_data_end+0xfff08dec>
  109488:	d9402117 	ldw	r5,132(sp)
  10948c:	d9002017 	ldw	r4,128(sp)
  109490:	d9801a04 	addi	r6,sp,104
  109494:	010845c0 	call	10845c <__sprint_r.part.0>
  109498:	103f891e 	bne	r2,zero,1092c0 <__alt_data_end+0xfff092c0>
  10949c:	d8801c17 	ldw	r2,112(sp)
  1094a0:	d811883a 	mov	r8,sp
  1094a4:	003f9506 	br	1092fc <__alt_data_end+0xfff092fc>
  1094a8:	d9402117 	ldw	r5,132(sp)
  1094ac:	d9002017 	ldw	r4,128(sp)
  1094b0:	d9801a04 	addi	r6,sp,104
  1094b4:	010845c0 	call	10845c <__sprint_r.part.0>
  1094b8:	103f811e 	bne	r2,zero,1092c0 <__alt_data_end+0xfff092c0>
  1094bc:	d811883a 	mov	r8,sp
  1094c0:	003ced06 	br	108878 <__alt_data_end+0xfff08878>
  1094c4:	d9402117 	ldw	r5,132(sp)
  1094c8:	d9002017 	ldw	r4,128(sp)
  1094cc:	d9801a04 	addi	r6,sp,104
  1094d0:	da402c15 	stw	r9,176(sp)
  1094d4:	db802a15 	stw	r14,168(sp)
  1094d8:	010845c0 	call	10845c <__sprint_r.part.0>
  1094dc:	da402c17 	ldw	r9,176(sp)
  1094e0:	db802a17 	ldw	r14,168(sp)
  1094e4:	103f761e 	bne	r2,zero,1092c0 <__alt_data_end+0xfff092c0>
  1094e8:	d9401b17 	ldw	r5,108(sp)
  1094ec:	d8801c17 	ldw	r2,112(sp)
  1094f0:	d811883a 	mov	r8,sp
  1094f4:	29000044 	addi	r4,r5,1
  1094f8:	003d5b06 	br	108a68 <__alt_data_end+0xfff08a68>
  1094fc:	d9402117 	ldw	r5,132(sp)
  109500:	d9002017 	ldw	r4,128(sp)
  109504:	d9801a04 	addi	r6,sp,104
  109508:	da402c15 	stw	r9,176(sp)
  10950c:	010845c0 	call	10845c <__sprint_r.part.0>
  109510:	da402c17 	ldw	r9,176(sp)
  109514:	103f6a1e 	bne	r2,zero,1092c0 <__alt_data_end+0xfff092c0>
  109518:	d9401b17 	ldw	r5,108(sp)
  10951c:	d8801c17 	ldw	r2,112(sp)
  109520:	d811883a 	mov	r8,sp
  109524:	29000044 	addi	r4,r5,1
  109528:	003f1006 	br	10916c <__alt_data_end+0xfff0916c>
  10952c:	1000c31e 	bne	r2,zero,10983c <___vfiprintf_internal_r+0x12cc>
  109530:	01000044 	movi	r4,1
  109534:	000b883a 	mov	r5,zero
  109538:	d811883a 	mov	r8,sp
  10953c:	003f0d06 	br	109174 <__alt_data_end+0xfff09174>
  109540:	d9402117 	ldw	r5,132(sp)
  109544:	d9002017 	ldw	r4,128(sp)
  109548:	d9801a04 	addi	r6,sp,104
  10954c:	010845c0 	call	10845c <__sprint_r.part.0>
  109550:	103f5b1e 	bne	r2,zero,1092c0 <__alt_data_end+0xfff092c0>
  109554:	d9001b17 	ldw	r4,108(sp)
  109558:	d8801c17 	ldw	r2,112(sp)
  10955c:	d811883a 	mov	r8,sp
  109560:	21000044 	addi	r4,r4,1
  109564:	003d8006 	br	108b68 <__alt_data_end+0xfff08b68>
  109568:	01000474 	movhi	r4,17
  10956c:	21013f04 	addi	r4,r4,1276
  109570:	d9002615 	stw	r4,152(sp)
  109574:	d8c02215 	stw	r3,136(sp)
  109578:	1029883a 	mov	r20,r2
  10957c:	94c4b03a 	or	r2,r18,r19
  109580:	103fb21e 	bne	r2,zero,10944c <__alt_data_end+0xfff0944c>
  109584:	0039883a 	mov	fp,zero
  109588:	00800084 	movi	r2,2
  10958c:	003e6b06 	br	108f3c <__alt_data_end+0xfff08f3c>
  109590:	da802217 	ldw	r10,136(sp)
  109594:	d8001d85 	stb	zero,118(sp)
  109598:	0027883a 	mov	r19,zero
  10959c:	50800104 	addi	r2,r10,4
  1095a0:	54800017 	ldw	r18,0(r10)
  1095a4:	483e6016 	blt	r9,zero,108f28 <__alt_data_end+0xfff08f28>
  1095a8:	00ffdfc4 	movi	r3,-129
  1095ac:	d8802215 	stw	r2,136(sp)
  1095b0:	a0e8703a 	and	r20,r20,r3
  1095b4:	0039883a 	mov	fp,zero
  1095b8:	903ebb26 	beq	r18,zero,1090a8 <__alt_data_end+0xfff090a8>
  1095bc:	00800244 	movi	r2,9
  1095c0:	14bdee36 	bltu	r2,r18,108d7c <__alt_data_end+0xfff08d7c>
  1095c4:	003eba06 	br	1090b0 <__alt_data_end+0xfff090b0>
  1095c8:	00800c04 	movi	r2,48
  1095cc:	d8c01d45 	stb	r3,117(sp)
  1095d0:	d8801d05 	stb	r2,116(sp)
  1095d4:	d8001d85 	stb	zero,118(sp)
  1095d8:	a0c00094 	ori	r3,r20,2
  1095dc:	4800a916 	blt	r9,zero,109884 <___vfiprintf_internal_r+0x1314>
  1095e0:	00bfdfc4 	movi	r2,-129
  1095e4:	a096703a 	and	r11,r20,r2
  1095e8:	5d000094 	ori	r20,r11,2
  1095ec:	0039883a 	mov	fp,zero
  1095f0:	003f9706 	br	109450 <__alt_data_end+0xfff09450>
  1095f4:	8025883a 	mov	r18,r16
  1095f8:	003c2e06 	br	1086b4 <__alt_data_end+0xfff086b4>
  1095fc:	00800474 	movhi	r2,17
  109600:	10813f04 	addi	r2,r2,1276
  109604:	0039883a 	mov	fp,zero
  109608:	d8802615 	stw	r2,152(sp)
  10960c:	003f9006 	br	109450 <__alt_data_end+0xfff09450>
  109610:	04a5c83a 	sub	r18,zero,r18
  109614:	07000b44 	movi	fp,45
  109618:	9004c03a 	cmpne	r2,r18,zero
  10961c:	04e7c83a 	sub	r19,zero,r19
  109620:	df001d85 	stb	fp,118(sp)
  109624:	98a7c83a 	sub	r19,r19,r2
  109628:	48009f16 	blt	r9,zero,1098a8 <___vfiprintf_internal_r+0x1338>
  10962c:	00bfdfc4 	movi	r2,-129
  109630:	a0a8703a 	and	r20,r20,r2
  109634:	003dd006 	br	108d78 <__alt_data_end+0xfff08d78>
  109638:	70004c26 	beq	r14,zero,10976c <___vfiprintf_internal_r+0x11fc>
  10963c:	00800084 	movi	r2,2
  109640:	d8c01d04 	addi	r3,sp,116
  109644:	d8c00015 	stw	r3,0(sp)
  109648:	d8800115 	stw	r2,4(sp)
  10964c:	01000044 	movi	r4,1
  109650:	d811883a 	mov	r8,sp
  109654:	003f7306 	br	109424 <__alt_data_end+0xfff09424>
  109658:	a080100c 	andi	r2,r20,64
  10965c:	da802217 	ldw	r10,136(sp)
  109660:	103e0626 	beq	r2,zero,108e7c <__alt_data_end+0xfff08e7c>
  109664:	5480000f 	ldh	r18,0(r10)
  109668:	52800104 	addi	r10,r10,4
  10966c:	da802215 	stw	r10,136(sp)
  109670:	9027d7fa 	srai	r19,r18,31
  109674:	9805883a 	mov	r2,r19
  109678:	003db806 	br	108d5c <__alt_data_end+0xfff08d5c>
  10967c:	a080040c 	andi	r2,r20,16
  109680:	1000091e 	bne	r2,zero,1096a8 <___vfiprintf_internal_r+0x1138>
  109684:	a2c0100c 	andi	r11,r20,64
  109688:	58000726 	beq	r11,zero,1096a8 <___vfiprintf_internal_r+0x1138>
  10968c:	da802217 	ldw	r10,136(sp)
  109690:	50800017 	ldw	r2,0(r10)
  109694:	52800104 	addi	r10,r10,4
  109698:	da802215 	stw	r10,136(sp)
  10969c:	da802317 	ldw	r10,140(sp)
  1096a0:	1280000d 	sth	r10,0(r2)
  1096a4:	003be706 	br	108644 <__alt_data_end+0xfff08644>
  1096a8:	da802217 	ldw	r10,136(sp)
  1096ac:	50800017 	ldw	r2,0(r10)
  1096b0:	52800104 	addi	r10,r10,4
  1096b4:	da802215 	stw	r10,136(sp)
  1096b8:	da802317 	ldw	r10,140(sp)
  1096bc:	12800015 	stw	r10,0(r2)
  1096c0:	003be006 	br	108644 <__alt_data_end+0xfff08644>
  1096c4:	a080100c 	andi	r2,r20,64
  1096c8:	da802217 	ldw	r10,136(sp)
  1096cc:	10003026 	beq	r2,zero,109790 <___vfiprintf_internal_r+0x1220>
  1096d0:	5480000b 	ldhu	r18,0(r10)
  1096d4:	52800104 	addi	r10,r10,4
  1096d8:	0027883a 	mov	r19,zero
  1096dc:	da802215 	stw	r10,136(sp)
  1096e0:	003d8006 	br	108ce4 <__alt_data_end+0xfff08ce4>
  1096e4:	80c00007 	ldb	r3,0(r16)
  1096e8:	003c0006 	br	1086ec <__alt_data_end+0xfff086ec>
  1096ec:	a080100c 	andi	r2,r20,64
  1096f0:	d8001d85 	stb	zero,118(sp)
  1096f4:	da802217 	ldw	r10,136(sp)
  1096f8:	1000201e 	bne	r2,zero,10977c <___vfiprintf_internal_r+0x120c>
  1096fc:	50800104 	addi	r2,r10,4
  109700:	54800017 	ldw	r18,0(r10)
  109704:	0027883a 	mov	r19,zero
  109708:	483def0e 	bge	r9,zero,108ec8 <__alt_data_end+0xfff08ec8>
  10970c:	94c6b03a 	or	r3,r18,r19
  109710:	d8802215 	stw	r2,136(sp)
  109714:	183d4e1e 	bne	r3,zero,108c50 <__alt_data_end+0xfff08c50>
  109718:	0039883a 	mov	fp,zero
  10971c:	0005883a 	mov	r2,zero
  109720:	003e0606 	br	108f3c <__alt_data_end+0xfff08f3c>
  109724:	d9402117 	ldw	r5,132(sp)
  109728:	d9002017 	ldw	r4,128(sp)
  10972c:	d9801a04 	addi	r6,sp,104
  109730:	da402c15 	stw	r9,176(sp)
  109734:	db802a15 	stw	r14,168(sp)
  109738:	010845c0 	call	10845c <__sprint_r.part.0>
  10973c:	da402c17 	ldw	r9,176(sp)
  109740:	db802a17 	ldw	r14,168(sp)
  109744:	103ede1e 	bne	r2,zero,1092c0 <__alt_data_end+0xfff092c0>
  109748:	d9401b17 	ldw	r5,108(sp)
  10974c:	d8801c17 	ldw	r2,112(sp)
  109750:	d811883a 	mov	r8,sp
  109754:	29000044 	addi	r4,r5,1
  109758:	003e7406 	br	10912c <__alt_data_end+0xfff0912c>
  10975c:	00bfffc4 	movi	r2,-1
  109760:	003c5806 	br	1088c4 <__alt_data_end+0xfff088c4>
  109764:	d811883a 	mov	r8,sp
  109768:	003ee806 	br	10930c <__alt_data_end+0xfff0930c>
  10976c:	000b883a 	mov	r5,zero
  109770:	01000044 	movi	r4,1
  109774:	d811883a 	mov	r8,sp
  109778:	003e7c06 	br	10916c <__alt_data_end+0xfff0916c>
  10977c:	50800104 	addi	r2,r10,4
  109780:	5480000b 	ldhu	r18,0(r10)
  109784:	0027883a 	mov	r19,zero
  109788:	483dcf0e 	bge	r9,zero,108ec8 <__alt_data_end+0xfff08ec8>
  10978c:	003fdf06 	br	10970c <__alt_data_end+0xfff0970c>
  109790:	54800017 	ldw	r18,0(r10)
  109794:	52800104 	addi	r10,r10,4
  109798:	0027883a 	mov	r19,zero
  10979c:	da802215 	stw	r10,136(sp)
  1097a0:	003d5006 	br	108ce4 <__alt_data_end+0xfff08ce4>
  1097a4:	50800104 	addi	r2,r10,4
  1097a8:	5480000b 	ldhu	r18,0(r10)
  1097ac:	0027883a 	mov	r19,zero
  1097b0:	483f7d0e 	bge	r9,zero,1095a8 <__alt_data_end+0xfff095a8>
  1097b4:	003ddc06 	br	108f28 <__alt_data_end+0xfff08f28>
  1097b8:	d8c02215 	stw	r3,136(sp)
  1097bc:	0039883a 	mov	fp,zero
  1097c0:	003ddb06 	br	108f30 <__alt_data_end+0xfff08f30>
  1097c4:	02800474 	movhi	r10,17
  1097c8:	5281a004 	addi	r10,r10,1664
  1097cc:	da802415 	stw	r10,144(sp)
  1097d0:	003e8306 	br	1091e0 <__alt_data_end+0xfff091e0>
  1097d4:	d8801c17 	ldw	r2,112(sp)
  1097d8:	dd002117 	ldw	r20,132(sp)
  1097dc:	103eb926 	beq	r2,zero,1092c4 <__alt_data_end+0xfff092c4>
  1097e0:	d9002017 	ldw	r4,128(sp)
  1097e4:	d9801a04 	addi	r6,sp,104
  1097e8:	a00b883a 	mov	r5,r20
  1097ec:	010845c0 	call	10845c <__sprint_r.part.0>
  1097f0:	003eb406 	br	1092c4 <__alt_data_end+0xfff092c4>
  1097f4:	80c00043 	ldbu	r3,1(r16)
  1097f8:	a5000814 	ori	r20,r20,32
  1097fc:	84000044 	addi	r16,r16,1
  109800:	18c03fcc 	andi	r3,r3,255
  109804:	18c0201c 	xori	r3,r3,128
  109808:	18ffe004 	addi	r3,r3,-128
  10980c:	003bb706 	br	1086ec <__alt_data_end+0xfff086ec>
  109810:	a809883a 	mov	r4,r21
  109814:	d8c02a15 	stw	r3,168(sp)
  109818:	da002b15 	stw	r8,172(sp)
  10981c:	01083c40 	call	1083c4 <strlen>
  109820:	d8c02a17 	ldw	r3,168(sp)
  109824:	1027883a 	mov	r19,r2
  109828:	df001d83 	ldbu	fp,118(sp)
  10982c:	d8c02215 	stw	r3,136(sp)
  109830:	0013883a 	mov	r9,zero
  109834:	da002b17 	ldw	r8,172(sp)
  109838:	003c4d06 	br	108970 <__alt_data_end+0xfff08970>
  10983c:	d9402117 	ldw	r5,132(sp)
  109840:	d9002017 	ldw	r4,128(sp)
  109844:	d9801a04 	addi	r6,sp,104
  109848:	da402c15 	stw	r9,176(sp)
  10984c:	010845c0 	call	10845c <__sprint_r.part.0>
  109850:	da402c17 	ldw	r9,176(sp)
  109854:	103e9a1e 	bne	r2,zero,1092c0 <__alt_data_end+0xfff092c0>
  109858:	d9401b17 	ldw	r5,108(sp)
  10985c:	d8801c17 	ldw	r2,112(sp)
  109860:	d811883a 	mov	r8,sp
  109864:	29000044 	addi	r4,r5,1
  109868:	003e4206 	br	109174 <__alt_data_end+0xfff09174>
  10986c:	d9401b17 	ldw	r5,108(sp)
  109870:	01000474 	movhi	r4,17
  109874:	2101a404 	addi	r4,r4,1680
  109878:	d9002415 	stw	r4,144(sp)
  10987c:	29400044 	addi	r5,r5,1
  109880:	003c6d06 	br	108a38 <__alt_data_end+0xfff08a38>
  109884:	0039883a 	mov	fp,zero
  109888:	00800084 	movi	r2,2
  10988c:	10803fcc 	andi	r2,r2,255
  109890:	01000044 	movi	r4,1
  109894:	11001e26 	beq	r2,r4,109910 <___vfiprintf_internal_r+0x13a0>
  109898:	01000084 	movi	r4,2
  10989c:	11001e1e 	bne	r2,r4,109918 <___vfiprintf_internal_r+0x13a8>
  1098a0:	1829883a 	mov	r20,r3
  1098a4:	003eea06 	br	109450 <__alt_data_end+0xfff09450>
  1098a8:	a007883a 	mov	r3,r20
  1098ac:	00800044 	movi	r2,1
  1098b0:	003ff606 	br	10988c <__alt_data_end+0xfff0988c>
  1098b4:	00800184 	movi	r2,6
  1098b8:	1240012e 	bgeu	r2,r9,1098c0 <___vfiprintf_internal_r+0x1350>
  1098bc:	1013883a 	mov	r9,r2
  1098c0:	4827883a 	mov	r19,r9
  1098c4:	4825883a 	mov	r18,r9
  1098c8:	48001516 	blt	r9,zero,109920 <___vfiprintf_internal_r+0x13b0>
  1098cc:	05400474 	movhi	r21,17
  1098d0:	d8c02215 	stw	r3,136(sp)
  1098d4:	ad414404 	addi	r21,r21,1296
  1098d8:	003d1406 	br	108d2c <__alt_data_end+0xfff08d2c>
  1098dc:	02800474 	movhi	r10,17
  1098e0:	5281a004 	addi	r10,r10,1664
  1098e4:	da802415 	stw	r10,144(sp)
  1098e8:	200d883a 	mov	r6,r4
  1098ec:	003c9106 	br	108b34 <__alt_data_end+0xfff08b34>
  1098f0:	5021883a 	mov	r16,r10
  1098f4:	0013883a 	mov	r9,zero
  1098f8:	003b7d06 	br	1086f0 <__alt_data_end+0xfff086f0>
  1098fc:	4827883a 	mov	r19,r9
  109900:	df001d83 	ldbu	fp,118(sp)
  109904:	d8c02215 	stw	r3,136(sp)
  109908:	0013883a 	mov	r9,zero
  10990c:	003c1806 	br	108970 <__alt_data_end+0xfff08970>
  109910:	1829883a 	mov	r20,r3
  109914:	003d1806 	br	108d78 <__alt_data_end+0xfff08d78>
  109918:	1829883a 	mov	r20,r3
  10991c:	003ccd06 	br	108c54 <__alt_data_end+0xfff08c54>
  109920:	0025883a 	mov	r18,zero
  109924:	003fe906 	br	1098cc <__alt_data_end+0xfff098cc>
  109928:	d8802217 	ldw	r2,136(sp)
  10992c:	80c00043 	ldbu	r3,1(r16)
  109930:	5021883a 	mov	r16,r10
  109934:	12400017 	ldw	r9,0(r2)
  109938:	10800104 	addi	r2,r2,4
  10993c:	d8802215 	stw	r2,136(sp)
  109940:	483faf0e 	bge	r9,zero,109800 <__alt_data_end+0xfff09800>
  109944:	18c03fcc 	andi	r3,r3,255
  109948:	18c0201c 	xori	r3,r3,128
  10994c:	027fffc4 	movi	r9,-1
  109950:	18ffe004 	addi	r3,r3,-128
  109954:	003b6506 	br	1086ec <__alt_data_end+0xfff086ec>
  109958:	d9c01d85 	stb	r7,118(sp)
  10995c:	003ca006 	br	108be0 <__alt_data_end+0xfff08be0>
  109960:	d9c01d85 	stb	r7,118(sp)
  109964:	003cad06 	br	108c1c <__alt_data_end+0xfff08c1c>
  109968:	d9c01d85 	stb	r7,118(sp)
  10996c:	003d7d06 	br	108f64 <__alt_data_end+0xfff08f64>
  109970:	d9c01d85 	stb	r7,118(sp)
  109974:	003d5f06 	br	108ef4 <__alt_data_end+0xfff08ef4>
  109978:	a080004c 	andi	r2,r20,1
  10997c:	0039883a 	mov	fp,zero
  109980:	10000526 	beq	r2,zero,109998 <___vfiprintf_internal_r+0x1428>
  109984:	00800c04 	movi	r2,48
  109988:	d88019c5 	stb	r2,103(sp)
  10998c:	dcc02717 	ldw	r19,156(sp)
  109990:	dd4019c4 	addi	r21,sp,103
  109994:	003bf606 	br	108970 <__alt_data_end+0xfff08970>
  109998:	0027883a 	mov	r19,zero
  10999c:	dd401a04 	addi	r21,sp,104
  1099a0:	003bf306 	br	108970 <__alt_data_end+0xfff08970>
  1099a4:	d9c01d85 	stb	r7,118(sp)
  1099a8:	003dc806 	br	1090cc <__alt_data_end+0xfff090cc>
  1099ac:	d9c01d85 	stb	r7,118(sp)
  1099b0:	003d3a06 	br	108e9c <__alt_data_end+0xfff08e9c>
  1099b4:	d9c01d85 	stb	r7,118(sp)
  1099b8:	003d2a06 	br	108e64 <__alt_data_end+0xfff08e64>
  1099bc:	d9c01d85 	stb	r7,118(sp)
  1099c0:	003cde06 	br	108d3c <__alt_data_end+0xfff08d3c>
  1099c4:	d9c01d85 	stb	r7,118(sp)
  1099c8:	003cbc06 	br	108cbc <__alt_data_end+0xfff08cbc>

001099cc <__vfiprintf_internal>:
  1099cc:	00800474 	movhi	r2,17
  1099d0:	1085ac04 	addi	r2,r2,5808
  1099d4:	300f883a 	mov	r7,r6
  1099d8:	280d883a 	mov	r6,r5
  1099dc:	200b883a 	mov	r5,r4
  1099e0:	11000017 	ldw	r4,0(r2)
  1099e4:	01085701 	jmpi	108570 <___vfiprintf_internal_r>

001099e8 <__sbprintf>:
  1099e8:	2880030b 	ldhu	r2,12(r5)
  1099ec:	2ac01917 	ldw	r11,100(r5)
  1099f0:	2a80038b 	ldhu	r10,14(r5)
  1099f4:	2a400717 	ldw	r9,28(r5)
  1099f8:	2a000917 	ldw	r8,36(r5)
  1099fc:	defee204 	addi	sp,sp,-1144
  109a00:	00c10004 	movi	r3,1024
  109a04:	dc011a15 	stw	r16,1128(sp)
  109a08:	10bfff4c 	andi	r2,r2,65533
  109a0c:	2821883a 	mov	r16,r5
  109a10:	d8cb883a 	add	r5,sp,r3
  109a14:	dc811c15 	stw	r18,1136(sp)
  109a18:	dc411b15 	stw	r17,1132(sp)
  109a1c:	dfc11d15 	stw	ra,1140(sp)
  109a20:	2025883a 	mov	r18,r4
  109a24:	d881030d 	sth	r2,1036(sp)
  109a28:	dac11915 	stw	r11,1124(sp)
  109a2c:	da81038d 	sth	r10,1038(sp)
  109a30:	da410715 	stw	r9,1052(sp)
  109a34:	da010915 	stw	r8,1060(sp)
  109a38:	dec10015 	stw	sp,1024(sp)
  109a3c:	dec10415 	stw	sp,1040(sp)
  109a40:	d8c10215 	stw	r3,1032(sp)
  109a44:	d8c10515 	stw	r3,1044(sp)
  109a48:	d8010615 	stw	zero,1048(sp)
  109a4c:	01085700 	call	108570 <___vfiprintf_internal_r>
  109a50:	1023883a 	mov	r17,r2
  109a54:	10000416 	blt	r2,zero,109a68 <__sbprintf+0x80>
  109a58:	d9410004 	addi	r5,sp,1024
  109a5c:	9009883a 	mov	r4,r18
  109a60:	01059080 	call	105908 <_fflush_r>
  109a64:	10000d1e 	bne	r2,zero,109a9c <__sbprintf+0xb4>
  109a68:	d881030b 	ldhu	r2,1036(sp)
  109a6c:	1080100c 	andi	r2,r2,64
  109a70:	10000326 	beq	r2,zero,109a80 <__sbprintf+0x98>
  109a74:	8080030b 	ldhu	r2,12(r16)
  109a78:	10801014 	ori	r2,r2,64
  109a7c:	8080030d 	sth	r2,12(r16)
  109a80:	8805883a 	mov	r2,r17
  109a84:	dfc11d17 	ldw	ra,1140(sp)
  109a88:	dc811c17 	ldw	r18,1136(sp)
  109a8c:	dc411b17 	ldw	r17,1132(sp)
  109a90:	dc011a17 	ldw	r16,1128(sp)
  109a94:	dec11e04 	addi	sp,sp,1144
  109a98:	f800283a 	ret
  109a9c:	047fffc4 	movi	r17,-1
  109aa0:	003ff106 	br	109a68 <__alt_data_end+0xfff09a68>

00109aa4 <_write_r>:
  109aa4:	defffd04 	addi	sp,sp,-12
  109aa8:	2805883a 	mov	r2,r5
  109aac:	dc000015 	stw	r16,0(sp)
  109ab0:	04000474 	movhi	r16,17
  109ab4:	dc400115 	stw	r17,4(sp)
  109ab8:	300b883a 	mov	r5,r6
  109abc:	8409ca04 	addi	r16,r16,10024
  109ac0:	2023883a 	mov	r17,r4
  109ac4:	380d883a 	mov	r6,r7
  109ac8:	1009883a 	mov	r4,r2
  109acc:	dfc00215 	stw	ra,8(sp)
  109ad0:	80000015 	stw	zero,0(r16)
  109ad4:	010e8840 	call	10e884 <write>
  109ad8:	00ffffc4 	movi	r3,-1
  109adc:	10c00526 	beq	r2,r3,109af4 <_write_r+0x50>
  109ae0:	dfc00217 	ldw	ra,8(sp)
  109ae4:	dc400117 	ldw	r17,4(sp)
  109ae8:	dc000017 	ldw	r16,0(sp)
  109aec:	dec00304 	addi	sp,sp,12
  109af0:	f800283a 	ret
  109af4:	80c00017 	ldw	r3,0(r16)
  109af8:	183ff926 	beq	r3,zero,109ae0 <__alt_data_end+0xfff09ae0>
  109afc:	88c00015 	stw	r3,0(r17)
  109b00:	003ff706 	br	109ae0 <__alt_data_end+0xfff09ae0>

00109b04 <_close_r>:
  109b04:	defffd04 	addi	sp,sp,-12
  109b08:	dc000015 	stw	r16,0(sp)
  109b0c:	04000474 	movhi	r16,17
  109b10:	dc400115 	stw	r17,4(sp)
  109b14:	8409ca04 	addi	r16,r16,10024
  109b18:	2023883a 	mov	r17,r4
  109b1c:	2809883a 	mov	r4,r5
  109b20:	dfc00215 	stw	ra,8(sp)
  109b24:	80000015 	stw	zero,0(r16)
  109b28:	010e0440 	call	10e044 <close>
  109b2c:	00ffffc4 	movi	r3,-1
  109b30:	10c00526 	beq	r2,r3,109b48 <_close_r+0x44>
  109b34:	dfc00217 	ldw	ra,8(sp)
  109b38:	dc400117 	ldw	r17,4(sp)
  109b3c:	dc000017 	ldw	r16,0(sp)
  109b40:	dec00304 	addi	sp,sp,12
  109b44:	f800283a 	ret
  109b48:	80c00017 	ldw	r3,0(r16)
  109b4c:	183ff926 	beq	r3,zero,109b34 <__alt_data_end+0xfff09b34>
  109b50:	88c00015 	stw	r3,0(r17)
  109b54:	003ff706 	br	109b34 <__alt_data_end+0xfff09b34>

00109b58 <_calloc_r>:
  109b58:	298b383a 	mul	r5,r5,r6
  109b5c:	defffe04 	addi	sp,sp,-8
  109b60:	dfc00115 	stw	ra,4(sp)
  109b64:	dc000015 	stw	r16,0(sp)
  109b68:	01065880 	call	106588 <_malloc_r>
  109b6c:	10002926 	beq	r2,zero,109c14 <_calloc_r+0xbc>
  109b70:	11bfff17 	ldw	r6,-4(r2)
  109b74:	1021883a 	mov	r16,r2
  109b78:	00bfff04 	movi	r2,-4
  109b7c:	308c703a 	and	r6,r6,r2
  109b80:	00c00904 	movi	r3,36
  109b84:	308d883a 	add	r6,r6,r2
  109b88:	19801636 	bltu	r3,r6,109be4 <_calloc_r+0x8c>
  109b8c:	008004c4 	movi	r2,19
  109b90:	11800b2e 	bgeu	r2,r6,109bc0 <_calloc_r+0x68>
  109b94:	80000015 	stw	zero,0(r16)
  109b98:	80000115 	stw	zero,4(r16)
  109b9c:	008006c4 	movi	r2,27
  109ba0:	11801a2e 	bgeu	r2,r6,109c0c <_calloc_r+0xb4>
  109ba4:	80000215 	stw	zero,8(r16)
  109ba8:	80000315 	stw	zero,12(r16)
  109bac:	30c0151e 	bne	r6,r3,109c04 <_calloc_r+0xac>
  109bb0:	80000415 	stw	zero,16(r16)
  109bb4:	80800604 	addi	r2,r16,24
  109bb8:	80000515 	stw	zero,20(r16)
  109bbc:	00000106 	br	109bc4 <_calloc_r+0x6c>
  109bc0:	8005883a 	mov	r2,r16
  109bc4:	10000015 	stw	zero,0(r2)
  109bc8:	10000115 	stw	zero,4(r2)
  109bcc:	10000215 	stw	zero,8(r2)
  109bd0:	8005883a 	mov	r2,r16
  109bd4:	dfc00117 	ldw	ra,4(sp)
  109bd8:	dc000017 	ldw	r16,0(sp)
  109bdc:	dec00204 	addi	sp,sp,8
  109be0:	f800283a 	ret
  109be4:	000b883a 	mov	r5,zero
  109be8:	8009883a 	mov	r4,r16
  109bec:	0106fc00 	call	106fc0 <memset>
  109bf0:	8005883a 	mov	r2,r16
  109bf4:	dfc00117 	ldw	ra,4(sp)
  109bf8:	dc000017 	ldw	r16,0(sp)
  109bfc:	dec00204 	addi	sp,sp,8
  109c00:	f800283a 	ret
  109c04:	80800404 	addi	r2,r16,16
  109c08:	003fee06 	br	109bc4 <__alt_data_end+0xfff09bc4>
  109c0c:	80800204 	addi	r2,r16,8
  109c10:	003fec06 	br	109bc4 <__alt_data_end+0xfff09bc4>
  109c14:	0005883a 	mov	r2,zero
  109c18:	003fee06 	br	109bd4 <__alt_data_end+0xfff09bd4>

00109c1c <_fclose_r>:
  109c1c:	28003926 	beq	r5,zero,109d04 <_fclose_r+0xe8>
  109c20:	defffc04 	addi	sp,sp,-16
  109c24:	dc400115 	stw	r17,4(sp)
  109c28:	dc000015 	stw	r16,0(sp)
  109c2c:	dfc00315 	stw	ra,12(sp)
  109c30:	dc800215 	stw	r18,8(sp)
  109c34:	2023883a 	mov	r17,r4
  109c38:	2821883a 	mov	r16,r5
  109c3c:	20000226 	beq	r4,zero,109c48 <_fclose_r+0x2c>
  109c40:	20800e17 	ldw	r2,56(r4)
  109c44:	10002726 	beq	r2,zero,109ce4 <_fclose_r+0xc8>
  109c48:	8080030f 	ldh	r2,12(r16)
  109c4c:	1000071e 	bne	r2,zero,109c6c <_fclose_r+0x50>
  109c50:	0005883a 	mov	r2,zero
  109c54:	dfc00317 	ldw	ra,12(sp)
  109c58:	dc800217 	ldw	r18,8(sp)
  109c5c:	dc400117 	ldw	r17,4(sp)
  109c60:	dc000017 	ldw	r16,0(sp)
  109c64:	dec00404 	addi	sp,sp,16
  109c68:	f800283a 	ret
  109c6c:	800b883a 	mov	r5,r16
  109c70:	8809883a 	mov	r4,r17
  109c74:	01056ec0 	call	1056ec <__sflush_r>
  109c78:	1025883a 	mov	r18,r2
  109c7c:	80800b17 	ldw	r2,44(r16)
  109c80:	10000426 	beq	r2,zero,109c94 <_fclose_r+0x78>
  109c84:	81400717 	ldw	r5,28(r16)
  109c88:	8809883a 	mov	r4,r17
  109c8c:	103ee83a 	callr	r2
  109c90:	10001616 	blt	r2,zero,109cec <_fclose_r+0xd0>
  109c94:	8080030b 	ldhu	r2,12(r16)
  109c98:	1080200c 	andi	r2,r2,128
  109c9c:	1000151e 	bne	r2,zero,109cf4 <_fclose_r+0xd8>
  109ca0:	81400c17 	ldw	r5,48(r16)
  109ca4:	28000526 	beq	r5,zero,109cbc <_fclose_r+0xa0>
  109ca8:	80801004 	addi	r2,r16,64
  109cac:	28800226 	beq	r5,r2,109cb8 <_fclose_r+0x9c>
  109cb0:	8809883a 	mov	r4,r17
  109cb4:	0105e580 	call	105e58 <_free_r>
  109cb8:	80000c15 	stw	zero,48(r16)
  109cbc:	81401117 	ldw	r5,68(r16)
  109cc0:	28000326 	beq	r5,zero,109cd0 <_fclose_r+0xb4>
  109cc4:	8809883a 	mov	r4,r17
  109cc8:	0105e580 	call	105e58 <_free_r>
  109ccc:	80001115 	stw	zero,68(r16)
  109cd0:	0105cf40 	call	105cf4 <__sfp_lock_acquire>
  109cd4:	8000030d 	sth	zero,12(r16)
  109cd8:	0105cf80 	call	105cf8 <__sfp_lock_release>
  109cdc:	9005883a 	mov	r2,r18
  109ce0:	003fdc06 	br	109c54 <__alt_data_end+0xfff09c54>
  109ce4:	0105ce40 	call	105ce4 <__sinit>
  109ce8:	003fd706 	br	109c48 <__alt_data_end+0xfff09c48>
  109cec:	04bfffc4 	movi	r18,-1
  109cf0:	003fe806 	br	109c94 <__alt_data_end+0xfff09c94>
  109cf4:	81400417 	ldw	r5,16(r16)
  109cf8:	8809883a 	mov	r4,r17
  109cfc:	0105e580 	call	105e58 <_free_r>
  109d00:	003fe706 	br	109ca0 <__alt_data_end+0xfff09ca0>
  109d04:	0005883a 	mov	r2,zero
  109d08:	f800283a 	ret

00109d0c <fclose>:
  109d0c:	00800474 	movhi	r2,17
  109d10:	1085ac04 	addi	r2,r2,5808
  109d14:	200b883a 	mov	r5,r4
  109d18:	11000017 	ldw	r4,0(r2)
  109d1c:	0109c1c1 	jmpi	109c1c <_fclose_r>

00109d20 <__fputwc>:
  109d20:	defff804 	addi	sp,sp,-32
  109d24:	dcc00415 	stw	r19,16(sp)
  109d28:	dc800315 	stw	r18,12(sp)
  109d2c:	dc000115 	stw	r16,4(sp)
  109d30:	dfc00715 	stw	ra,28(sp)
  109d34:	dd400615 	stw	r21,24(sp)
  109d38:	dd000515 	stw	r20,20(sp)
  109d3c:	dc400215 	stw	r17,8(sp)
  109d40:	2027883a 	mov	r19,r4
  109d44:	2825883a 	mov	r18,r5
  109d48:	3021883a 	mov	r16,r6
  109d4c:	01063780 	call	106378 <__locale_mb_cur_max>
  109d50:	00c00044 	movi	r3,1
  109d54:	10c03e26 	beq	r2,r3,109e50 <__fputwc+0x130>
  109d58:	81c01704 	addi	r7,r16,92
  109d5c:	900d883a 	mov	r6,r18
  109d60:	d80b883a 	mov	r5,sp
  109d64:	9809883a 	mov	r4,r19
  109d68:	010ad6c0 	call	10ad6c <_wcrtomb_r>
  109d6c:	1029883a 	mov	r20,r2
  109d70:	00bfffc4 	movi	r2,-1
  109d74:	a0802026 	beq	r20,r2,109df8 <__fputwc+0xd8>
  109d78:	d9400003 	ldbu	r5,0(sp)
  109d7c:	a0001c26 	beq	r20,zero,109df0 <__fputwc+0xd0>
  109d80:	0023883a 	mov	r17,zero
  109d84:	05400284 	movi	r21,10
  109d88:	00000906 	br	109db0 <__fputwc+0x90>
  109d8c:	80800017 	ldw	r2,0(r16)
  109d90:	11400005 	stb	r5,0(r2)
  109d94:	80c00017 	ldw	r3,0(r16)
  109d98:	18c00044 	addi	r3,r3,1
  109d9c:	80c00015 	stw	r3,0(r16)
  109da0:	8c400044 	addi	r17,r17,1
  109da4:	dc45883a 	add	r2,sp,r17
  109da8:	8d00112e 	bgeu	r17,r20,109df0 <__fputwc+0xd0>
  109dac:	11400003 	ldbu	r5,0(r2)
  109db0:	80c00217 	ldw	r3,8(r16)
  109db4:	18ffffc4 	addi	r3,r3,-1
  109db8:	80c00215 	stw	r3,8(r16)
  109dbc:	183ff30e 	bge	r3,zero,109d8c <__alt_data_end+0xfff09d8c>
  109dc0:	80800617 	ldw	r2,24(r16)
  109dc4:	18801916 	blt	r3,r2,109e2c <__fputwc+0x10c>
  109dc8:	80800017 	ldw	r2,0(r16)
  109dcc:	11400005 	stb	r5,0(r2)
  109dd0:	80800017 	ldw	r2,0(r16)
  109dd4:	10c00003 	ldbu	r3,0(r2)
  109dd8:	10800044 	addi	r2,r2,1
  109ddc:	1d402326 	beq	r3,r21,109e6c <__fputwc+0x14c>
  109de0:	80800015 	stw	r2,0(r16)
  109de4:	8c400044 	addi	r17,r17,1
  109de8:	dc45883a 	add	r2,sp,r17
  109dec:	8d3fef36 	bltu	r17,r20,109dac <__alt_data_end+0xfff09dac>
  109df0:	9005883a 	mov	r2,r18
  109df4:	00000406 	br	109e08 <__fputwc+0xe8>
  109df8:	80c0030b 	ldhu	r3,12(r16)
  109dfc:	a005883a 	mov	r2,r20
  109e00:	18c01014 	ori	r3,r3,64
  109e04:	80c0030d 	sth	r3,12(r16)
  109e08:	dfc00717 	ldw	ra,28(sp)
  109e0c:	dd400617 	ldw	r21,24(sp)
  109e10:	dd000517 	ldw	r20,20(sp)
  109e14:	dcc00417 	ldw	r19,16(sp)
  109e18:	dc800317 	ldw	r18,12(sp)
  109e1c:	dc400217 	ldw	r17,8(sp)
  109e20:	dc000117 	ldw	r16,4(sp)
  109e24:	dec00804 	addi	sp,sp,32
  109e28:	f800283a 	ret
  109e2c:	800d883a 	mov	r6,r16
  109e30:	29403fcc 	andi	r5,r5,255
  109e34:	9809883a 	mov	r4,r19
  109e38:	010ac140 	call	10ac14 <__swbuf_r>
  109e3c:	10bfffe0 	cmpeqi	r2,r2,-1
  109e40:	10803fcc 	andi	r2,r2,255
  109e44:	103fd626 	beq	r2,zero,109da0 <__alt_data_end+0xfff09da0>
  109e48:	00bfffc4 	movi	r2,-1
  109e4c:	003fee06 	br	109e08 <__alt_data_end+0xfff09e08>
  109e50:	90ffffc4 	addi	r3,r18,-1
  109e54:	01003f84 	movi	r4,254
  109e58:	20ffbf36 	bltu	r4,r3,109d58 <__alt_data_end+0xfff09d58>
  109e5c:	900b883a 	mov	r5,r18
  109e60:	dc800005 	stb	r18,0(sp)
  109e64:	1029883a 	mov	r20,r2
  109e68:	003fc506 	br	109d80 <__alt_data_end+0xfff09d80>
  109e6c:	800d883a 	mov	r6,r16
  109e70:	a80b883a 	mov	r5,r21
  109e74:	9809883a 	mov	r4,r19
  109e78:	010ac140 	call	10ac14 <__swbuf_r>
  109e7c:	10bfffe0 	cmpeqi	r2,r2,-1
  109e80:	003fef06 	br	109e40 <__alt_data_end+0xfff09e40>

00109e84 <_fputwc_r>:
  109e84:	3080030b 	ldhu	r2,12(r6)
  109e88:	10c8000c 	andi	r3,r2,8192
  109e8c:	1800051e 	bne	r3,zero,109ea4 <_fputwc_r+0x20>
  109e90:	30c01917 	ldw	r3,100(r6)
  109e94:	10880014 	ori	r2,r2,8192
  109e98:	3080030d 	sth	r2,12(r6)
  109e9c:	18880014 	ori	r2,r3,8192
  109ea0:	30801915 	stw	r2,100(r6)
  109ea4:	0109d201 	jmpi	109d20 <__fputwc>

00109ea8 <fputwc>:
  109ea8:	00800474 	movhi	r2,17
  109eac:	defffc04 	addi	sp,sp,-16
  109eb0:	1085ac04 	addi	r2,r2,5808
  109eb4:	dc000115 	stw	r16,4(sp)
  109eb8:	14000017 	ldw	r16,0(r2)
  109ebc:	dc400215 	stw	r17,8(sp)
  109ec0:	dfc00315 	stw	ra,12(sp)
  109ec4:	2023883a 	mov	r17,r4
  109ec8:	80000226 	beq	r16,zero,109ed4 <fputwc+0x2c>
  109ecc:	80800e17 	ldw	r2,56(r16)
  109ed0:	10001026 	beq	r2,zero,109f14 <fputwc+0x6c>
  109ed4:	2880030b 	ldhu	r2,12(r5)
  109ed8:	10c8000c 	andi	r3,r2,8192
  109edc:	1800051e 	bne	r3,zero,109ef4 <fputwc+0x4c>
  109ee0:	28c01917 	ldw	r3,100(r5)
  109ee4:	10880014 	ori	r2,r2,8192
  109ee8:	2880030d 	sth	r2,12(r5)
  109eec:	18880014 	ori	r2,r3,8192
  109ef0:	28801915 	stw	r2,100(r5)
  109ef4:	280d883a 	mov	r6,r5
  109ef8:	8009883a 	mov	r4,r16
  109efc:	880b883a 	mov	r5,r17
  109f00:	dfc00317 	ldw	ra,12(sp)
  109f04:	dc400217 	ldw	r17,8(sp)
  109f08:	dc000117 	ldw	r16,4(sp)
  109f0c:	dec00404 	addi	sp,sp,16
  109f10:	0109d201 	jmpi	109d20 <__fputwc>
  109f14:	8009883a 	mov	r4,r16
  109f18:	d9400015 	stw	r5,0(sp)
  109f1c:	0105ce40 	call	105ce4 <__sinit>
  109f20:	d9400017 	ldw	r5,0(sp)
  109f24:	003feb06 	br	109ed4 <__alt_data_end+0xfff09ed4>

00109f28 <_fstat_r>:
  109f28:	defffd04 	addi	sp,sp,-12
  109f2c:	2805883a 	mov	r2,r5
  109f30:	dc000015 	stw	r16,0(sp)
  109f34:	04000474 	movhi	r16,17
  109f38:	dc400115 	stw	r17,4(sp)
  109f3c:	8409ca04 	addi	r16,r16,10024
  109f40:	2023883a 	mov	r17,r4
  109f44:	300b883a 	mov	r5,r6
  109f48:	1009883a 	mov	r4,r2
  109f4c:	dfc00215 	stw	ra,8(sp)
  109f50:	80000015 	stw	zero,0(r16)
  109f54:	010e17c0 	call	10e17c <fstat>
  109f58:	00ffffc4 	movi	r3,-1
  109f5c:	10c00526 	beq	r2,r3,109f74 <_fstat_r+0x4c>
  109f60:	dfc00217 	ldw	ra,8(sp)
  109f64:	dc400117 	ldw	r17,4(sp)
  109f68:	dc000017 	ldw	r16,0(sp)
  109f6c:	dec00304 	addi	sp,sp,12
  109f70:	f800283a 	ret
  109f74:	80c00017 	ldw	r3,0(r16)
  109f78:	183ff926 	beq	r3,zero,109f60 <__alt_data_end+0xfff09f60>
  109f7c:	88c00015 	stw	r3,0(r17)
  109f80:	003ff706 	br	109f60 <__alt_data_end+0xfff09f60>

00109f84 <__sfvwrite_r>:
  109f84:	30800217 	ldw	r2,8(r6)
  109f88:	10006726 	beq	r2,zero,10a128 <__sfvwrite_r+0x1a4>
  109f8c:	28c0030b 	ldhu	r3,12(r5)
  109f90:	defff404 	addi	sp,sp,-48
  109f94:	dd400715 	stw	r21,28(sp)
  109f98:	dd000615 	stw	r20,24(sp)
  109f9c:	dc000215 	stw	r16,8(sp)
  109fa0:	dfc00b15 	stw	ra,44(sp)
  109fa4:	df000a15 	stw	fp,40(sp)
  109fa8:	ddc00915 	stw	r23,36(sp)
  109fac:	dd800815 	stw	r22,32(sp)
  109fb0:	dcc00515 	stw	r19,20(sp)
  109fb4:	dc800415 	stw	r18,16(sp)
  109fb8:	dc400315 	stw	r17,12(sp)
  109fbc:	1880020c 	andi	r2,r3,8
  109fc0:	2821883a 	mov	r16,r5
  109fc4:	202b883a 	mov	r21,r4
  109fc8:	3029883a 	mov	r20,r6
  109fcc:	10002726 	beq	r2,zero,10a06c <__sfvwrite_r+0xe8>
  109fd0:	28800417 	ldw	r2,16(r5)
  109fd4:	10002526 	beq	r2,zero,10a06c <__sfvwrite_r+0xe8>
  109fd8:	1880008c 	andi	r2,r3,2
  109fdc:	a4400017 	ldw	r17,0(r20)
  109fe0:	10002a26 	beq	r2,zero,10a08c <__sfvwrite_r+0x108>
  109fe4:	05a00034 	movhi	r22,32768
  109fe8:	0027883a 	mov	r19,zero
  109fec:	0025883a 	mov	r18,zero
  109ff0:	b5bf0004 	addi	r22,r22,-1024
  109ff4:	980d883a 	mov	r6,r19
  109ff8:	a809883a 	mov	r4,r21
  109ffc:	90004626 	beq	r18,zero,10a118 <__sfvwrite_r+0x194>
  10a000:	900f883a 	mov	r7,r18
  10a004:	b480022e 	bgeu	r22,r18,10a010 <__sfvwrite_r+0x8c>
  10a008:	01e00034 	movhi	r7,32768
  10a00c:	39ff0004 	addi	r7,r7,-1024
  10a010:	80800917 	ldw	r2,36(r16)
  10a014:	81400717 	ldw	r5,28(r16)
  10a018:	103ee83a 	callr	r2
  10a01c:	0080570e 	bge	zero,r2,10a17c <__sfvwrite_r+0x1f8>
  10a020:	a0c00217 	ldw	r3,8(r20)
  10a024:	98a7883a 	add	r19,r19,r2
  10a028:	90a5c83a 	sub	r18,r18,r2
  10a02c:	1885c83a 	sub	r2,r3,r2
  10a030:	a0800215 	stw	r2,8(r20)
  10a034:	103fef1e 	bne	r2,zero,109ff4 <__alt_data_end+0xfff09ff4>
  10a038:	0005883a 	mov	r2,zero
  10a03c:	dfc00b17 	ldw	ra,44(sp)
  10a040:	df000a17 	ldw	fp,40(sp)
  10a044:	ddc00917 	ldw	r23,36(sp)
  10a048:	dd800817 	ldw	r22,32(sp)
  10a04c:	dd400717 	ldw	r21,28(sp)
  10a050:	dd000617 	ldw	r20,24(sp)
  10a054:	dcc00517 	ldw	r19,20(sp)
  10a058:	dc800417 	ldw	r18,16(sp)
  10a05c:	dc400317 	ldw	r17,12(sp)
  10a060:	dc000217 	ldw	r16,8(sp)
  10a064:	dec00c04 	addi	sp,sp,48
  10a068:	f800283a 	ret
  10a06c:	800b883a 	mov	r5,r16
  10a070:	a809883a 	mov	r4,r21
  10a074:	0103d100 	call	103d10 <__swsetup_r>
  10a078:	1000eb1e 	bne	r2,zero,10a428 <__sfvwrite_r+0x4a4>
  10a07c:	80c0030b 	ldhu	r3,12(r16)
  10a080:	a4400017 	ldw	r17,0(r20)
  10a084:	1880008c 	andi	r2,r3,2
  10a088:	103fd61e 	bne	r2,zero,109fe4 <__alt_data_end+0xfff09fe4>
  10a08c:	1880004c 	andi	r2,r3,1
  10a090:	10003f1e 	bne	r2,zero,10a190 <__sfvwrite_r+0x20c>
  10a094:	0039883a 	mov	fp,zero
  10a098:	0025883a 	mov	r18,zero
  10a09c:	90001a26 	beq	r18,zero,10a108 <__sfvwrite_r+0x184>
  10a0a0:	1880800c 	andi	r2,r3,512
  10a0a4:	84c00217 	ldw	r19,8(r16)
  10a0a8:	10002126 	beq	r2,zero,10a130 <__sfvwrite_r+0x1ac>
  10a0ac:	982f883a 	mov	r23,r19
  10a0b0:	94c09336 	bltu	r18,r19,10a300 <__sfvwrite_r+0x37c>
  10a0b4:	1881200c 	andi	r2,r3,1152
  10a0b8:	10009e1e 	bne	r2,zero,10a334 <__sfvwrite_r+0x3b0>
  10a0bc:	81000017 	ldw	r4,0(r16)
  10a0c0:	b80d883a 	mov	r6,r23
  10a0c4:	e00b883a 	mov	r5,fp
  10a0c8:	010a4f40 	call	10a4f4 <memmove>
  10a0cc:	80c00217 	ldw	r3,8(r16)
  10a0d0:	81000017 	ldw	r4,0(r16)
  10a0d4:	9005883a 	mov	r2,r18
  10a0d8:	1ce7c83a 	sub	r19,r3,r19
  10a0dc:	25cf883a 	add	r7,r4,r23
  10a0e0:	84c00215 	stw	r19,8(r16)
  10a0e4:	81c00015 	stw	r7,0(r16)
  10a0e8:	a0c00217 	ldw	r3,8(r20)
  10a0ec:	e0b9883a 	add	fp,fp,r2
  10a0f0:	90a5c83a 	sub	r18,r18,r2
  10a0f4:	18a7c83a 	sub	r19,r3,r2
  10a0f8:	a4c00215 	stw	r19,8(r20)
  10a0fc:	983fce26 	beq	r19,zero,10a038 <__alt_data_end+0xfff0a038>
  10a100:	80c0030b 	ldhu	r3,12(r16)
  10a104:	903fe61e 	bne	r18,zero,10a0a0 <__alt_data_end+0xfff0a0a0>
  10a108:	8f000017 	ldw	fp,0(r17)
  10a10c:	8c800117 	ldw	r18,4(r17)
  10a110:	8c400204 	addi	r17,r17,8
  10a114:	003fe106 	br	10a09c <__alt_data_end+0xfff0a09c>
  10a118:	8cc00017 	ldw	r19,0(r17)
  10a11c:	8c800117 	ldw	r18,4(r17)
  10a120:	8c400204 	addi	r17,r17,8
  10a124:	003fb306 	br	109ff4 <__alt_data_end+0xfff09ff4>
  10a128:	0005883a 	mov	r2,zero
  10a12c:	f800283a 	ret
  10a130:	81000017 	ldw	r4,0(r16)
  10a134:	80800417 	ldw	r2,16(r16)
  10a138:	11005736 	bltu	r2,r4,10a298 <__sfvwrite_r+0x314>
  10a13c:	85c00517 	ldw	r23,20(r16)
  10a140:	95c05536 	bltu	r18,r23,10a298 <__sfvwrite_r+0x314>
  10a144:	00a00034 	movhi	r2,32768
  10a148:	10bfffc4 	addi	r2,r2,-1
  10a14c:	9009883a 	mov	r4,r18
  10a150:	1480012e 	bgeu	r2,r18,10a158 <__sfvwrite_r+0x1d4>
  10a154:	1009883a 	mov	r4,r2
  10a158:	b80b883a 	mov	r5,r23
  10a15c:	0100dec0 	call	100dec <__divsi3>
  10a160:	15cf383a 	mul	r7,r2,r23
  10a164:	81400717 	ldw	r5,28(r16)
  10a168:	80800917 	ldw	r2,36(r16)
  10a16c:	e00d883a 	mov	r6,fp
  10a170:	a809883a 	mov	r4,r21
  10a174:	103ee83a 	callr	r2
  10a178:	00bfdb16 	blt	zero,r2,10a0e8 <__alt_data_end+0xfff0a0e8>
  10a17c:	8080030b 	ldhu	r2,12(r16)
  10a180:	10801014 	ori	r2,r2,64
  10a184:	8080030d 	sth	r2,12(r16)
  10a188:	00bfffc4 	movi	r2,-1
  10a18c:	003fab06 	br	10a03c <__alt_data_end+0xfff0a03c>
  10a190:	0027883a 	mov	r19,zero
  10a194:	0011883a 	mov	r8,zero
  10a198:	0039883a 	mov	fp,zero
  10a19c:	0025883a 	mov	r18,zero
  10a1a0:	90001f26 	beq	r18,zero,10a220 <__sfvwrite_r+0x29c>
  10a1a4:	40005a26 	beq	r8,zero,10a310 <__sfvwrite_r+0x38c>
  10a1a8:	982d883a 	mov	r22,r19
  10a1ac:	94c0012e 	bgeu	r18,r19,10a1b4 <__sfvwrite_r+0x230>
  10a1b0:	902d883a 	mov	r22,r18
  10a1b4:	81000017 	ldw	r4,0(r16)
  10a1b8:	80800417 	ldw	r2,16(r16)
  10a1bc:	b02f883a 	mov	r23,r22
  10a1c0:	81c00517 	ldw	r7,20(r16)
  10a1c4:	1100032e 	bgeu	r2,r4,10a1d4 <__sfvwrite_r+0x250>
  10a1c8:	80c00217 	ldw	r3,8(r16)
  10a1cc:	38c7883a 	add	r3,r7,r3
  10a1d0:	1d801816 	blt	r3,r22,10a234 <__sfvwrite_r+0x2b0>
  10a1d4:	b1c03e16 	blt	r22,r7,10a2d0 <__sfvwrite_r+0x34c>
  10a1d8:	80800917 	ldw	r2,36(r16)
  10a1dc:	81400717 	ldw	r5,28(r16)
  10a1e0:	e00d883a 	mov	r6,fp
  10a1e4:	da000115 	stw	r8,4(sp)
  10a1e8:	a809883a 	mov	r4,r21
  10a1ec:	103ee83a 	callr	r2
  10a1f0:	102f883a 	mov	r23,r2
  10a1f4:	da000117 	ldw	r8,4(sp)
  10a1f8:	00bfe00e 	bge	zero,r2,10a17c <__alt_data_end+0xfff0a17c>
  10a1fc:	9de7c83a 	sub	r19,r19,r23
  10a200:	98001f26 	beq	r19,zero,10a280 <__sfvwrite_r+0x2fc>
  10a204:	a0800217 	ldw	r2,8(r20)
  10a208:	e5f9883a 	add	fp,fp,r23
  10a20c:	95e5c83a 	sub	r18,r18,r23
  10a210:	15efc83a 	sub	r23,r2,r23
  10a214:	a5c00215 	stw	r23,8(r20)
  10a218:	b83f8726 	beq	r23,zero,10a038 <__alt_data_end+0xfff0a038>
  10a21c:	903fe11e 	bne	r18,zero,10a1a4 <__alt_data_end+0xfff0a1a4>
  10a220:	8f000017 	ldw	fp,0(r17)
  10a224:	8c800117 	ldw	r18,4(r17)
  10a228:	0011883a 	mov	r8,zero
  10a22c:	8c400204 	addi	r17,r17,8
  10a230:	003fdb06 	br	10a1a0 <__alt_data_end+0xfff0a1a0>
  10a234:	180d883a 	mov	r6,r3
  10a238:	e00b883a 	mov	r5,fp
  10a23c:	da000115 	stw	r8,4(sp)
  10a240:	d8c00015 	stw	r3,0(sp)
  10a244:	010a4f40 	call	10a4f4 <memmove>
  10a248:	d8c00017 	ldw	r3,0(sp)
  10a24c:	80800017 	ldw	r2,0(r16)
  10a250:	800b883a 	mov	r5,r16
  10a254:	a809883a 	mov	r4,r21
  10a258:	10c5883a 	add	r2,r2,r3
  10a25c:	80800015 	stw	r2,0(r16)
  10a260:	d8c00015 	stw	r3,0(sp)
  10a264:	01059080 	call	105908 <_fflush_r>
  10a268:	d8c00017 	ldw	r3,0(sp)
  10a26c:	da000117 	ldw	r8,4(sp)
  10a270:	103fc21e 	bne	r2,zero,10a17c <__alt_data_end+0xfff0a17c>
  10a274:	182f883a 	mov	r23,r3
  10a278:	9de7c83a 	sub	r19,r19,r23
  10a27c:	983fe11e 	bne	r19,zero,10a204 <__alt_data_end+0xfff0a204>
  10a280:	800b883a 	mov	r5,r16
  10a284:	a809883a 	mov	r4,r21
  10a288:	01059080 	call	105908 <_fflush_r>
  10a28c:	103fbb1e 	bne	r2,zero,10a17c <__alt_data_end+0xfff0a17c>
  10a290:	0011883a 	mov	r8,zero
  10a294:	003fdb06 	br	10a204 <__alt_data_end+0xfff0a204>
  10a298:	94c0012e 	bgeu	r18,r19,10a2a0 <__sfvwrite_r+0x31c>
  10a29c:	9027883a 	mov	r19,r18
  10a2a0:	980d883a 	mov	r6,r19
  10a2a4:	e00b883a 	mov	r5,fp
  10a2a8:	010a4f40 	call	10a4f4 <memmove>
  10a2ac:	80800217 	ldw	r2,8(r16)
  10a2b0:	80c00017 	ldw	r3,0(r16)
  10a2b4:	14c5c83a 	sub	r2,r2,r19
  10a2b8:	1cc7883a 	add	r3,r3,r19
  10a2bc:	80800215 	stw	r2,8(r16)
  10a2c0:	80c00015 	stw	r3,0(r16)
  10a2c4:	10004326 	beq	r2,zero,10a3d4 <__sfvwrite_r+0x450>
  10a2c8:	9805883a 	mov	r2,r19
  10a2cc:	003f8606 	br	10a0e8 <__alt_data_end+0xfff0a0e8>
  10a2d0:	b00d883a 	mov	r6,r22
  10a2d4:	e00b883a 	mov	r5,fp
  10a2d8:	da000115 	stw	r8,4(sp)
  10a2dc:	010a4f40 	call	10a4f4 <memmove>
  10a2e0:	80800217 	ldw	r2,8(r16)
  10a2e4:	80c00017 	ldw	r3,0(r16)
  10a2e8:	da000117 	ldw	r8,4(sp)
  10a2ec:	1585c83a 	sub	r2,r2,r22
  10a2f0:	1dad883a 	add	r22,r3,r22
  10a2f4:	80800215 	stw	r2,8(r16)
  10a2f8:	85800015 	stw	r22,0(r16)
  10a2fc:	003fbf06 	br	10a1fc <__alt_data_end+0xfff0a1fc>
  10a300:	81000017 	ldw	r4,0(r16)
  10a304:	9027883a 	mov	r19,r18
  10a308:	902f883a 	mov	r23,r18
  10a30c:	003f6c06 	br	10a0c0 <__alt_data_end+0xfff0a0c0>
  10a310:	900d883a 	mov	r6,r18
  10a314:	01400284 	movi	r5,10
  10a318:	e009883a 	mov	r4,fp
  10a31c:	0106d940 	call	106d94 <memchr>
  10a320:	10003e26 	beq	r2,zero,10a41c <__sfvwrite_r+0x498>
  10a324:	10800044 	addi	r2,r2,1
  10a328:	1727c83a 	sub	r19,r2,fp
  10a32c:	02000044 	movi	r8,1
  10a330:	003f9d06 	br	10a1a8 <__alt_data_end+0xfff0a1a8>
  10a334:	80800517 	ldw	r2,20(r16)
  10a338:	81400417 	ldw	r5,16(r16)
  10a33c:	81c00017 	ldw	r7,0(r16)
  10a340:	10a7883a 	add	r19,r2,r2
  10a344:	9885883a 	add	r2,r19,r2
  10a348:	1026d7fa 	srli	r19,r2,31
  10a34c:	396dc83a 	sub	r22,r7,r5
  10a350:	b1000044 	addi	r4,r22,1
  10a354:	9885883a 	add	r2,r19,r2
  10a358:	1027d07a 	srai	r19,r2,1
  10a35c:	2485883a 	add	r2,r4,r18
  10a360:	980d883a 	mov	r6,r19
  10a364:	9880022e 	bgeu	r19,r2,10a370 <__sfvwrite_r+0x3ec>
  10a368:	1027883a 	mov	r19,r2
  10a36c:	100d883a 	mov	r6,r2
  10a370:	18c1000c 	andi	r3,r3,1024
  10a374:	18001c26 	beq	r3,zero,10a3e8 <__sfvwrite_r+0x464>
  10a378:	300b883a 	mov	r5,r6
  10a37c:	a809883a 	mov	r4,r21
  10a380:	01065880 	call	106588 <_malloc_r>
  10a384:	102f883a 	mov	r23,r2
  10a388:	10002926 	beq	r2,zero,10a430 <__sfvwrite_r+0x4ac>
  10a38c:	81400417 	ldw	r5,16(r16)
  10a390:	b00d883a 	mov	r6,r22
  10a394:	1009883a 	mov	r4,r2
  10a398:	0106e780 	call	106e78 <memcpy>
  10a39c:	8080030b 	ldhu	r2,12(r16)
  10a3a0:	00fedfc4 	movi	r3,-1153
  10a3a4:	10c4703a 	and	r2,r2,r3
  10a3a8:	10802014 	ori	r2,r2,128
  10a3ac:	8080030d 	sth	r2,12(r16)
  10a3b0:	bd89883a 	add	r4,r23,r22
  10a3b4:	9d8fc83a 	sub	r7,r19,r22
  10a3b8:	85c00415 	stw	r23,16(r16)
  10a3bc:	84c00515 	stw	r19,20(r16)
  10a3c0:	81000015 	stw	r4,0(r16)
  10a3c4:	9027883a 	mov	r19,r18
  10a3c8:	81c00215 	stw	r7,8(r16)
  10a3cc:	902f883a 	mov	r23,r18
  10a3d0:	003f3b06 	br	10a0c0 <__alt_data_end+0xfff0a0c0>
  10a3d4:	800b883a 	mov	r5,r16
  10a3d8:	a809883a 	mov	r4,r21
  10a3dc:	01059080 	call	105908 <_fflush_r>
  10a3e0:	103fb926 	beq	r2,zero,10a2c8 <__alt_data_end+0xfff0a2c8>
  10a3e4:	003f6506 	br	10a17c <__alt_data_end+0xfff0a17c>
  10a3e8:	a809883a 	mov	r4,r21
  10a3ec:	010a6b00 	call	10a6b0 <_realloc_r>
  10a3f0:	102f883a 	mov	r23,r2
  10a3f4:	103fee1e 	bne	r2,zero,10a3b0 <__alt_data_end+0xfff0a3b0>
  10a3f8:	81400417 	ldw	r5,16(r16)
  10a3fc:	a809883a 	mov	r4,r21
  10a400:	0105e580 	call	105e58 <_free_r>
  10a404:	8080030b 	ldhu	r2,12(r16)
  10a408:	00ffdfc4 	movi	r3,-129
  10a40c:	1884703a 	and	r2,r3,r2
  10a410:	00c00304 	movi	r3,12
  10a414:	a8c00015 	stw	r3,0(r21)
  10a418:	003f5906 	br	10a180 <__alt_data_end+0xfff0a180>
  10a41c:	94c00044 	addi	r19,r18,1
  10a420:	02000044 	movi	r8,1
  10a424:	003f6006 	br	10a1a8 <__alt_data_end+0xfff0a1a8>
  10a428:	00bfffc4 	movi	r2,-1
  10a42c:	003f0306 	br	10a03c <__alt_data_end+0xfff0a03c>
  10a430:	00800304 	movi	r2,12
  10a434:	a8800015 	stw	r2,0(r21)
  10a438:	8080030b 	ldhu	r2,12(r16)
  10a43c:	003f5006 	br	10a180 <__alt_data_end+0xfff0a180>

0010a440 <_isatty_r>:
  10a440:	defffd04 	addi	sp,sp,-12
  10a444:	dc000015 	stw	r16,0(sp)
  10a448:	04000474 	movhi	r16,17
  10a44c:	dc400115 	stw	r17,4(sp)
  10a450:	8409ca04 	addi	r16,r16,10024
  10a454:	2023883a 	mov	r17,r4
  10a458:	2809883a 	mov	r4,r5
  10a45c:	dfc00215 	stw	ra,8(sp)
  10a460:	80000015 	stw	zero,0(r16)
  10a464:	010e2680 	call	10e268 <isatty>
  10a468:	00ffffc4 	movi	r3,-1
  10a46c:	10c00526 	beq	r2,r3,10a484 <_isatty_r+0x44>
  10a470:	dfc00217 	ldw	ra,8(sp)
  10a474:	dc400117 	ldw	r17,4(sp)
  10a478:	dc000017 	ldw	r16,0(sp)
  10a47c:	dec00304 	addi	sp,sp,12
  10a480:	f800283a 	ret
  10a484:	80c00017 	ldw	r3,0(r16)
  10a488:	183ff926 	beq	r3,zero,10a470 <__alt_data_end+0xfff0a470>
  10a48c:	88c00015 	stw	r3,0(r17)
  10a490:	003ff706 	br	10a470 <__alt_data_end+0xfff0a470>

0010a494 <_lseek_r>:
  10a494:	defffd04 	addi	sp,sp,-12
  10a498:	2805883a 	mov	r2,r5
  10a49c:	dc000015 	stw	r16,0(sp)
  10a4a0:	04000474 	movhi	r16,17
  10a4a4:	dc400115 	stw	r17,4(sp)
  10a4a8:	300b883a 	mov	r5,r6
  10a4ac:	8409ca04 	addi	r16,r16,10024
  10a4b0:	2023883a 	mov	r17,r4
  10a4b4:	380d883a 	mov	r6,r7
  10a4b8:	1009883a 	mov	r4,r2
  10a4bc:	dfc00215 	stw	ra,8(sp)
  10a4c0:	80000015 	stw	zero,0(r16)
  10a4c4:	010e4340 	call	10e434 <lseek>
  10a4c8:	00ffffc4 	movi	r3,-1
  10a4cc:	10c00526 	beq	r2,r3,10a4e4 <_lseek_r+0x50>
  10a4d0:	dfc00217 	ldw	ra,8(sp)
  10a4d4:	dc400117 	ldw	r17,4(sp)
  10a4d8:	dc000017 	ldw	r16,0(sp)
  10a4dc:	dec00304 	addi	sp,sp,12
  10a4e0:	f800283a 	ret
  10a4e4:	80c00017 	ldw	r3,0(r16)
  10a4e8:	183ff926 	beq	r3,zero,10a4d0 <__alt_data_end+0xfff0a4d0>
  10a4ec:	88c00015 	stw	r3,0(r17)
  10a4f0:	003ff706 	br	10a4d0 <__alt_data_end+0xfff0a4d0>

0010a4f4 <memmove>:
  10a4f4:	2005883a 	mov	r2,r4
  10a4f8:	29000b2e 	bgeu	r5,r4,10a528 <memmove+0x34>
  10a4fc:	298f883a 	add	r7,r5,r6
  10a500:	21c0092e 	bgeu	r4,r7,10a528 <memmove+0x34>
  10a504:	2187883a 	add	r3,r4,r6
  10a508:	198bc83a 	sub	r5,r3,r6
  10a50c:	30004826 	beq	r6,zero,10a630 <memmove+0x13c>
  10a510:	39ffffc4 	addi	r7,r7,-1
  10a514:	39000003 	ldbu	r4,0(r7)
  10a518:	18ffffc4 	addi	r3,r3,-1
  10a51c:	19000005 	stb	r4,0(r3)
  10a520:	28fffb1e 	bne	r5,r3,10a510 <__alt_data_end+0xfff0a510>
  10a524:	f800283a 	ret
  10a528:	00c003c4 	movi	r3,15
  10a52c:	1980412e 	bgeu	r3,r6,10a634 <memmove+0x140>
  10a530:	2886b03a 	or	r3,r5,r2
  10a534:	18c000cc 	andi	r3,r3,3
  10a538:	1800401e 	bne	r3,zero,10a63c <memmove+0x148>
  10a53c:	33fffc04 	addi	r15,r6,-16
  10a540:	781ed13a 	srli	r15,r15,4
  10a544:	28c00104 	addi	r3,r5,4
  10a548:	13400104 	addi	r13,r2,4
  10a54c:	781c913a 	slli	r14,r15,4
  10a550:	2b000204 	addi	r12,r5,8
  10a554:	12c00204 	addi	r11,r2,8
  10a558:	73800504 	addi	r14,r14,20
  10a55c:	2a800304 	addi	r10,r5,12
  10a560:	12400304 	addi	r9,r2,12
  10a564:	2b9d883a 	add	r14,r5,r14
  10a568:	2811883a 	mov	r8,r5
  10a56c:	100f883a 	mov	r7,r2
  10a570:	41000017 	ldw	r4,0(r8)
  10a574:	39c00404 	addi	r7,r7,16
  10a578:	18c00404 	addi	r3,r3,16
  10a57c:	393ffc15 	stw	r4,-16(r7)
  10a580:	193ffc17 	ldw	r4,-16(r3)
  10a584:	6b400404 	addi	r13,r13,16
  10a588:	5ac00404 	addi	r11,r11,16
  10a58c:	693ffc15 	stw	r4,-16(r13)
  10a590:	61000017 	ldw	r4,0(r12)
  10a594:	4a400404 	addi	r9,r9,16
  10a598:	42000404 	addi	r8,r8,16
  10a59c:	593ffc15 	stw	r4,-16(r11)
  10a5a0:	51000017 	ldw	r4,0(r10)
  10a5a4:	63000404 	addi	r12,r12,16
  10a5a8:	52800404 	addi	r10,r10,16
  10a5ac:	493ffc15 	stw	r4,-16(r9)
  10a5b0:	1bbfef1e 	bne	r3,r14,10a570 <__alt_data_end+0xfff0a570>
  10a5b4:	79000044 	addi	r4,r15,1
  10a5b8:	2008913a 	slli	r4,r4,4
  10a5bc:	328003cc 	andi	r10,r6,15
  10a5c0:	02c000c4 	movi	r11,3
  10a5c4:	1107883a 	add	r3,r2,r4
  10a5c8:	290b883a 	add	r5,r5,r4
  10a5cc:	5a801e2e 	bgeu	r11,r10,10a648 <memmove+0x154>
  10a5d0:	1813883a 	mov	r9,r3
  10a5d4:	2811883a 	mov	r8,r5
  10a5d8:	500f883a 	mov	r7,r10
  10a5dc:	41000017 	ldw	r4,0(r8)
  10a5e0:	4a400104 	addi	r9,r9,4
  10a5e4:	39ffff04 	addi	r7,r7,-4
  10a5e8:	493fff15 	stw	r4,-4(r9)
  10a5ec:	42000104 	addi	r8,r8,4
  10a5f0:	59fffa36 	bltu	r11,r7,10a5dc <__alt_data_end+0xfff0a5dc>
  10a5f4:	513fff04 	addi	r4,r10,-4
  10a5f8:	2008d0ba 	srli	r4,r4,2
  10a5fc:	318000cc 	andi	r6,r6,3
  10a600:	21000044 	addi	r4,r4,1
  10a604:	2109883a 	add	r4,r4,r4
  10a608:	2109883a 	add	r4,r4,r4
  10a60c:	1907883a 	add	r3,r3,r4
  10a610:	290b883a 	add	r5,r5,r4
  10a614:	30000b26 	beq	r6,zero,10a644 <memmove+0x150>
  10a618:	198d883a 	add	r6,r3,r6
  10a61c:	29c00003 	ldbu	r7,0(r5)
  10a620:	18c00044 	addi	r3,r3,1
  10a624:	29400044 	addi	r5,r5,1
  10a628:	19ffffc5 	stb	r7,-1(r3)
  10a62c:	19bffb1e 	bne	r3,r6,10a61c <__alt_data_end+0xfff0a61c>
  10a630:	f800283a 	ret
  10a634:	1007883a 	mov	r3,r2
  10a638:	003ff606 	br	10a614 <__alt_data_end+0xfff0a614>
  10a63c:	1007883a 	mov	r3,r2
  10a640:	003ff506 	br	10a618 <__alt_data_end+0xfff0a618>
  10a644:	f800283a 	ret
  10a648:	500d883a 	mov	r6,r10
  10a64c:	003ff106 	br	10a614 <__alt_data_end+0xfff0a614>

0010a650 <_read_r>:
  10a650:	defffd04 	addi	sp,sp,-12
  10a654:	2805883a 	mov	r2,r5
  10a658:	dc000015 	stw	r16,0(sp)
  10a65c:	04000474 	movhi	r16,17
  10a660:	dc400115 	stw	r17,4(sp)
  10a664:	300b883a 	mov	r5,r6
  10a668:	8409ca04 	addi	r16,r16,10024
  10a66c:	2023883a 	mov	r17,r4
  10a670:	380d883a 	mov	r6,r7
  10a674:	1009883a 	mov	r4,r2
  10a678:	dfc00215 	stw	ra,8(sp)
  10a67c:	80000015 	stw	zero,0(r16)
  10a680:	010e6080 	call	10e608 <read>
  10a684:	00ffffc4 	movi	r3,-1
  10a688:	10c00526 	beq	r2,r3,10a6a0 <_read_r+0x50>
  10a68c:	dfc00217 	ldw	ra,8(sp)
  10a690:	dc400117 	ldw	r17,4(sp)
  10a694:	dc000017 	ldw	r16,0(sp)
  10a698:	dec00304 	addi	sp,sp,12
  10a69c:	f800283a 	ret
  10a6a0:	80c00017 	ldw	r3,0(r16)
  10a6a4:	183ff926 	beq	r3,zero,10a68c <__alt_data_end+0xfff0a68c>
  10a6a8:	88c00015 	stw	r3,0(r17)
  10a6ac:	003ff706 	br	10a68c <__alt_data_end+0xfff0a68c>

0010a6b0 <_realloc_r>:
  10a6b0:	defff604 	addi	sp,sp,-40
  10a6b4:	dc800215 	stw	r18,8(sp)
  10a6b8:	dfc00915 	stw	ra,36(sp)
  10a6bc:	df000815 	stw	fp,32(sp)
  10a6c0:	ddc00715 	stw	r23,28(sp)
  10a6c4:	dd800615 	stw	r22,24(sp)
  10a6c8:	dd400515 	stw	r21,20(sp)
  10a6cc:	dd000415 	stw	r20,16(sp)
  10a6d0:	dcc00315 	stw	r19,12(sp)
  10a6d4:	dc400115 	stw	r17,4(sp)
  10a6d8:	dc000015 	stw	r16,0(sp)
  10a6dc:	3025883a 	mov	r18,r6
  10a6e0:	2800b726 	beq	r5,zero,10a9c0 <_realloc_r+0x310>
  10a6e4:	282b883a 	mov	r21,r5
  10a6e8:	2029883a 	mov	r20,r4
  10a6ec:	010e5840 	call	10e584 <__malloc_lock>
  10a6f0:	a8bfff17 	ldw	r2,-4(r21)
  10a6f4:	043fff04 	movi	r16,-4
  10a6f8:	90c002c4 	addi	r3,r18,11
  10a6fc:	01000584 	movi	r4,22
  10a700:	acfffe04 	addi	r19,r21,-8
  10a704:	1420703a 	and	r16,r2,r16
  10a708:	20c0332e 	bgeu	r4,r3,10a7d8 <_realloc_r+0x128>
  10a70c:	047ffe04 	movi	r17,-8
  10a710:	1c62703a 	and	r17,r3,r17
  10a714:	8807883a 	mov	r3,r17
  10a718:	88005816 	blt	r17,zero,10a87c <_realloc_r+0x1cc>
  10a71c:	8c805736 	bltu	r17,r18,10a87c <_realloc_r+0x1cc>
  10a720:	80c0300e 	bge	r16,r3,10a7e4 <_realloc_r+0x134>
  10a724:	07000474 	movhi	fp,17
  10a728:	e7040e04 	addi	fp,fp,4152
  10a72c:	e1c00217 	ldw	r7,8(fp)
  10a730:	9c09883a 	add	r4,r19,r16
  10a734:	22000117 	ldw	r8,4(r4)
  10a738:	21c06326 	beq	r4,r7,10a8c8 <_realloc_r+0x218>
  10a73c:	017fff84 	movi	r5,-2
  10a740:	414a703a 	and	r5,r8,r5
  10a744:	214b883a 	add	r5,r4,r5
  10a748:	29800117 	ldw	r6,4(r5)
  10a74c:	3180004c 	andi	r6,r6,1
  10a750:	30003f26 	beq	r6,zero,10a850 <_realloc_r+0x1a0>
  10a754:	1080004c 	andi	r2,r2,1
  10a758:	10008326 	beq	r2,zero,10a968 <_realloc_r+0x2b8>
  10a75c:	900b883a 	mov	r5,r18
  10a760:	a009883a 	mov	r4,r20
  10a764:	01065880 	call	106588 <_malloc_r>
  10a768:	1025883a 	mov	r18,r2
  10a76c:	10011e26 	beq	r2,zero,10abe8 <_realloc_r+0x538>
  10a770:	a93fff17 	ldw	r4,-4(r21)
  10a774:	10fffe04 	addi	r3,r2,-8
  10a778:	00bfff84 	movi	r2,-2
  10a77c:	2084703a 	and	r2,r4,r2
  10a780:	9885883a 	add	r2,r19,r2
  10a784:	1880ee26 	beq	r3,r2,10ab40 <_realloc_r+0x490>
  10a788:	81bfff04 	addi	r6,r16,-4
  10a78c:	00800904 	movi	r2,36
  10a790:	1180b836 	bltu	r2,r6,10aa74 <_realloc_r+0x3c4>
  10a794:	00c004c4 	movi	r3,19
  10a798:	19809636 	bltu	r3,r6,10a9f4 <_realloc_r+0x344>
  10a79c:	9005883a 	mov	r2,r18
  10a7a0:	a807883a 	mov	r3,r21
  10a7a4:	19000017 	ldw	r4,0(r3)
  10a7a8:	11000015 	stw	r4,0(r2)
  10a7ac:	19000117 	ldw	r4,4(r3)
  10a7b0:	11000115 	stw	r4,4(r2)
  10a7b4:	18c00217 	ldw	r3,8(r3)
  10a7b8:	10c00215 	stw	r3,8(r2)
  10a7bc:	a80b883a 	mov	r5,r21
  10a7c0:	a009883a 	mov	r4,r20
  10a7c4:	0105e580 	call	105e58 <_free_r>
  10a7c8:	a009883a 	mov	r4,r20
  10a7cc:	010e5a80 	call	10e5a8 <__malloc_unlock>
  10a7d0:	9005883a 	mov	r2,r18
  10a7d4:	00001206 	br	10a820 <_realloc_r+0x170>
  10a7d8:	00c00404 	movi	r3,16
  10a7dc:	1823883a 	mov	r17,r3
  10a7e0:	003fce06 	br	10a71c <__alt_data_end+0xfff0a71c>
  10a7e4:	a825883a 	mov	r18,r21
  10a7e8:	8445c83a 	sub	r2,r16,r17
  10a7ec:	00c003c4 	movi	r3,15
  10a7f0:	18802636 	bltu	r3,r2,10a88c <_realloc_r+0x1dc>
  10a7f4:	99800117 	ldw	r6,4(r19)
  10a7f8:	9c07883a 	add	r3,r19,r16
  10a7fc:	3180004c 	andi	r6,r6,1
  10a800:	3420b03a 	or	r16,r6,r16
  10a804:	9c000115 	stw	r16,4(r19)
  10a808:	18800117 	ldw	r2,4(r3)
  10a80c:	10800054 	ori	r2,r2,1
  10a810:	18800115 	stw	r2,4(r3)
  10a814:	a009883a 	mov	r4,r20
  10a818:	010e5a80 	call	10e5a8 <__malloc_unlock>
  10a81c:	9005883a 	mov	r2,r18
  10a820:	dfc00917 	ldw	ra,36(sp)
  10a824:	df000817 	ldw	fp,32(sp)
  10a828:	ddc00717 	ldw	r23,28(sp)
  10a82c:	dd800617 	ldw	r22,24(sp)
  10a830:	dd400517 	ldw	r21,20(sp)
  10a834:	dd000417 	ldw	r20,16(sp)
  10a838:	dcc00317 	ldw	r19,12(sp)
  10a83c:	dc800217 	ldw	r18,8(sp)
  10a840:	dc400117 	ldw	r17,4(sp)
  10a844:	dc000017 	ldw	r16,0(sp)
  10a848:	dec00a04 	addi	sp,sp,40
  10a84c:	f800283a 	ret
  10a850:	017fff04 	movi	r5,-4
  10a854:	414a703a 	and	r5,r8,r5
  10a858:	814d883a 	add	r6,r16,r5
  10a85c:	30c01f16 	blt	r6,r3,10a8dc <_realloc_r+0x22c>
  10a860:	20800317 	ldw	r2,12(r4)
  10a864:	20c00217 	ldw	r3,8(r4)
  10a868:	a825883a 	mov	r18,r21
  10a86c:	3021883a 	mov	r16,r6
  10a870:	18800315 	stw	r2,12(r3)
  10a874:	10c00215 	stw	r3,8(r2)
  10a878:	003fdb06 	br	10a7e8 <__alt_data_end+0xfff0a7e8>
  10a87c:	00800304 	movi	r2,12
  10a880:	a0800015 	stw	r2,0(r20)
  10a884:	0005883a 	mov	r2,zero
  10a888:	003fe506 	br	10a820 <__alt_data_end+0xfff0a820>
  10a88c:	98c00117 	ldw	r3,4(r19)
  10a890:	9c4b883a 	add	r5,r19,r17
  10a894:	11000054 	ori	r4,r2,1
  10a898:	18c0004c 	andi	r3,r3,1
  10a89c:	1c62b03a 	or	r17,r3,r17
  10a8a0:	9c400115 	stw	r17,4(r19)
  10a8a4:	29000115 	stw	r4,4(r5)
  10a8a8:	2885883a 	add	r2,r5,r2
  10a8ac:	10c00117 	ldw	r3,4(r2)
  10a8b0:	29400204 	addi	r5,r5,8
  10a8b4:	a009883a 	mov	r4,r20
  10a8b8:	18c00054 	ori	r3,r3,1
  10a8bc:	10c00115 	stw	r3,4(r2)
  10a8c0:	0105e580 	call	105e58 <_free_r>
  10a8c4:	003fd306 	br	10a814 <__alt_data_end+0xfff0a814>
  10a8c8:	017fff04 	movi	r5,-4
  10a8cc:	414a703a 	and	r5,r8,r5
  10a8d0:	89800404 	addi	r6,r17,16
  10a8d4:	8151883a 	add	r8,r16,r5
  10a8d8:	4180590e 	bge	r8,r6,10aa40 <_realloc_r+0x390>
  10a8dc:	1080004c 	andi	r2,r2,1
  10a8e0:	103f9e1e 	bne	r2,zero,10a75c <__alt_data_end+0xfff0a75c>
  10a8e4:	adbffe17 	ldw	r22,-8(r21)
  10a8e8:	00bfff04 	movi	r2,-4
  10a8ec:	9dadc83a 	sub	r22,r19,r22
  10a8f0:	b1800117 	ldw	r6,4(r22)
  10a8f4:	3084703a 	and	r2,r6,r2
  10a8f8:	20002026 	beq	r4,zero,10a97c <_realloc_r+0x2cc>
  10a8fc:	80af883a 	add	r23,r16,r2
  10a900:	b96f883a 	add	r23,r23,r5
  10a904:	21c05f26 	beq	r4,r7,10aa84 <_realloc_r+0x3d4>
  10a908:	b8c01c16 	blt	r23,r3,10a97c <_realloc_r+0x2cc>
  10a90c:	20800317 	ldw	r2,12(r4)
  10a910:	20c00217 	ldw	r3,8(r4)
  10a914:	81bfff04 	addi	r6,r16,-4
  10a918:	01000904 	movi	r4,36
  10a91c:	18800315 	stw	r2,12(r3)
  10a920:	10c00215 	stw	r3,8(r2)
  10a924:	b0c00217 	ldw	r3,8(r22)
  10a928:	b0800317 	ldw	r2,12(r22)
  10a92c:	b4800204 	addi	r18,r22,8
  10a930:	18800315 	stw	r2,12(r3)
  10a934:	10c00215 	stw	r3,8(r2)
  10a938:	21801b36 	bltu	r4,r6,10a9a8 <_realloc_r+0x2f8>
  10a93c:	008004c4 	movi	r2,19
  10a940:	1180352e 	bgeu	r2,r6,10aa18 <_realloc_r+0x368>
  10a944:	a8800017 	ldw	r2,0(r21)
  10a948:	b0800215 	stw	r2,8(r22)
  10a94c:	a8800117 	ldw	r2,4(r21)
  10a950:	b0800315 	stw	r2,12(r22)
  10a954:	008006c4 	movi	r2,27
  10a958:	11807f36 	bltu	r2,r6,10ab58 <_realloc_r+0x4a8>
  10a95c:	b0800404 	addi	r2,r22,16
  10a960:	ad400204 	addi	r21,r21,8
  10a964:	00002d06 	br	10aa1c <_realloc_r+0x36c>
  10a968:	adbffe17 	ldw	r22,-8(r21)
  10a96c:	00bfff04 	movi	r2,-4
  10a970:	9dadc83a 	sub	r22,r19,r22
  10a974:	b1000117 	ldw	r4,4(r22)
  10a978:	2084703a 	and	r2,r4,r2
  10a97c:	b03f7726 	beq	r22,zero,10a75c <__alt_data_end+0xfff0a75c>
  10a980:	80af883a 	add	r23,r16,r2
  10a984:	b8ff7516 	blt	r23,r3,10a75c <__alt_data_end+0xfff0a75c>
  10a988:	b0800317 	ldw	r2,12(r22)
  10a98c:	b0c00217 	ldw	r3,8(r22)
  10a990:	81bfff04 	addi	r6,r16,-4
  10a994:	01000904 	movi	r4,36
  10a998:	18800315 	stw	r2,12(r3)
  10a99c:	10c00215 	stw	r3,8(r2)
  10a9a0:	b4800204 	addi	r18,r22,8
  10a9a4:	21bfe52e 	bgeu	r4,r6,10a93c <__alt_data_end+0xfff0a93c>
  10a9a8:	a80b883a 	mov	r5,r21
  10a9ac:	9009883a 	mov	r4,r18
  10a9b0:	010a4f40 	call	10a4f4 <memmove>
  10a9b4:	b821883a 	mov	r16,r23
  10a9b8:	b027883a 	mov	r19,r22
  10a9bc:	003f8a06 	br	10a7e8 <__alt_data_end+0xfff0a7e8>
  10a9c0:	300b883a 	mov	r5,r6
  10a9c4:	dfc00917 	ldw	ra,36(sp)
  10a9c8:	df000817 	ldw	fp,32(sp)
  10a9cc:	ddc00717 	ldw	r23,28(sp)
  10a9d0:	dd800617 	ldw	r22,24(sp)
  10a9d4:	dd400517 	ldw	r21,20(sp)
  10a9d8:	dd000417 	ldw	r20,16(sp)
  10a9dc:	dcc00317 	ldw	r19,12(sp)
  10a9e0:	dc800217 	ldw	r18,8(sp)
  10a9e4:	dc400117 	ldw	r17,4(sp)
  10a9e8:	dc000017 	ldw	r16,0(sp)
  10a9ec:	dec00a04 	addi	sp,sp,40
  10a9f0:	01065881 	jmpi	106588 <_malloc_r>
  10a9f4:	a8c00017 	ldw	r3,0(r21)
  10a9f8:	90c00015 	stw	r3,0(r18)
  10a9fc:	a8c00117 	ldw	r3,4(r21)
  10aa00:	90c00115 	stw	r3,4(r18)
  10aa04:	00c006c4 	movi	r3,27
  10aa08:	19804536 	bltu	r3,r6,10ab20 <_realloc_r+0x470>
  10aa0c:	90800204 	addi	r2,r18,8
  10aa10:	a8c00204 	addi	r3,r21,8
  10aa14:	003f6306 	br	10a7a4 <__alt_data_end+0xfff0a7a4>
  10aa18:	9005883a 	mov	r2,r18
  10aa1c:	a8c00017 	ldw	r3,0(r21)
  10aa20:	b821883a 	mov	r16,r23
  10aa24:	b027883a 	mov	r19,r22
  10aa28:	10c00015 	stw	r3,0(r2)
  10aa2c:	a8c00117 	ldw	r3,4(r21)
  10aa30:	10c00115 	stw	r3,4(r2)
  10aa34:	a8c00217 	ldw	r3,8(r21)
  10aa38:	10c00215 	stw	r3,8(r2)
  10aa3c:	003f6a06 	br	10a7e8 <__alt_data_end+0xfff0a7e8>
  10aa40:	9c67883a 	add	r19,r19,r17
  10aa44:	4445c83a 	sub	r2,r8,r17
  10aa48:	e4c00215 	stw	r19,8(fp)
  10aa4c:	10800054 	ori	r2,r2,1
  10aa50:	98800115 	stw	r2,4(r19)
  10aa54:	a8bfff17 	ldw	r2,-4(r21)
  10aa58:	a009883a 	mov	r4,r20
  10aa5c:	1080004c 	andi	r2,r2,1
  10aa60:	1462b03a 	or	r17,r2,r17
  10aa64:	ac7fff15 	stw	r17,-4(r21)
  10aa68:	010e5a80 	call	10e5a8 <__malloc_unlock>
  10aa6c:	a805883a 	mov	r2,r21
  10aa70:	003f6b06 	br	10a820 <__alt_data_end+0xfff0a820>
  10aa74:	a80b883a 	mov	r5,r21
  10aa78:	9009883a 	mov	r4,r18
  10aa7c:	010a4f40 	call	10a4f4 <memmove>
  10aa80:	003f4e06 	br	10a7bc <__alt_data_end+0xfff0a7bc>
  10aa84:	89000404 	addi	r4,r17,16
  10aa88:	b93fbc16 	blt	r23,r4,10a97c <__alt_data_end+0xfff0a97c>
  10aa8c:	b0800317 	ldw	r2,12(r22)
  10aa90:	b0c00217 	ldw	r3,8(r22)
  10aa94:	81bfff04 	addi	r6,r16,-4
  10aa98:	01000904 	movi	r4,36
  10aa9c:	18800315 	stw	r2,12(r3)
  10aaa0:	10c00215 	stw	r3,8(r2)
  10aaa4:	b4800204 	addi	r18,r22,8
  10aaa8:	21804336 	bltu	r4,r6,10abb8 <_realloc_r+0x508>
  10aaac:	008004c4 	movi	r2,19
  10aab0:	11803f2e 	bgeu	r2,r6,10abb0 <_realloc_r+0x500>
  10aab4:	a8800017 	ldw	r2,0(r21)
  10aab8:	b0800215 	stw	r2,8(r22)
  10aabc:	a8800117 	ldw	r2,4(r21)
  10aac0:	b0800315 	stw	r2,12(r22)
  10aac4:	008006c4 	movi	r2,27
  10aac8:	11803f36 	bltu	r2,r6,10abc8 <_realloc_r+0x518>
  10aacc:	b0800404 	addi	r2,r22,16
  10aad0:	ad400204 	addi	r21,r21,8
  10aad4:	a8c00017 	ldw	r3,0(r21)
  10aad8:	10c00015 	stw	r3,0(r2)
  10aadc:	a8c00117 	ldw	r3,4(r21)
  10aae0:	10c00115 	stw	r3,4(r2)
  10aae4:	a8c00217 	ldw	r3,8(r21)
  10aae8:	10c00215 	stw	r3,8(r2)
  10aaec:	b447883a 	add	r3,r22,r17
  10aaf0:	bc45c83a 	sub	r2,r23,r17
  10aaf4:	e0c00215 	stw	r3,8(fp)
  10aaf8:	10800054 	ori	r2,r2,1
  10aafc:	18800115 	stw	r2,4(r3)
  10ab00:	b0800117 	ldw	r2,4(r22)
  10ab04:	a009883a 	mov	r4,r20
  10ab08:	1080004c 	andi	r2,r2,1
  10ab0c:	1462b03a 	or	r17,r2,r17
  10ab10:	b4400115 	stw	r17,4(r22)
  10ab14:	010e5a80 	call	10e5a8 <__malloc_unlock>
  10ab18:	9005883a 	mov	r2,r18
  10ab1c:	003f4006 	br	10a820 <__alt_data_end+0xfff0a820>
  10ab20:	a8c00217 	ldw	r3,8(r21)
  10ab24:	90c00215 	stw	r3,8(r18)
  10ab28:	a8c00317 	ldw	r3,12(r21)
  10ab2c:	90c00315 	stw	r3,12(r18)
  10ab30:	30801126 	beq	r6,r2,10ab78 <_realloc_r+0x4c8>
  10ab34:	90800404 	addi	r2,r18,16
  10ab38:	a8c00404 	addi	r3,r21,16
  10ab3c:	003f1906 	br	10a7a4 <__alt_data_end+0xfff0a7a4>
  10ab40:	90ffff17 	ldw	r3,-4(r18)
  10ab44:	00bfff04 	movi	r2,-4
  10ab48:	a825883a 	mov	r18,r21
  10ab4c:	1884703a 	and	r2,r3,r2
  10ab50:	80a1883a 	add	r16,r16,r2
  10ab54:	003f2406 	br	10a7e8 <__alt_data_end+0xfff0a7e8>
  10ab58:	a8800217 	ldw	r2,8(r21)
  10ab5c:	b0800415 	stw	r2,16(r22)
  10ab60:	a8800317 	ldw	r2,12(r21)
  10ab64:	b0800515 	stw	r2,20(r22)
  10ab68:	31000a26 	beq	r6,r4,10ab94 <_realloc_r+0x4e4>
  10ab6c:	b0800604 	addi	r2,r22,24
  10ab70:	ad400404 	addi	r21,r21,16
  10ab74:	003fa906 	br	10aa1c <__alt_data_end+0xfff0aa1c>
  10ab78:	a9000417 	ldw	r4,16(r21)
  10ab7c:	90800604 	addi	r2,r18,24
  10ab80:	a8c00604 	addi	r3,r21,24
  10ab84:	91000415 	stw	r4,16(r18)
  10ab88:	a9000517 	ldw	r4,20(r21)
  10ab8c:	91000515 	stw	r4,20(r18)
  10ab90:	003f0406 	br	10a7a4 <__alt_data_end+0xfff0a7a4>
  10ab94:	a8c00417 	ldw	r3,16(r21)
  10ab98:	ad400604 	addi	r21,r21,24
  10ab9c:	b0800804 	addi	r2,r22,32
  10aba0:	b0c00615 	stw	r3,24(r22)
  10aba4:	a8ffff17 	ldw	r3,-4(r21)
  10aba8:	b0c00715 	stw	r3,28(r22)
  10abac:	003f9b06 	br	10aa1c <__alt_data_end+0xfff0aa1c>
  10abb0:	9005883a 	mov	r2,r18
  10abb4:	003fc706 	br	10aad4 <__alt_data_end+0xfff0aad4>
  10abb8:	a80b883a 	mov	r5,r21
  10abbc:	9009883a 	mov	r4,r18
  10abc0:	010a4f40 	call	10a4f4 <memmove>
  10abc4:	003fc906 	br	10aaec <__alt_data_end+0xfff0aaec>
  10abc8:	a8800217 	ldw	r2,8(r21)
  10abcc:	b0800415 	stw	r2,16(r22)
  10abd0:	a8800317 	ldw	r2,12(r21)
  10abd4:	b0800515 	stw	r2,20(r22)
  10abd8:	31000726 	beq	r6,r4,10abf8 <_realloc_r+0x548>
  10abdc:	b0800604 	addi	r2,r22,24
  10abe0:	ad400404 	addi	r21,r21,16
  10abe4:	003fbb06 	br	10aad4 <__alt_data_end+0xfff0aad4>
  10abe8:	a009883a 	mov	r4,r20
  10abec:	010e5a80 	call	10e5a8 <__malloc_unlock>
  10abf0:	0005883a 	mov	r2,zero
  10abf4:	003f0a06 	br	10a820 <__alt_data_end+0xfff0a820>
  10abf8:	a8c00417 	ldw	r3,16(r21)
  10abfc:	ad400604 	addi	r21,r21,24
  10ac00:	b0800804 	addi	r2,r22,32
  10ac04:	b0c00615 	stw	r3,24(r22)
  10ac08:	a8ffff17 	ldw	r3,-4(r21)
  10ac0c:	b0c00715 	stw	r3,28(r22)
  10ac10:	003fb006 	br	10aad4 <__alt_data_end+0xfff0aad4>

0010ac14 <__swbuf_r>:
  10ac14:	defffb04 	addi	sp,sp,-20
  10ac18:	dcc00315 	stw	r19,12(sp)
  10ac1c:	dc800215 	stw	r18,8(sp)
  10ac20:	dc000015 	stw	r16,0(sp)
  10ac24:	dfc00415 	stw	ra,16(sp)
  10ac28:	dc400115 	stw	r17,4(sp)
  10ac2c:	2025883a 	mov	r18,r4
  10ac30:	2827883a 	mov	r19,r5
  10ac34:	3021883a 	mov	r16,r6
  10ac38:	20000226 	beq	r4,zero,10ac44 <__swbuf_r+0x30>
  10ac3c:	20800e17 	ldw	r2,56(r4)
  10ac40:	10004226 	beq	r2,zero,10ad4c <__swbuf_r+0x138>
  10ac44:	80800617 	ldw	r2,24(r16)
  10ac48:	8100030b 	ldhu	r4,12(r16)
  10ac4c:	80800215 	stw	r2,8(r16)
  10ac50:	2080020c 	andi	r2,r4,8
  10ac54:	10003626 	beq	r2,zero,10ad30 <__swbuf_r+0x11c>
  10ac58:	80c00417 	ldw	r3,16(r16)
  10ac5c:	18003426 	beq	r3,zero,10ad30 <__swbuf_r+0x11c>
  10ac60:	2088000c 	andi	r2,r4,8192
  10ac64:	9c403fcc 	andi	r17,r19,255
  10ac68:	10001a26 	beq	r2,zero,10acd4 <__swbuf_r+0xc0>
  10ac6c:	80800017 	ldw	r2,0(r16)
  10ac70:	81000517 	ldw	r4,20(r16)
  10ac74:	10c7c83a 	sub	r3,r2,r3
  10ac78:	1900200e 	bge	r3,r4,10acfc <__swbuf_r+0xe8>
  10ac7c:	18c00044 	addi	r3,r3,1
  10ac80:	81000217 	ldw	r4,8(r16)
  10ac84:	11400044 	addi	r5,r2,1
  10ac88:	81400015 	stw	r5,0(r16)
  10ac8c:	213fffc4 	addi	r4,r4,-1
  10ac90:	81000215 	stw	r4,8(r16)
  10ac94:	14c00005 	stb	r19,0(r2)
  10ac98:	80800517 	ldw	r2,20(r16)
  10ac9c:	10c01e26 	beq	r2,r3,10ad18 <__swbuf_r+0x104>
  10aca0:	8080030b 	ldhu	r2,12(r16)
  10aca4:	1080004c 	andi	r2,r2,1
  10aca8:	10000226 	beq	r2,zero,10acb4 <__swbuf_r+0xa0>
  10acac:	00800284 	movi	r2,10
  10acb0:	88801926 	beq	r17,r2,10ad18 <__swbuf_r+0x104>
  10acb4:	8805883a 	mov	r2,r17
  10acb8:	dfc00417 	ldw	ra,16(sp)
  10acbc:	dcc00317 	ldw	r19,12(sp)
  10acc0:	dc800217 	ldw	r18,8(sp)
  10acc4:	dc400117 	ldw	r17,4(sp)
  10acc8:	dc000017 	ldw	r16,0(sp)
  10accc:	dec00504 	addi	sp,sp,20
  10acd0:	f800283a 	ret
  10acd4:	81401917 	ldw	r5,100(r16)
  10acd8:	00b7ffc4 	movi	r2,-8193
  10acdc:	21080014 	ori	r4,r4,8192
  10ace0:	2884703a 	and	r2,r5,r2
  10ace4:	80801915 	stw	r2,100(r16)
  10ace8:	80800017 	ldw	r2,0(r16)
  10acec:	8100030d 	sth	r4,12(r16)
  10acf0:	81000517 	ldw	r4,20(r16)
  10acf4:	10c7c83a 	sub	r3,r2,r3
  10acf8:	193fe016 	blt	r3,r4,10ac7c <__alt_data_end+0xfff0ac7c>
  10acfc:	800b883a 	mov	r5,r16
  10ad00:	9009883a 	mov	r4,r18
  10ad04:	01059080 	call	105908 <_fflush_r>
  10ad08:	1000071e 	bne	r2,zero,10ad28 <__swbuf_r+0x114>
  10ad0c:	80800017 	ldw	r2,0(r16)
  10ad10:	00c00044 	movi	r3,1
  10ad14:	003fda06 	br	10ac80 <__alt_data_end+0xfff0ac80>
  10ad18:	800b883a 	mov	r5,r16
  10ad1c:	9009883a 	mov	r4,r18
  10ad20:	01059080 	call	105908 <_fflush_r>
  10ad24:	103fe326 	beq	r2,zero,10acb4 <__alt_data_end+0xfff0acb4>
  10ad28:	00bfffc4 	movi	r2,-1
  10ad2c:	003fe206 	br	10acb8 <__alt_data_end+0xfff0acb8>
  10ad30:	800b883a 	mov	r5,r16
  10ad34:	9009883a 	mov	r4,r18
  10ad38:	0103d100 	call	103d10 <__swsetup_r>
  10ad3c:	103ffa1e 	bne	r2,zero,10ad28 <__alt_data_end+0xfff0ad28>
  10ad40:	8100030b 	ldhu	r4,12(r16)
  10ad44:	80c00417 	ldw	r3,16(r16)
  10ad48:	003fc506 	br	10ac60 <__alt_data_end+0xfff0ac60>
  10ad4c:	0105ce40 	call	105ce4 <__sinit>
  10ad50:	003fbc06 	br	10ac44 <__alt_data_end+0xfff0ac44>

0010ad54 <__swbuf>:
  10ad54:	00800474 	movhi	r2,17
  10ad58:	1085ac04 	addi	r2,r2,5808
  10ad5c:	280d883a 	mov	r6,r5
  10ad60:	200b883a 	mov	r5,r4
  10ad64:	11000017 	ldw	r4,0(r2)
  10ad68:	010ac141 	jmpi	10ac14 <__swbuf_r>

0010ad6c <_wcrtomb_r>:
  10ad6c:	defff604 	addi	sp,sp,-40
  10ad70:	00800474 	movhi	r2,17
  10ad74:	dc800815 	stw	r18,32(sp)
  10ad78:	dc400715 	stw	r17,28(sp)
  10ad7c:	dc000615 	stw	r16,24(sp)
  10ad80:	1085b004 	addi	r2,r2,5824
  10ad84:	dfc00915 	stw	ra,36(sp)
  10ad88:	2021883a 	mov	r16,r4
  10ad8c:	3823883a 	mov	r17,r7
  10ad90:	14800017 	ldw	r18,0(r2)
  10ad94:	28001426 	beq	r5,zero,10ade8 <_wcrtomb_r+0x7c>
  10ad98:	d9400415 	stw	r5,16(sp)
  10ad9c:	d9800515 	stw	r6,20(sp)
  10ada0:	010636c0 	call	10636c <__locale_charset>
  10ada4:	d9800517 	ldw	r6,20(sp)
  10ada8:	d9400417 	ldw	r5,16(sp)
  10adac:	100f883a 	mov	r7,r2
  10adb0:	dc400015 	stw	r17,0(sp)
  10adb4:	8009883a 	mov	r4,r16
  10adb8:	903ee83a 	callr	r18
  10adbc:	00ffffc4 	movi	r3,-1
  10adc0:	10c0031e 	bne	r2,r3,10add0 <_wcrtomb_r+0x64>
  10adc4:	88000015 	stw	zero,0(r17)
  10adc8:	00c02284 	movi	r3,138
  10adcc:	80c00015 	stw	r3,0(r16)
  10add0:	dfc00917 	ldw	ra,36(sp)
  10add4:	dc800817 	ldw	r18,32(sp)
  10add8:	dc400717 	ldw	r17,28(sp)
  10addc:	dc000617 	ldw	r16,24(sp)
  10ade0:	dec00a04 	addi	sp,sp,40
  10ade4:	f800283a 	ret
  10ade8:	010636c0 	call	10636c <__locale_charset>
  10adec:	100f883a 	mov	r7,r2
  10adf0:	dc400015 	stw	r17,0(sp)
  10adf4:	000d883a 	mov	r6,zero
  10adf8:	d9400104 	addi	r5,sp,4
  10adfc:	8009883a 	mov	r4,r16
  10ae00:	903ee83a 	callr	r18
  10ae04:	003fed06 	br	10adbc <__alt_data_end+0xfff0adbc>

0010ae08 <wcrtomb>:
  10ae08:	defff604 	addi	sp,sp,-40
  10ae0c:	00800474 	movhi	r2,17
  10ae10:	dc800615 	stw	r18,24(sp)
  10ae14:	dc400515 	stw	r17,20(sp)
  10ae18:	1085ac04 	addi	r2,r2,5808
  10ae1c:	dfc00915 	stw	ra,36(sp)
  10ae20:	dd000815 	stw	r20,32(sp)
  10ae24:	dcc00715 	stw	r19,28(sp)
  10ae28:	dc000415 	stw	r16,16(sp)
  10ae2c:	3025883a 	mov	r18,r6
  10ae30:	14400017 	ldw	r17,0(r2)
  10ae34:	20001926 	beq	r4,zero,10ae9c <wcrtomb+0x94>
  10ae38:	00800474 	movhi	r2,17
  10ae3c:	1085b004 	addi	r2,r2,5824
  10ae40:	15000017 	ldw	r20,0(r2)
  10ae44:	2021883a 	mov	r16,r4
  10ae48:	2827883a 	mov	r19,r5
  10ae4c:	010636c0 	call	10636c <__locale_charset>
  10ae50:	100f883a 	mov	r7,r2
  10ae54:	dc800015 	stw	r18,0(sp)
  10ae58:	980d883a 	mov	r6,r19
  10ae5c:	800b883a 	mov	r5,r16
  10ae60:	8809883a 	mov	r4,r17
  10ae64:	a03ee83a 	callr	r20
  10ae68:	00ffffc4 	movi	r3,-1
  10ae6c:	10c0031e 	bne	r2,r3,10ae7c <wcrtomb+0x74>
  10ae70:	90000015 	stw	zero,0(r18)
  10ae74:	00c02284 	movi	r3,138
  10ae78:	88c00015 	stw	r3,0(r17)
  10ae7c:	dfc00917 	ldw	ra,36(sp)
  10ae80:	dd000817 	ldw	r20,32(sp)
  10ae84:	dcc00717 	ldw	r19,28(sp)
  10ae88:	dc800617 	ldw	r18,24(sp)
  10ae8c:	dc400517 	ldw	r17,20(sp)
  10ae90:	dc000417 	ldw	r16,16(sp)
  10ae94:	dec00a04 	addi	sp,sp,40
  10ae98:	f800283a 	ret
  10ae9c:	00800474 	movhi	r2,17
  10aea0:	1085b004 	addi	r2,r2,5824
  10aea4:	14000017 	ldw	r16,0(r2)
  10aea8:	010636c0 	call	10636c <__locale_charset>
  10aeac:	100f883a 	mov	r7,r2
  10aeb0:	dc800015 	stw	r18,0(sp)
  10aeb4:	000d883a 	mov	r6,zero
  10aeb8:	d9400104 	addi	r5,sp,4
  10aebc:	8809883a 	mov	r4,r17
  10aec0:	803ee83a 	callr	r16
  10aec4:	003fe806 	br	10ae68 <__alt_data_end+0xfff0ae68>

0010aec8 <__ascii_wctomb>:
  10aec8:	28000526 	beq	r5,zero,10aee0 <__ascii_wctomb+0x18>
  10aecc:	00803fc4 	movi	r2,255
  10aed0:	11800536 	bltu	r2,r6,10aee8 <__ascii_wctomb+0x20>
  10aed4:	29800005 	stb	r6,0(r5)
  10aed8:	00800044 	movi	r2,1
  10aedc:	f800283a 	ret
  10aee0:	0005883a 	mov	r2,zero
  10aee4:	f800283a 	ret
  10aee8:	00802284 	movi	r2,138
  10aeec:	20800015 	stw	r2,0(r4)
  10aef0:	00bfffc4 	movi	r2,-1
  10aef4:	f800283a 	ret

0010aef8 <_wctomb_r>:
  10aef8:	00800474 	movhi	r2,17
  10aefc:	defff904 	addi	sp,sp,-28
  10af00:	1085b004 	addi	r2,r2,5824
  10af04:	dfc00615 	stw	ra,24(sp)
  10af08:	dc400515 	stw	r17,20(sp)
  10af0c:	dc000415 	stw	r16,16(sp)
  10af10:	3823883a 	mov	r17,r7
  10af14:	14000017 	ldw	r16,0(r2)
  10af18:	d9000115 	stw	r4,4(sp)
  10af1c:	d9400215 	stw	r5,8(sp)
  10af20:	d9800315 	stw	r6,12(sp)
  10af24:	010636c0 	call	10636c <__locale_charset>
  10af28:	d9800317 	ldw	r6,12(sp)
  10af2c:	d9400217 	ldw	r5,8(sp)
  10af30:	d9000117 	ldw	r4,4(sp)
  10af34:	100f883a 	mov	r7,r2
  10af38:	dc400015 	stw	r17,0(sp)
  10af3c:	803ee83a 	callr	r16
  10af40:	dfc00617 	ldw	ra,24(sp)
  10af44:	dc400517 	ldw	r17,20(sp)
  10af48:	dc000417 	ldw	r16,16(sp)
  10af4c:	dec00704 	addi	sp,sp,28
  10af50:	f800283a 	ret

0010af54 <__udivdi3>:
  10af54:	defff504 	addi	sp,sp,-44
  10af58:	dcc00415 	stw	r19,16(sp)
  10af5c:	dc000115 	stw	r16,4(sp)
  10af60:	dfc00a15 	stw	ra,40(sp)
  10af64:	df000915 	stw	fp,36(sp)
  10af68:	ddc00815 	stw	r23,32(sp)
  10af6c:	dd800715 	stw	r22,28(sp)
  10af70:	dd400615 	stw	r21,24(sp)
  10af74:	dd000515 	stw	r20,20(sp)
  10af78:	dc800315 	stw	r18,12(sp)
  10af7c:	dc400215 	stw	r17,8(sp)
  10af80:	2027883a 	mov	r19,r4
  10af84:	2821883a 	mov	r16,r5
  10af88:	3800411e 	bne	r7,zero,10b090 <__udivdi3+0x13c>
  10af8c:	3023883a 	mov	r17,r6
  10af90:	2025883a 	mov	r18,r4
  10af94:	2980522e 	bgeu	r5,r6,10b0e0 <__udivdi3+0x18c>
  10af98:	00bfffd4 	movui	r2,65535
  10af9c:	282d883a 	mov	r22,r5
  10afa0:	1180a836 	bltu	r2,r6,10b244 <__udivdi3+0x2f0>
  10afa4:	00803fc4 	movi	r2,255
  10afa8:	1185803a 	cmpltu	r2,r2,r6
  10afac:	100490fa 	slli	r2,r2,3
  10afb0:	3086d83a 	srl	r3,r6,r2
  10afb4:	01000474 	movhi	r4,17
  10afb8:	2100f604 	addi	r4,r4,984
  10afbc:	20c7883a 	add	r3,r4,r3
  10afc0:	18c00003 	ldbu	r3,0(r3)
  10afc4:	1885883a 	add	r2,r3,r2
  10afc8:	00c00804 	movi	r3,32
  10afcc:	1887c83a 	sub	r3,r3,r2
  10afd0:	18000526 	beq	r3,zero,10afe8 <__udivdi3+0x94>
  10afd4:	80e0983a 	sll	r16,r16,r3
  10afd8:	9884d83a 	srl	r2,r19,r2
  10afdc:	30e2983a 	sll	r17,r6,r3
  10afe0:	98e4983a 	sll	r18,r19,r3
  10afe4:	142cb03a 	or	r22,r2,r16
  10afe8:	882ad43a 	srli	r21,r17,16
  10afec:	b009883a 	mov	r4,r22
  10aff0:	8d3fffcc 	andi	r20,r17,65535
  10aff4:	a80b883a 	mov	r5,r21
  10aff8:	0100f480 	call	100f48 <__umodsi3>
  10affc:	b009883a 	mov	r4,r22
  10b000:	a80b883a 	mov	r5,r21
  10b004:	1027883a 	mov	r19,r2
  10b008:	0100ee40 	call	100ee4 <__udivsi3>
  10b00c:	102d883a 	mov	r22,r2
  10b010:	9826943a 	slli	r19,r19,16
  10b014:	9004d43a 	srli	r2,r18,16
  10b018:	a5a1383a 	mul	r16,r20,r22
  10b01c:	14c4b03a 	or	r2,r2,r19
  10b020:	1400052e 	bgeu	r2,r16,10b038 <__udivdi3+0xe4>
  10b024:	1445883a 	add	r2,r2,r17
  10b028:	b0ffffc4 	addi	r3,r22,-1
  10b02c:	14400136 	bltu	r2,r17,10b034 <__udivdi3+0xe0>
  10b030:	14012336 	bltu	r2,r16,10b4c0 <__udivdi3+0x56c>
  10b034:	182d883a 	mov	r22,r3
  10b038:	1421c83a 	sub	r16,r2,r16
  10b03c:	a80b883a 	mov	r5,r21
  10b040:	8009883a 	mov	r4,r16
  10b044:	0100f480 	call	100f48 <__umodsi3>
  10b048:	1027883a 	mov	r19,r2
  10b04c:	a80b883a 	mov	r5,r21
  10b050:	8009883a 	mov	r4,r16
  10b054:	0100ee40 	call	100ee4 <__udivsi3>
  10b058:	9826943a 	slli	r19,r19,16
  10b05c:	a0a9383a 	mul	r20,r20,r2
  10b060:	94bfffcc 	andi	r18,r18,65535
  10b064:	94e4b03a 	or	r18,r18,r19
  10b068:	9500052e 	bgeu	r18,r20,10b080 <__udivdi3+0x12c>
  10b06c:	8ca5883a 	add	r18,r17,r18
  10b070:	10ffffc4 	addi	r3,r2,-1
  10b074:	9440f136 	bltu	r18,r17,10b43c <__udivdi3+0x4e8>
  10b078:	9500f02e 	bgeu	r18,r20,10b43c <__udivdi3+0x4e8>
  10b07c:	10bfff84 	addi	r2,r2,-2
  10b080:	b00c943a 	slli	r6,r22,16
  10b084:	0007883a 	mov	r3,zero
  10b088:	3084b03a 	or	r2,r6,r2
  10b08c:	00005906 	br	10b1f4 <__udivdi3+0x2a0>
  10b090:	29c05636 	bltu	r5,r7,10b1ec <__udivdi3+0x298>
  10b094:	00bfffd4 	movui	r2,65535
  10b098:	11c0622e 	bgeu	r2,r7,10b224 <__udivdi3+0x2d0>
  10b09c:	00804034 	movhi	r2,256
  10b0a0:	10bfffc4 	addi	r2,r2,-1
  10b0a4:	11c0ee36 	bltu	r2,r7,10b460 <__udivdi3+0x50c>
  10b0a8:	00800404 	movi	r2,16
  10b0ac:	3886d83a 	srl	r3,r7,r2
  10b0b0:	01000474 	movhi	r4,17
  10b0b4:	2100f604 	addi	r4,r4,984
  10b0b8:	20c7883a 	add	r3,r4,r3
  10b0bc:	18c00003 	ldbu	r3,0(r3)
  10b0c0:	05400804 	movi	r21,32
  10b0c4:	1885883a 	add	r2,r3,r2
  10b0c8:	a8abc83a 	sub	r21,r21,r2
  10b0cc:	a800621e 	bne	r21,zero,10b258 <__udivdi3+0x304>
  10b0d0:	3c00e936 	bltu	r7,r16,10b478 <__udivdi3+0x524>
  10b0d4:	9985403a 	cmpgeu	r2,r19,r6
  10b0d8:	0007883a 	mov	r3,zero
  10b0dc:	00004506 	br	10b1f4 <__udivdi3+0x2a0>
  10b0e0:	3000041e 	bne	r6,zero,10b0f4 <__udivdi3+0x1a0>
  10b0e4:	000b883a 	mov	r5,zero
  10b0e8:	01000044 	movi	r4,1
  10b0ec:	0100ee40 	call	100ee4 <__udivsi3>
  10b0f0:	1023883a 	mov	r17,r2
  10b0f4:	00bfffd4 	movui	r2,65535
  10b0f8:	14404e2e 	bgeu	r2,r17,10b234 <__udivdi3+0x2e0>
  10b0fc:	00804034 	movhi	r2,256
  10b100:	10bfffc4 	addi	r2,r2,-1
  10b104:	1440d836 	bltu	r2,r17,10b468 <__udivdi3+0x514>
  10b108:	00800404 	movi	r2,16
  10b10c:	8886d83a 	srl	r3,r17,r2
  10b110:	01000474 	movhi	r4,17
  10b114:	2100f604 	addi	r4,r4,984
  10b118:	20c7883a 	add	r3,r4,r3
  10b11c:	18c00003 	ldbu	r3,0(r3)
  10b120:	1885883a 	add	r2,r3,r2
  10b124:	00c00804 	movi	r3,32
  10b128:	1887c83a 	sub	r3,r3,r2
  10b12c:	18008f1e 	bne	r3,zero,10b36c <__udivdi3+0x418>
  10b130:	882ad43a 	srli	r21,r17,16
  10b134:	8461c83a 	sub	r16,r16,r17
  10b138:	8d3fffcc 	andi	r20,r17,65535
  10b13c:	00c00044 	movi	r3,1
  10b140:	8009883a 	mov	r4,r16
  10b144:	a80b883a 	mov	r5,r21
  10b148:	d8c00015 	stw	r3,0(sp)
  10b14c:	0100f480 	call	100f48 <__umodsi3>
  10b150:	8009883a 	mov	r4,r16
  10b154:	a80b883a 	mov	r5,r21
  10b158:	1027883a 	mov	r19,r2
  10b15c:	0100ee40 	call	100ee4 <__udivsi3>
  10b160:	9826943a 	slli	r19,r19,16
  10b164:	9008d43a 	srli	r4,r18,16
  10b168:	1521383a 	mul	r16,r2,r20
  10b16c:	102d883a 	mov	r22,r2
  10b170:	24c8b03a 	or	r4,r4,r19
  10b174:	d8c00017 	ldw	r3,0(sp)
  10b178:	2400052e 	bgeu	r4,r16,10b190 <__udivdi3+0x23c>
  10b17c:	2449883a 	add	r4,r4,r17
  10b180:	b0bfffc4 	addi	r2,r22,-1
  10b184:	24400136 	bltu	r4,r17,10b18c <__udivdi3+0x238>
  10b188:	2400ca36 	bltu	r4,r16,10b4b4 <__udivdi3+0x560>
  10b18c:	102d883a 	mov	r22,r2
  10b190:	2421c83a 	sub	r16,r4,r16
  10b194:	a80b883a 	mov	r5,r21
  10b198:	8009883a 	mov	r4,r16
  10b19c:	d8c00015 	stw	r3,0(sp)
  10b1a0:	0100f480 	call	100f48 <__umodsi3>
  10b1a4:	1027883a 	mov	r19,r2
  10b1a8:	a80b883a 	mov	r5,r21
  10b1ac:	8009883a 	mov	r4,r16
  10b1b0:	0100ee40 	call	100ee4 <__udivsi3>
  10b1b4:	9826943a 	slli	r19,r19,16
  10b1b8:	1529383a 	mul	r20,r2,r20
  10b1bc:	94bfffcc 	andi	r18,r18,65535
  10b1c0:	94e4b03a 	or	r18,r18,r19
  10b1c4:	d8c00017 	ldw	r3,0(sp)
  10b1c8:	9500052e 	bgeu	r18,r20,10b1e0 <__udivdi3+0x28c>
  10b1cc:	8ca5883a 	add	r18,r17,r18
  10b1d0:	113fffc4 	addi	r4,r2,-1
  10b1d4:	94409736 	bltu	r18,r17,10b434 <__udivdi3+0x4e0>
  10b1d8:	9500962e 	bgeu	r18,r20,10b434 <__udivdi3+0x4e0>
  10b1dc:	10bfff84 	addi	r2,r2,-2
  10b1e0:	b00c943a 	slli	r6,r22,16
  10b1e4:	3084b03a 	or	r2,r6,r2
  10b1e8:	00000206 	br	10b1f4 <__udivdi3+0x2a0>
  10b1ec:	0007883a 	mov	r3,zero
  10b1f0:	0005883a 	mov	r2,zero
  10b1f4:	dfc00a17 	ldw	ra,40(sp)
  10b1f8:	df000917 	ldw	fp,36(sp)
  10b1fc:	ddc00817 	ldw	r23,32(sp)
  10b200:	dd800717 	ldw	r22,28(sp)
  10b204:	dd400617 	ldw	r21,24(sp)
  10b208:	dd000517 	ldw	r20,20(sp)
  10b20c:	dcc00417 	ldw	r19,16(sp)
  10b210:	dc800317 	ldw	r18,12(sp)
  10b214:	dc400217 	ldw	r17,8(sp)
  10b218:	dc000117 	ldw	r16,4(sp)
  10b21c:	dec00b04 	addi	sp,sp,44
  10b220:	f800283a 	ret
  10b224:	00803fc4 	movi	r2,255
  10b228:	11c5803a 	cmpltu	r2,r2,r7
  10b22c:	100490fa 	slli	r2,r2,3
  10b230:	003f9e06 	br	10b0ac <__alt_data_end+0xfff0b0ac>
  10b234:	00803fc4 	movi	r2,255
  10b238:	1445803a 	cmpltu	r2,r2,r17
  10b23c:	100490fa 	slli	r2,r2,3
  10b240:	003fb206 	br	10b10c <__alt_data_end+0xfff0b10c>
  10b244:	00804034 	movhi	r2,256
  10b248:	10bfffc4 	addi	r2,r2,-1
  10b24c:	11808836 	bltu	r2,r6,10b470 <__udivdi3+0x51c>
  10b250:	00800404 	movi	r2,16
  10b254:	003f5606 	br	10afb0 <__alt_data_end+0xfff0afb0>
  10b258:	30aed83a 	srl	r23,r6,r2
  10b25c:	3d4e983a 	sll	r7,r7,r21
  10b260:	80acd83a 	srl	r22,r16,r2
  10b264:	9884d83a 	srl	r2,r19,r2
  10b268:	3deeb03a 	or	r23,r7,r23
  10b26c:	b824d43a 	srli	r18,r23,16
  10b270:	8560983a 	sll	r16,r16,r21
  10b274:	b009883a 	mov	r4,r22
  10b278:	900b883a 	mov	r5,r18
  10b27c:	3568983a 	sll	r20,r6,r21
  10b280:	1420b03a 	or	r16,r2,r16
  10b284:	0100f480 	call	100f48 <__umodsi3>
  10b288:	b009883a 	mov	r4,r22
  10b28c:	900b883a 	mov	r5,r18
  10b290:	1023883a 	mov	r17,r2
  10b294:	0100ee40 	call	100ee4 <__udivsi3>
  10b298:	8808943a 	slli	r4,r17,16
  10b29c:	bf3fffcc 	andi	fp,r23,65535
  10b2a0:	8006d43a 	srli	r3,r16,16
  10b2a4:	e0a3383a 	mul	r17,fp,r2
  10b2a8:	100d883a 	mov	r6,r2
  10b2ac:	1906b03a 	or	r3,r3,r4
  10b2b0:	1c40042e 	bgeu	r3,r17,10b2c4 <__udivdi3+0x370>
  10b2b4:	1dc7883a 	add	r3,r3,r23
  10b2b8:	10bfffc4 	addi	r2,r2,-1
  10b2bc:	1dc0752e 	bgeu	r3,r23,10b494 <__udivdi3+0x540>
  10b2c0:	100d883a 	mov	r6,r2
  10b2c4:	1c63c83a 	sub	r17,r3,r17
  10b2c8:	900b883a 	mov	r5,r18
  10b2cc:	8809883a 	mov	r4,r17
  10b2d0:	d9800015 	stw	r6,0(sp)
  10b2d4:	0100f480 	call	100f48 <__umodsi3>
  10b2d8:	102d883a 	mov	r22,r2
  10b2dc:	8809883a 	mov	r4,r17
  10b2e0:	900b883a 	mov	r5,r18
  10b2e4:	0100ee40 	call	100ee4 <__udivsi3>
  10b2e8:	b02c943a 	slli	r22,r22,16
  10b2ec:	e089383a 	mul	r4,fp,r2
  10b2f0:	843fffcc 	andi	r16,r16,65535
  10b2f4:	85a0b03a 	or	r16,r16,r22
  10b2f8:	d9800017 	ldw	r6,0(sp)
  10b2fc:	8100042e 	bgeu	r16,r4,10b310 <__udivdi3+0x3bc>
  10b300:	85e1883a 	add	r16,r16,r23
  10b304:	10ffffc4 	addi	r3,r2,-1
  10b308:	85c05e2e 	bgeu	r16,r23,10b484 <__udivdi3+0x530>
  10b30c:	1805883a 	mov	r2,r3
  10b310:	300c943a 	slli	r6,r6,16
  10b314:	a17fffcc 	andi	r5,r20,65535
  10b318:	a028d43a 	srli	r20,r20,16
  10b31c:	3084b03a 	or	r2,r6,r2
  10b320:	10ffffcc 	andi	r3,r2,65535
  10b324:	100cd43a 	srli	r6,r2,16
  10b328:	194f383a 	mul	r7,r3,r5
  10b32c:	1d07383a 	mul	r3,r3,r20
  10b330:	314b383a 	mul	r5,r6,r5
  10b334:	3810d43a 	srli	r8,r7,16
  10b338:	8121c83a 	sub	r16,r16,r4
  10b33c:	1947883a 	add	r3,r3,r5
  10b340:	40c7883a 	add	r3,r8,r3
  10b344:	350d383a 	mul	r6,r6,r20
  10b348:	1940022e 	bgeu	r3,r5,10b354 <__udivdi3+0x400>
  10b34c:	01000074 	movhi	r4,1
  10b350:	310d883a 	add	r6,r6,r4
  10b354:	1828d43a 	srli	r20,r3,16
  10b358:	a18d883a 	add	r6,r20,r6
  10b35c:	81803e36 	bltu	r16,r6,10b458 <__udivdi3+0x504>
  10b360:	81803826 	beq	r16,r6,10b444 <__udivdi3+0x4f0>
  10b364:	0007883a 	mov	r3,zero
  10b368:	003fa206 	br	10b1f4 <__alt_data_end+0xfff0b1f4>
  10b36c:	88e2983a 	sll	r17,r17,r3
  10b370:	80a8d83a 	srl	r20,r16,r2
  10b374:	80e0983a 	sll	r16,r16,r3
  10b378:	882ad43a 	srli	r21,r17,16
  10b37c:	9884d83a 	srl	r2,r19,r2
  10b380:	a009883a 	mov	r4,r20
  10b384:	a80b883a 	mov	r5,r21
  10b388:	142eb03a 	or	r23,r2,r16
  10b38c:	98e4983a 	sll	r18,r19,r3
  10b390:	0100f480 	call	100f48 <__umodsi3>
  10b394:	a009883a 	mov	r4,r20
  10b398:	a80b883a 	mov	r5,r21
  10b39c:	1021883a 	mov	r16,r2
  10b3a0:	0100ee40 	call	100ee4 <__udivsi3>
  10b3a4:	1039883a 	mov	fp,r2
  10b3a8:	8d3fffcc 	andi	r20,r17,65535
  10b3ac:	8020943a 	slli	r16,r16,16
  10b3b0:	b804d43a 	srli	r2,r23,16
  10b3b4:	a72d383a 	mul	r22,r20,fp
  10b3b8:	1404b03a 	or	r2,r2,r16
  10b3bc:	1580062e 	bgeu	r2,r22,10b3d8 <__udivdi3+0x484>
  10b3c0:	1445883a 	add	r2,r2,r17
  10b3c4:	e0ffffc4 	addi	r3,fp,-1
  10b3c8:	14403836 	bltu	r2,r17,10b4ac <__udivdi3+0x558>
  10b3cc:	1580372e 	bgeu	r2,r22,10b4ac <__udivdi3+0x558>
  10b3d0:	e73fff84 	addi	fp,fp,-2
  10b3d4:	1445883a 	add	r2,r2,r17
  10b3d8:	15adc83a 	sub	r22,r2,r22
  10b3dc:	a80b883a 	mov	r5,r21
  10b3e0:	b009883a 	mov	r4,r22
  10b3e4:	0100f480 	call	100f48 <__umodsi3>
  10b3e8:	1027883a 	mov	r19,r2
  10b3ec:	b009883a 	mov	r4,r22
  10b3f0:	a80b883a 	mov	r5,r21
  10b3f4:	0100ee40 	call	100ee4 <__udivsi3>
  10b3f8:	9826943a 	slli	r19,r19,16
  10b3fc:	a0a1383a 	mul	r16,r20,r2
  10b400:	b93fffcc 	andi	r4,r23,65535
  10b404:	24c8b03a 	or	r4,r4,r19
  10b408:	2400062e 	bgeu	r4,r16,10b424 <__udivdi3+0x4d0>
  10b40c:	2449883a 	add	r4,r4,r17
  10b410:	10ffffc4 	addi	r3,r2,-1
  10b414:	24402336 	bltu	r4,r17,10b4a4 <__udivdi3+0x550>
  10b418:	2400222e 	bgeu	r4,r16,10b4a4 <__udivdi3+0x550>
  10b41c:	10bfff84 	addi	r2,r2,-2
  10b420:	2449883a 	add	r4,r4,r17
  10b424:	e038943a 	slli	fp,fp,16
  10b428:	2421c83a 	sub	r16,r4,r16
  10b42c:	e086b03a 	or	r3,fp,r2
  10b430:	003f4306 	br	10b140 <__alt_data_end+0xfff0b140>
  10b434:	2005883a 	mov	r2,r4
  10b438:	003f6906 	br	10b1e0 <__alt_data_end+0xfff0b1e0>
  10b43c:	1805883a 	mov	r2,r3
  10b440:	003f0f06 	br	10b080 <__alt_data_end+0xfff0b080>
  10b444:	1806943a 	slli	r3,r3,16
  10b448:	9d66983a 	sll	r19,r19,r21
  10b44c:	39ffffcc 	andi	r7,r7,65535
  10b450:	19c7883a 	add	r3,r3,r7
  10b454:	98ffc32e 	bgeu	r19,r3,10b364 <__alt_data_end+0xfff0b364>
  10b458:	10bfffc4 	addi	r2,r2,-1
  10b45c:	003fc106 	br	10b364 <__alt_data_end+0xfff0b364>
  10b460:	00800604 	movi	r2,24
  10b464:	003f1106 	br	10b0ac <__alt_data_end+0xfff0b0ac>
  10b468:	00800604 	movi	r2,24
  10b46c:	003f2706 	br	10b10c <__alt_data_end+0xfff0b10c>
  10b470:	00800604 	movi	r2,24
  10b474:	003ece06 	br	10afb0 <__alt_data_end+0xfff0afb0>
  10b478:	0007883a 	mov	r3,zero
  10b47c:	00800044 	movi	r2,1
  10b480:	003f5c06 	br	10b1f4 <__alt_data_end+0xfff0b1f4>
  10b484:	813fa12e 	bgeu	r16,r4,10b30c <__alt_data_end+0xfff0b30c>
  10b488:	10bfff84 	addi	r2,r2,-2
  10b48c:	85e1883a 	add	r16,r16,r23
  10b490:	003f9f06 	br	10b310 <__alt_data_end+0xfff0b310>
  10b494:	1c7f8a2e 	bgeu	r3,r17,10b2c0 <__alt_data_end+0xfff0b2c0>
  10b498:	31bfff84 	addi	r6,r6,-2
  10b49c:	1dc7883a 	add	r3,r3,r23
  10b4a0:	003f8806 	br	10b2c4 <__alt_data_end+0xfff0b2c4>
  10b4a4:	1805883a 	mov	r2,r3
  10b4a8:	003fde06 	br	10b424 <__alt_data_end+0xfff0b424>
  10b4ac:	1839883a 	mov	fp,r3
  10b4b0:	003fc906 	br	10b3d8 <__alt_data_end+0xfff0b3d8>
  10b4b4:	b5bfff84 	addi	r22,r22,-2
  10b4b8:	2449883a 	add	r4,r4,r17
  10b4bc:	003f3406 	br	10b190 <__alt_data_end+0xfff0b190>
  10b4c0:	b5bfff84 	addi	r22,r22,-2
  10b4c4:	1445883a 	add	r2,r2,r17
  10b4c8:	003edb06 	br	10b038 <__alt_data_end+0xfff0b038>

0010b4cc <__umoddi3>:
  10b4cc:	defff404 	addi	sp,sp,-48
  10b4d0:	df000a15 	stw	fp,40(sp)
  10b4d4:	dc400315 	stw	r17,12(sp)
  10b4d8:	dc000215 	stw	r16,8(sp)
  10b4dc:	dfc00b15 	stw	ra,44(sp)
  10b4e0:	ddc00915 	stw	r23,36(sp)
  10b4e4:	dd800815 	stw	r22,32(sp)
  10b4e8:	dd400715 	stw	r21,28(sp)
  10b4ec:	dd000615 	stw	r20,24(sp)
  10b4f0:	dcc00515 	stw	r19,20(sp)
  10b4f4:	dc800415 	stw	r18,16(sp)
  10b4f8:	2021883a 	mov	r16,r4
  10b4fc:	2823883a 	mov	r17,r5
  10b500:	2839883a 	mov	fp,r5
  10b504:	38003c1e 	bne	r7,zero,10b5f8 <__umoddi3+0x12c>
  10b508:	3027883a 	mov	r19,r6
  10b50c:	2029883a 	mov	r20,r4
  10b510:	2980512e 	bgeu	r5,r6,10b658 <__umoddi3+0x18c>
  10b514:	00bfffd4 	movui	r2,65535
  10b518:	11809a36 	bltu	r2,r6,10b784 <__umoddi3+0x2b8>
  10b51c:	01003fc4 	movi	r4,255
  10b520:	2189803a 	cmpltu	r4,r4,r6
  10b524:	200890fa 	slli	r4,r4,3
  10b528:	3104d83a 	srl	r2,r6,r4
  10b52c:	00c00474 	movhi	r3,17
  10b530:	18c0f604 	addi	r3,r3,984
  10b534:	1885883a 	add	r2,r3,r2
  10b538:	10c00003 	ldbu	r3,0(r2)
  10b53c:	00800804 	movi	r2,32
  10b540:	1909883a 	add	r4,r3,r4
  10b544:	1125c83a 	sub	r18,r2,r4
  10b548:	90000526 	beq	r18,zero,10b560 <__umoddi3+0x94>
  10b54c:	8ca2983a 	sll	r17,r17,r18
  10b550:	8108d83a 	srl	r4,r16,r4
  10b554:	34a6983a 	sll	r19,r6,r18
  10b558:	84a8983a 	sll	r20,r16,r18
  10b55c:	2478b03a 	or	fp,r4,r17
  10b560:	982ed43a 	srli	r23,r19,16
  10b564:	e009883a 	mov	r4,fp
  10b568:	9dbfffcc 	andi	r22,r19,65535
  10b56c:	b80b883a 	mov	r5,r23
  10b570:	0100f480 	call	100f48 <__umodsi3>
  10b574:	e009883a 	mov	r4,fp
  10b578:	b80b883a 	mov	r5,r23
  10b57c:	102b883a 	mov	r21,r2
  10b580:	0100ee40 	call	100ee4 <__udivsi3>
  10b584:	a806943a 	slli	r3,r21,16
  10b588:	a008d43a 	srli	r4,r20,16
  10b58c:	b085383a 	mul	r2,r22,r2
  10b590:	20c8b03a 	or	r4,r4,r3
  10b594:	2080032e 	bgeu	r4,r2,10b5a4 <__umoddi3+0xd8>
  10b598:	24c9883a 	add	r4,r4,r19
  10b59c:	24c00136 	bltu	r4,r19,10b5a4 <__umoddi3+0xd8>
  10b5a0:	20811036 	bltu	r4,r2,10b9e4 <__umoddi3+0x518>
  10b5a4:	20abc83a 	sub	r21,r4,r2
  10b5a8:	b80b883a 	mov	r5,r23
  10b5ac:	a809883a 	mov	r4,r21
  10b5b0:	0100f480 	call	100f48 <__umodsi3>
  10b5b4:	1023883a 	mov	r17,r2
  10b5b8:	b80b883a 	mov	r5,r23
  10b5bc:	a809883a 	mov	r4,r21
  10b5c0:	0100ee40 	call	100ee4 <__udivsi3>
  10b5c4:	8822943a 	slli	r17,r17,16
  10b5c8:	b085383a 	mul	r2,r22,r2
  10b5cc:	a0ffffcc 	andi	r3,r20,65535
  10b5d0:	1c46b03a 	or	r3,r3,r17
  10b5d4:	1880042e 	bgeu	r3,r2,10b5e8 <__umoddi3+0x11c>
  10b5d8:	1cc7883a 	add	r3,r3,r19
  10b5dc:	1cc00236 	bltu	r3,r19,10b5e8 <__umoddi3+0x11c>
  10b5e0:	1880012e 	bgeu	r3,r2,10b5e8 <__umoddi3+0x11c>
  10b5e4:	1cc7883a 	add	r3,r3,r19
  10b5e8:	1885c83a 	sub	r2,r3,r2
  10b5ec:	1484d83a 	srl	r2,r2,r18
  10b5f0:	0007883a 	mov	r3,zero
  10b5f4:	00004f06 	br	10b734 <__umoddi3+0x268>
  10b5f8:	29c04c36 	bltu	r5,r7,10b72c <__umoddi3+0x260>
  10b5fc:	00bfffd4 	movui	r2,65535
  10b600:	11c0582e 	bgeu	r2,r7,10b764 <__umoddi3+0x298>
  10b604:	00804034 	movhi	r2,256
  10b608:	10bfffc4 	addi	r2,r2,-1
  10b60c:	11c0e736 	bltu	r2,r7,10b9ac <__umoddi3+0x4e0>
  10b610:	01000404 	movi	r4,16
  10b614:	3904d83a 	srl	r2,r7,r4
  10b618:	00c00474 	movhi	r3,17
  10b61c:	18c0f604 	addi	r3,r3,984
  10b620:	1885883a 	add	r2,r3,r2
  10b624:	14c00003 	ldbu	r19,0(r2)
  10b628:	00c00804 	movi	r3,32
  10b62c:	9927883a 	add	r19,r19,r4
  10b630:	1ce9c83a 	sub	r20,r3,r19
  10b634:	a000581e 	bne	r20,zero,10b798 <__umoddi3+0x2cc>
  10b638:	3c400136 	bltu	r7,r17,10b640 <__umoddi3+0x174>
  10b63c:	8180eb36 	bltu	r16,r6,10b9ec <__umoddi3+0x520>
  10b640:	8185c83a 	sub	r2,r16,r6
  10b644:	89e3c83a 	sub	r17,r17,r7
  10b648:	8089803a 	cmpltu	r4,r16,r2
  10b64c:	8939c83a 	sub	fp,r17,r4
  10b650:	e007883a 	mov	r3,fp
  10b654:	00003706 	br	10b734 <__umoddi3+0x268>
  10b658:	3000041e 	bne	r6,zero,10b66c <__umoddi3+0x1a0>
  10b65c:	000b883a 	mov	r5,zero
  10b660:	01000044 	movi	r4,1
  10b664:	0100ee40 	call	100ee4 <__udivsi3>
  10b668:	1027883a 	mov	r19,r2
  10b66c:	00bfffd4 	movui	r2,65535
  10b670:	14c0402e 	bgeu	r2,r19,10b774 <__umoddi3+0x2a8>
  10b674:	00804034 	movhi	r2,256
  10b678:	10bfffc4 	addi	r2,r2,-1
  10b67c:	14c0cd36 	bltu	r2,r19,10b9b4 <__umoddi3+0x4e8>
  10b680:	00800404 	movi	r2,16
  10b684:	9886d83a 	srl	r3,r19,r2
  10b688:	01000474 	movhi	r4,17
  10b68c:	2100f604 	addi	r4,r4,984
  10b690:	20c7883a 	add	r3,r4,r3
  10b694:	18c00003 	ldbu	r3,0(r3)
  10b698:	1887883a 	add	r3,r3,r2
  10b69c:	00800804 	movi	r2,32
  10b6a0:	10e5c83a 	sub	r18,r2,r3
  10b6a4:	9000901e 	bne	r18,zero,10b8e8 <__umoddi3+0x41c>
  10b6a8:	982cd43a 	srli	r22,r19,16
  10b6ac:	8ce3c83a 	sub	r17,r17,r19
  10b6b0:	9d7fffcc 	andi	r21,r19,65535
  10b6b4:	b00b883a 	mov	r5,r22
  10b6b8:	8809883a 	mov	r4,r17
  10b6bc:	0100f480 	call	100f48 <__umodsi3>
  10b6c0:	8809883a 	mov	r4,r17
  10b6c4:	b00b883a 	mov	r5,r22
  10b6c8:	1021883a 	mov	r16,r2
  10b6cc:	0100ee40 	call	100ee4 <__udivsi3>
  10b6d0:	8006943a 	slli	r3,r16,16
  10b6d4:	a008d43a 	srli	r4,r20,16
  10b6d8:	1545383a 	mul	r2,r2,r21
  10b6dc:	20c8b03a 	or	r4,r4,r3
  10b6e0:	2080042e 	bgeu	r4,r2,10b6f4 <__umoddi3+0x228>
  10b6e4:	24c9883a 	add	r4,r4,r19
  10b6e8:	24c00236 	bltu	r4,r19,10b6f4 <__umoddi3+0x228>
  10b6ec:	2080012e 	bgeu	r4,r2,10b6f4 <__umoddi3+0x228>
  10b6f0:	24c9883a 	add	r4,r4,r19
  10b6f4:	20a1c83a 	sub	r16,r4,r2
  10b6f8:	b00b883a 	mov	r5,r22
  10b6fc:	8009883a 	mov	r4,r16
  10b700:	0100f480 	call	100f48 <__umodsi3>
  10b704:	1023883a 	mov	r17,r2
  10b708:	b00b883a 	mov	r5,r22
  10b70c:	8009883a 	mov	r4,r16
  10b710:	0100ee40 	call	100ee4 <__udivsi3>
  10b714:	8822943a 	slli	r17,r17,16
  10b718:	1545383a 	mul	r2,r2,r21
  10b71c:	a53fffcc 	andi	r20,r20,65535
  10b720:	a446b03a 	or	r3,r20,r17
  10b724:	18bfb02e 	bgeu	r3,r2,10b5e8 <__alt_data_end+0xfff0b5e8>
  10b728:	003fab06 	br	10b5d8 <__alt_data_end+0xfff0b5d8>
  10b72c:	2005883a 	mov	r2,r4
  10b730:	2807883a 	mov	r3,r5
  10b734:	dfc00b17 	ldw	ra,44(sp)
  10b738:	df000a17 	ldw	fp,40(sp)
  10b73c:	ddc00917 	ldw	r23,36(sp)
  10b740:	dd800817 	ldw	r22,32(sp)
  10b744:	dd400717 	ldw	r21,28(sp)
  10b748:	dd000617 	ldw	r20,24(sp)
  10b74c:	dcc00517 	ldw	r19,20(sp)
  10b750:	dc800417 	ldw	r18,16(sp)
  10b754:	dc400317 	ldw	r17,12(sp)
  10b758:	dc000217 	ldw	r16,8(sp)
  10b75c:	dec00c04 	addi	sp,sp,48
  10b760:	f800283a 	ret
  10b764:	04c03fc4 	movi	r19,255
  10b768:	99c9803a 	cmpltu	r4,r19,r7
  10b76c:	200890fa 	slli	r4,r4,3
  10b770:	003fa806 	br	10b614 <__alt_data_end+0xfff0b614>
  10b774:	00803fc4 	movi	r2,255
  10b778:	14c5803a 	cmpltu	r2,r2,r19
  10b77c:	100490fa 	slli	r2,r2,3
  10b780:	003fc006 	br	10b684 <__alt_data_end+0xfff0b684>
  10b784:	00804034 	movhi	r2,256
  10b788:	10bfffc4 	addi	r2,r2,-1
  10b78c:	11808b36 	bltu	r2,r6,10b9bc <__umoddi3+0x4f0>
  10b790:	01000404 	movi	r4,16
  10b794:	003f6406 	br	10b528 <__alt_data_end+0xfff0b528>
  10b798:	34c4d83a 	srl	r2,r6,r19
  10b79c:	3d0e983a 	sll	r7,r7,r20
  10b7a0:	8cf8d83a 	srl	fp,r17,r19
  10b7a4:	8d10983a 	sll	r8,r17,r20
  10b7a8:	38aab03a 	or	r21,r7,r2
  10b7ac:	a82cd43a 	srli	r22,r21,16
  10b7b0:	84e2d83a 	srl	r17,r16,r19
  10b7b4:	e009883a 	mov	r4,fp
  10b7b8:	b00b883a 	mov	r5,r22
  10b7bc:	8a22b03a 	or	r17,r17,r8
  10b7c0:	3524983a 	sll	r18,r6,r20
  10b7c4:	0100f480 	call	100f48 <__umodsi3>
  10b7c8:	e009883a 	mov	r4,fp
  10b7cc:	b00b883a 	mov	r5,r22
  10b7d0:	102f883a 	mov	r23,r2
  10b7d4:	0100ee40 	call	100ee4 <__udivsi3>
  10b7d8:	100d883a 	mov	r6,r2
  10b7dc:	b808943a 	slli	r4,r23,16
  10b7e0:	aa3fffcc 	andi	r8,r21,65535
  10b7e4:	8804d43a 	srli	r2,r17,16
  10b7e8:	41af383a 	mul	r23,r8,r6
  10b7ec:	8520983a 	sll	r16,r16,r20
  10b7f0:	1104b03a 	or	r2,r2,r4
  10b7f4:	15c0042e 	bgeu	r2,r23,10b808 <__umoddi3+0x33c>
  10b7f8:	1545883a 	add	r2,r2,r21
  10b7fc:	30ffffc4 	addi	r3,r6,-1
  10b800:	1540742e 	bgeu	r2,r21,10b9d4 <__umoddi3+0x508>
  10b804:	180d883a 	mov	r6,r3
  10b808:	15efc83a 	sub	r23,r2,r23
  10b80c:	b00b883a 	mov	r5,r22
  10b810:	b809883a 	mov	r4,r23
  10b814:	d9800115 	stw	r6,4(sp)
  10b818:	da000015 	stw	r8,0(sp)
  10b81c:	0100f480 	call	100f48 <__umodsi3>
  10b820:	b00b883a 	mov	r5,r22
  10b824:	b809883a 	mov	r4,r23
  10b828:	1039883a 	mov	fp,r2
  10b82c:	0100ee40 	call	100ee4 <__udivsi3>
  10b830:	da000017 	ldw	r8,0(sp)
  10b834:	e038943a 	slli	fp,fp,16
  10b838:	100b883a 	mov	r5,r2
  10b83c:	4089383a 	mul	r4,r8,r2
  10b840:	8a3fffcc 	andi	r8,r17,65535
  10b844:	4710b03a 	or	r8,r8,fp
  10b848:	d9800117 	ldw	r6,4(sp)
  10b84c:	4100042e 	bgeu	r8,r4,10b860 <__umoddi3+0x394>
  10b850:	4551883a 	add	r8,r8,r21
  10b854:	10bfffc4 	addi	r2,r2,-1
  10b858:	45405a2e 	bgeu	r8,r21,10b9c4 <__umoddi3+0x4f8>
  10b85c:	100b883a 	mov	r5,r2
  10b860:	300c943a 	slli	r6,r6,16
  10b864:	91ffffcc 	andi	r7,r18,65535
  10b868:	9004d43a 	srli	r2,r18,16
  10b86c:	314cb03a 	or	r6,r6,r5
  10b870:	317fffcc 	andi	r5,r6,65535
  10b874:	300cd43a 	srli	r6,r6,16
  10b878:	29d3383a 	mul	r9,r5,r7
  10b87c:	288b383a 	mul	r5,r5,r2
  10b880:	31cf383a 	mul	r7,r6,r7
  10b884:	4806d43a 	srli	r3,r9,16
  10b888:	4111c83a 	sub	r8,r8,r4
  10b88c:	29cb883a 	add	r5,r5,r7
  10b890:	194b883a 	add	r5,r3,r5
  10b894:	3085383a 	mul	r2,r6,r2
  10b898:	29c0022e 	bgeu	r5,r7,10b8a4 <__umoddi3+0x3d8>
  10b89c:	00c00074 	movhi	r3,1
  10b8a0:	10c5883a 	add	r2,r2,r3
  10b8a4:	2808d43a 	srli	r4,r5,16
  10b8a8:	280a943a 	slli	r5,r5,16
  10b8ac:	4a7fffcc 	andi	r9,r9,65535
  10b8b0:	2085883a 	add	r2,r4,r2
  10b8b4:	2a4b883a 	add	r5,r5,r9
  10b8b8:	40803636 	bltu	r8,r2,10b994 <__umoddi3+0x4c8>
  10b8bc:	40804d26 	beq	r8,r2,10b9f4 <__umoddi3+0x528>
  10b8c0:	4089c83a 	sub	r4,r8,r2
  10b8c4:	280f883a 	mov	r7,r5
  10b8c8:	81cfc83a 	sub	r7,r16,r7
  10b8cc:	81c7803a 	cmpltu	r3,r16,r7
  10b8d0:	20c7c83a 	sub	r3,r4,r3
  10b8d4:	1cc4983a 	sll	r2,r3,r19
  10b8d8:	3d0ed83a 	srl	r7,r7,r20
  10b8dc:	1d06d83a 	srl	r3,r3,r20
  10b8e0:	11c4b03a 	or	r2,r2,r7
  10b8e4:	003f9306 	br	10b734 <__alt_data_end+0xfff0b734>
  10b8e8:	9ca6983a 	sll	r19,r19,r18
  10b8ec:	88e8d83a 	srl	r20,r17,r3
  10b8f0:	80c4d83a 	srl	r2,r16,r3
  10b8f4:	982cd43a 	srli	r22,r19,16
  10b8f8:	8ca2983a 	sll	r17,r17,r18
  10b8fc:	a009883a 	mov	r4,r20
  10b900:	b00b883a 	mov	r5,r22
  10b904:	1478b03a 	or	fp,r2,r17
  10b908:	0100f480 	call	100f48 <__umodsi3>
  10b90c:	a009883a 	mov	r4,r20
  10b910:	b00b883a 	mov	r5,r22
  10b914:	1023883a 	mov	r17,r2
  10b918:	0100ee40 	call	100ee4 <__udivsi3>
  10b91c:	9d7fffcc 	andi	r21,r19,65535
  10b920:	880a943a 	slli	r5,r17,16
  10b924:	e008d43a 	srli	r4,fp,16
  10b928:	a885383a 	mul	r2,r21,r2
  10b92c:	84a8983a 	sll	r20,r16,r18
  10b930:	2148b03a 	or	r4,r4,r5
  10b934:	2080042e 	bgeu	r4,r2,10b948 <__umoddi3+0x47c>
  10b938:	24c9883a 	add	r4,r4,r19
  10b93c:	24c00236 	bltu	r4,r19,10b948 <__umoddi3+0x47c>
  10b940:	2080012e 	bgeu	r4,r2,10b948 <__umoddi3+0x47c>
  10b944:	24c9883a 	add	r4,r4,r19
  10b948:	20a3c83a 	sub	r17,r4,r2
  10b94c:	b00b883a 	mov	r5,r22
  10b950:	8809883a 	mov	r4,r17
  10b954:	0100f480 	call	100f48 <__umodsi3>
  10b958:	102f883a 	mov	r23,r2
  10b95c:	8809883a 	mov	r4,r17
  10b960:	b00b883a 	mov	r5,r22
  10b964:	0100ee40 	call	100ee4 <__udivsi3>
  10b968:	b82e943a 	slli	r23,r23,16
  10b96c:	a885383a 	mul	r2,r21,r2
  10b970:	e13fffcc 	andi	r4,fp,65535
  10b974:	25c8b03a 	or	r4,r4,r23
  10b978:	2080042e 	bgeu	r4,r2,10b98c <__umoddi3+0x4c0>
  10b97c:	24c9883a 	add	r4,r4,r19
  10b980:	24c00236 	bltu	r4,r19,10b98c <__umoddi3+0x4c0>
  10b984:	2080012e 	bgeu	r4,r2,10b98c <__umoddi3+0x4c0>
  10b988:	24c9883a 	add	r4,r4,r19
  10b98c:	20a3c83a 	sub	r17,r4,r2
  10b990:	003f4806 	br	10b6b4 <__alt_data_end+0xfff0b6b4>
  10b994:	2c8fc83a 	sub	r7,r5,r18
  10b998:	1545c83a 	sub	r2,r2,r21
  10b99c:	29cb803a 	cmpltu	r5,r5,r7
  10b9a0:	1145c83a 	sub	r2,r2,r5
  10b9a4:	4089c83a 	sub	r4,r8,r2
  10b9a8:	003fc706 	br	10b8c8 <__alt_data_end+0xfff0b8c8>
  10b9ac:	01000604 	movi	r4,24
  10b9b0:	003f1806 	br	10b614 <__alt_data_end+0xfff0b614>
  10b9b4:	00800604 	movi	r2,24
  10b9b8:	003f3206 	br	10b684 <__alt_data_end+0xfff0b684>
  10b9bc:	01000604 	movi	r4,24
  10b9c0:	003ed906 	br	10b528 <__alt_data_end+0xfff0b528>
  10b9c4:	413fa52e 	bgeu	r8,r4,10b85c <__alt_data_end+0xfff0b85c>
  10b9c8:	297fff84 	addi	r5,r5,-2
  10b9cc:	4551883a 	add	r8,r8,r21
  10b9d0:	003fa306 	br	10b860 <__alt_data_end+0xfff0b860>
  10b9d4:	15ff8b2e 	bgeu	r2,r23,10b804 <__alt_data_end+0xfff0b804>
  10b9d8:	31bfff84 	addi	r6,r6,-2
  10b9dc:	1545883a 	add	r2,r2,r21
  10b9e0:	003f8906 	br	10b808 <__alt_data_end+0xfff0b808>
  10b9e4:	24c9883a 	add	r4,r4,r19
  10b9e8:	003eee06 	br	10b5a4 <__alt_data_end+0xfff0b5a4>
  10b9ec:	8005883a 	mov	r2,r16
  10b9f0:	003f1706 	br	10b650 <__alt_data_end+0xfff0b650>
  10b9f4:	817fe736 	bltu	r16,r5,10b994 <__alt_data_end+0xfff0b994>
  10b9f8:	280f883a 	mov	r7,r5
  10b9fc:	0009883a 	mov	r4,zero
  10ba00:	003fb106 	br	10b8c8 <__alt_data_end+0xfff0b8c8>

0010ba04 <__adddf3>:
  10ba04:	02c00434 	movhi	r11,16
  10ba08:	5affffc4 	addi	r11,r11,-1
  10ba0c:	2806d7fa 	srli	r3,r5,31
  10ba10:	2ad4703a 	and	r10,r5,r11
  10ba14:	3ad2703a 	and	r9,r7,r11
  10ba18:	3804d53a 	srli	r2,r7,20
  10ba1c:	3018d77a 	srli	r12,r6,29
  10ba20:	280ad53a 	srli	r5,r5,20
  10ba24:	501490fa 	slli	r10,r10,3
  10ba28:	2010d77a 	srli	r8,r4,29
  10ba2c:	481290fa 	slli	r9,r9,3
  10ba30:	380ed7fa 	srli	r7,r7,31
  10ba34:	defffb04 	addi	sp,sp,-20
  10ba38:	dc800215 	stw	r18,8(sp)
  10ba3c:	dc400115 	stw	r17,4(sp)
  10ba40:	dc000015 	stw	r16,0(sp)
  10ba44:	dfc00415 	stw	ra,16(sp)
  10ba48:	dcc00315 	stw	r19,12(sp)
  10ba4c:	1c803fcc 	andi	r18,r3,255
  10ba50:	2c01ffcc 	andi	r16,r5,2047
  10ba54:	5210b03a 	or	r8,r10,r8
  10ba58:	202290fa 	slli	r17,r4,3
  10ba5c:	1081ffcc 	andi	r2,r2,2047
  10ba60:	4b12b03a 	or	r9,r9,r12
  10ba64:	300c90fa 	slli	r6,r6,3
  10ba68:	91c07526 	beq	r18,r7,10bc40 <__adddf3+0x23c>
  10ba6c:	8087c83a 	sub	r3,r16,r2
  10ba70:	00c0ab0e 	bge	zero,r3,10bd20 <__adddf3+0x31c>
  10ba74:	10002a1e 	bne	r2,zero,10bb20 <__adddf3+0x11c>
  10ba78:	4984b03a 	or	r2,r9,r6
  10ba7c:	1000961e 	bne	r2,zero,10bcd8 <__adddf3+0x2d4>
  10ba80:	888001cc 	andi	r2,r17,7
  10ba84:	10000726 	beq	r2,zero,10baa4 <__adddf3+0xa0>
  10ba88:	888003cc 	andi	r2,r17,15
  10ba8c:	00c00104 	movi	r3,4
  10ba90:	10c00426 	beq	r2,r3,10baa4 <__adddf3+0xa0>
  10ba94:	88c7883a 	add	r3,r17,r3
  10ba98:	1c63803a 	cmpltu	r17,r3,r17
  10ba9c:	4451883a 	add	r8,r8,r17
  10baa0:	1823883a 	mov	r17,r3
  10baa4:	4080202c 	andhi	r2,r8,128
  10baa8:	10005926 	beq	r2,zero,10bc10 <__adddf3+0x20c>
  10baac:	84000044 	addi	r16,r16,1
  10bab0:	0081ffc4 	movi	r2,2047
  10bab4:	8080ba26 	beq	r16,r2,10bda0 <__adddf3+0x39c>
  10bab8:	00bfe034 	movhi	r2,65408
  10babc:	10bfffc4 	addi	r2,r2,-1
  10bac0:	4090703a 	and	r8,r8,r2
  10bac4:	4004977a 	slli	r2,r8,29
  10bac8:	4010927a 	slli	r8,r8,9
  10bacc:	8822d0fa 	srli	r17,r17,3
  10bad0:	8401ffcc 	andi	r16,r16,2047
  10bad4:	4010d33a 	srli	r8,r8,12
  10bad8:	9007883a 	mov	r3,r18
  10badc:	1444b03a 	or	r2,r2,r17
  10bae0:	8401ffcc 	andi	r16,r16,2047
  10bae4:	8020953a 	slli	r16,r16,20
  10bae8:	18c03fcc 	andi	r3,r3,255
  10baec:	01000434 	movhi	r4,16
  10baf0:	213fffc4 	addi	r4,r4,-1
  10baf4:	180697fa 	slli	r3,r3,31
  10baf8:	4110703a 	and	r8,r8,r4
  10bafc:	4410b03a 	or	r8,r8,r16
  10bb00:	40c6b03a 	or	r3,r8,r3
  10bb04:	dfc00417 	ldw	ra,16(sp)
  10bb08:	dcc00317 	ldw	r19,12(sp)
  10bb0c:	dc800217 	ldw	r18,8(sp)
  10bb10:	dc400117 	ldw	r17,4(sp)
  10bb14:	dc000017 	ldw	r16,0(sp)
  10bb18:	dec00504 	addi	sp,sp,20
  10bb1c:	f800283a 	ret
  10bb20:	0081ffc4 	movi	r2,2047
  10bb24:	80bfd626 	beq	r16,r2,10ba80 <__alt_data_end+0xfff0ba80>
  10bb28:	4a402034 	orhi	r9,r9,128
  10bb2c:	00800e04 	movi	r2,56
  10bb30:	10c09f16 	blt	r2,r3,10bdb0 <__adddf3+0x3ac>
  10bb34:	008007c4 	movi	r2,31
  10bb38:	10c0c216 	blt	r2,r3,10be44 <__adddf3+0x440>
  10bb3c:	00800804 	movi	r2,32
  10bb40:	10c5c83a 	sub	r2,r2,r3
  10bb44:	488a983a 	sll	r5,r9,r2
  10bb48:	30c8d83a 	srl	r4,r6,r3
  10bb4c:	3084983a 	sll	r2,r6,r2
  10bb50:	48c6d83a 	srl	r3,r9,r3
  10bb54:	290cb03a 	or	r6,r5,r4
  10bb58:	1004c03a 	cmpne	r2,r2,zero
  10bb5c:	308cb03a 	or	r6,r6,r2
  10bb60:	898dc83a 	sub	r6,r17,r6
  10bb64:	89a3803a 	cmpltu	r17,r17,r6
  10bb68:	40d1c83a 	sub	r8,r8,r3
  10bb6c:	4451c83a 	sub	r8,r8,r17
  10bb70:	3023883a 	mov	r17,r6
  10bb74:	4080202c 	andhi	r2,r8,128
  10bb78:	10002326 	beq	r2,zero,10bc08 <__adddf3+0x204>
  10bb7c:	04c02034 	movhi	r19,128
  10bb80:	9cffffc4 	addi	r19,r19,-1
  10bb84:	44e6703a 	and	r19,r8,r19
  10bb88:	98007626 	beq	r19,zero,10bd64 <__adddf3+0x360>
  10bb8c:	9809883a 	mov	r4,r19
  10bb90:	01019700 	call	101970 <__clzsi2>
  10bb94:	10fffe04 	addi	r3,r2,-8
  10bb98:	010007c4 	movi	r4,31
  10bb9c:	20c07716 	blt	r4,r3,10bd7c <__adddf3+0x378>
  10bba0:	00800804 	movi	r2,32
  10bba4:	10c5c83a 	sub	r2,r2,r3
  10bba8:	8884d83a 	srl	r2,r17,r2
  10bbac:	98d0983a 	sll	r8,r19,r3
  10bbb0:	88e2983a 	sll	r17,r17,r3
  10bbb4:	1204b03a 	or	r2,r2,r8
  10bbb8:	1c007416 	blt	r3,r16,10bd8c <__adddf3+0x388>
  10bbbc:	1c21c83a 	sub	r16,r3,r16
  10bbc0:	82000044 	addi	r8,r16,1
  10bbc4:	00c007c4 	movi	r3,31
  10bbc8:	1a009116 	blt	r3,r8,10be10 <__adddf3+0x40c>
  10bbcc:	00c00804 	movi	r3,32
  10bbd0:	1a07c83a 	sub	r3,r3,r8
  10bbd4:	8a08d83a 	srl	r4,r17,r8
  10bbd8:	88e2983a 	sll	r17,r17,r3
  10bbdc:	10c6983a 	sll	r3,r2,r3
  10bbe0:	1210d83a 	srl	r8,r2,r8
  10bbe4:	8804c03a 	cmpne	r2,r17,zero
  10bbe8:	1906b03a 	or	r3,r3,r4
  10bbec:	18a2b03a 	or	r17,r3,r2
  10bbf0:	0021883a 	mov	r16,zero
  10bbf4:	003fa206 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10bbf8:	1890b03a 	or	r8,r3,r2
  10bbfc:	40017d26 	beq	r8,zero,10c1f4 <__adddf3+0x7f0>
  10bc00:	1011883a 	mov	r8,r2
  10bc04:	1823883a 	mov	r17,r3
  10bc08:	888001cc 	andi	r2,r17,7
  10bc0c:	103f9e1e 	bne	r2,zero,10ba88 <__alt_data_end+0xfff0ba88>
  10bc10:	4004977a 	slli	r2,r8,29
  10bc14:	8822d0fa 	srli	r17,r17,3
  10bc18:	4010d0fa 	srli	r8,r8,3
  10bc1c:	9007883a 	mov	r3,r18
  10bc20:	1444b03a 	or	r2,r2,r17
  10bc24:	0101ffc4 	movi	r4,2047
  10bc28:	81002426 	beq	r16,r4,10bcbc <__adddf3+0x2b8>
  10bc2c:	8120703a 	and	r16,r16,r4
  10bc30:	01000434 	movhi	r4,16
  10bc34:	213fffc4 	addi	r4,r4,-1
  10bc38:	4110703a 	and	r8,r8,r4
  10bc3c:	003fa806 	br	10bae0 <__alt_data_end+0xfff0bae0>
  10bc40:	8089c83a 	sub	r4,r16,r2
  10bc44:	01005e0e 	bge	zero,r4,10bdc0 <__adddf3+0x3bc>
  10bc48:	10002b26 	beq	r2,zero,10bcf8 <__adddf3+0x2f4>
  10bc4c:	0081ffc4 	movi	r2,2047
  10bc50:	80bf8b26 	beq	r16,r2,10ba80 <__alt_data_end+0xfff0ba80>
  10bc54:	4a402034 	orhi	r9,r9,128
  10bc58:	00800e04 	movi	r2,56
  10bc5c:	1100a40e 	bge	r2,r4,10bef0 <__adddf3+0x4ec>
  10bc60:	498cb03a 	or	r6,r9,r6
  10bc64:	300ac03a 	cmpne	r5,r6,zero
  10bc68:	0013883a 	mov	r9,zero
  10bc6c:	2c4b883a 	add	r5,r5,r17
  10bc70:	2c63803a 	cmpltu	r17,r5,r17
  10bc74:	4a11883a 	add	r8,r9,r8
  10bc78:	8a11883a 	add	r8,r17,r8
  10bc7c:	2823883a 	mov	r17,r5
  10bc80:	4080202c 	andhi	r2,r8,128
  10bc84:	103fe026 	beq	r2,zero,10bc08 <__alt_data_end+0xfff0bc08>
  10bc88:	84000044 	addi	r16,r16,1
  10bc8c:	0081ffc4 	movi	r2,2047
  10bc90:	8080d226 	beq	r16,r2,10bfdc <__adddf3+0x5d8>
  10bc94:	00bfe034 	movhi	r2,65408
  10bc98:	10bfffc4 	addi	r2,r2,-1
  10bc9c:	4090703a 	and	r8,r8,r2
  10bca0:	880ad07a 	srli	r5,r17,1
  10bca4:	400897fa 	slli	r4,r8,31
  10bca8:	88c0004c 	andi	r3,r17,1
  10bcac:	28e2b03a 	or	r17,r5,r3
  10bcb0:	4010d07a 	srli	r8,r8,1
  10bcb4:	2462b03a 	or	r17,r4,r17
  10bcb8:	003f7106 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10bcbc:	4088b03a 	or	r4,r8,r2
  10bcc0:	20014526 	beq	r4,zero,10c1d8 <__adddf3+0x7d4>
  10bcc4:	01000434 	movhi	r4,16
  10bcc8:	42000234 	orhi	r8,r8,8
  10bccc:	213fffc4 	addi	r4,r4,-1
  10bcd0:	4110703a 	and	r8,r8,r4
  10bcd4:	003f8206 	br	10bae0 <__alt_data_end+0xfff0bae0>
  10bcd8:	18ffffc4 	addi	r3,r3,-1
  10bcdc:	1800491e 	bne	r3,zero,10be04 <__adddf3+0x400>
  10bce0:	898bc83a 	sub	r5,r17,r6
  10bce4:	8963803a 	cmpltu	r17,r17,r5
  10bce8:	4251c83a 	sub	r8,r8,r9
  10bcec:	4451c83a 	sub	r8,r8,r17
  10bcf0:	2823883a 	mov	r17,r5
  10bcf4:	003f9f06 	br	10bb74 <__alt_data_end+0xfff0bb74>
  10bcf8:	4984b03a 	or	r2,r9,r6
  10bcfc:	103f6026 	beq	r2,zero,10ba80 <__alt_data_end+0xfff0ba80>
  10bd00:	213fffc4 	addi	r4,r4,-1
  10bd04:	2000931e 	bne	r4,zero,10bf54 <__adddf3+0x550>
  10bd08:	898d883a 	add	r6,r17,r6
  10bd0c:	3463803a 	cmpltu	r17,r6,r17
  10bd10:	4251883a 	add	r8,r8,r9
  10bd14:	8a11883a 	add	r8,r17,r8
  10bd18:	3023883a 	mov	r17,r6
  10bd1c:	003fd806 	br	10bc80 <__alt_data_end+0xfff0bc80>
  10bd20:	1800541e 	bne	r3,zero,10be74 <__adddf3+0x470>
  10bd24:	80800044 	addi	r2,r16,1
  10bd28:	1081ffcc 	andi	r2,r2,2047
  10bd2c:	00c00044 	movi	r3,1
  10bd30:	1880a00e 	bge	r3,r2,10bfb4 <__adddf3+0x5b0>
  10bd34:	8989c83a 	sub	r4,r17,r6
  10bd38:	8905803a 	cmpltu	r2,r17,r4
  10bd3c:	4267c83a 	sub	r19,r8,r9
  10bd40:	98a7c83a 	sub	r19,r19,r2
  10bd44:	9880202c 	andhi	r2,r19,128
  10bd48:	10006326 	beq	r2,zero,10bed8 <__adddf3+0x4d4>
  10bd4c:	3463c83a 	sub	r17,r6,r17
  10bd50:	4a07c83a 	sub	r3,r9,r8
  10bd54:	344d803a 	cmpltu	r6,r6,r17
  10bd58:	19a7c83a 	sub	r19,r3,r6
  10bd5c:	3825883a 	mov	r18,r7
  10bd60:	983f8a1e 	bne	r19,zero,10bb8c <__alt_data_end+0xfff0bb8c>
  10bd64:	8809883a 	mov	r4,r17
  10bd68:	01019700 	call	101970 <__clzsi2>
  10bd6c:	10800804 	addi	r2,r2,32
  10bd70:	10fffe04 	addi	r3,r2,-8
  10bd74:	010007c4 	movi	r4,31
  10bd78:	20ff890e 	bge	r4,r3,10bba0 <__alt_data_end+0xfff0bba0>
  10bd7c:	10bff604 	addi	r2,r2,-40
  10bd80:	8884983a 	sll	r2,r17,r2
  10bd84:	0023883a 	mov	r17,zero
  10bd88:	1c3f8c0e 	bge	r3,r16,10bbbc <__alt_data_end+0xfff0bbbc>
  10bd8c:	023fe034 	movhi	r8,65408
  10bd90:	423fffc4 	addi	r8,r8,-1
  10bd94:	80e1c83a 	sub	r16,r16,r3
  10bd98:	1210703a 	and	r8,r2,r8
  10bd9c:	003f3806 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10bda0:	9007883a 	mov	r3,r18
  10bda4:	0011883a 	mov	r8,zero
  10bda8:	0005883a 	mov	r2,zero
  10bdac:	003f4c06 	br	10bae0 <__alt_data_end+0xfff0bae0>
  10bdb0:	498cb03a 	or	r6,r9,r6
  10bdb4:	300cc03a 	cmpne	r6,r6,zero
  10bdb8:	0007883a 	mov	r3,zero
  10bdbc:	003f6806 	br	10bb60 <__alt_data_end+0xfff0bb60>
  10bdc0:	20009c1e 	bne	r4,zero,10c034 <__adddf3+0x630>
  10bdc4:	80800044 	addi	r2,r16,1
  10bdc8:	1141ffcc 	andi	r5,r2,2047
  10bdcc:	01000044 	movi	r4,1
  10bdd0:	2140670e 	bge	r4,r5,10bf70 <__adddf3+0x56c>
  10bdd4:	0101ffc4 	movi	r4,2047
  10bdd8:	11007f26 	beq	r2,r4,10bfd8 <__adddf3+0x5d4>
  10bddc:	898d883a 	add	r6,r17,r6
  10bde0:	4247883a 	add	r3,r8,r9
  10bde4:	3451803a 	cmpltu	r8,r6,r17
  10bde8:	40d1883a 	add	r8,r8,r3
  10bdec:	402297fa 	slli	r17,r8,31
  10bdf0:	300cd07a 	srli	r6,r6,1
  10bdf4:	4010d07a 	srli	r8,r8,1
  10bdf8:	1021883a 	mov	r16,r2
  10bdfc:	89a2b03a 	or	r17,r17,r6
  10be00:	003f1f06 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10be04:	0081ffc4 	movi	r2,2047
  10be08:	80bf481e 	bne	r16,r2,10bb2c <__alt_data_end+0xfff0bb2c>
  10be0c:	003f1c06 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10be10:	843ff844 	addi	r16,r16,-31
  10be14:	01000804 	movi	r4,32
  10be18:	1406d83a 	srl	r3,r2,r16
  10be1c:	41005026 	beq	r8,r4,10bf60 <__adddf3+0x55c>
  10be20:	01001004 	movi	r4,64
  10be24:	2211c83a 	sub	r8,r4,r8
  10be28:	1204983a 	sll	r2,r2,r8
  10be2c:	88a2b03a 	or	r17,r17,r2
  10be30:	8822c03a 	cmpne	r17,r17,zero
  10be34:	1c62b03a 	or	r17,r3,r17
  10be38:	0011883a 	mov	r8,zero
  10be3c:	0021883a 	mov	r16,zero
  10be40:	003f7106 	br	10bc08 <__alt_data_end+0xfff0bc08>
  10be44:	193ff804 	addi	r4,r3,-32
  10be48:	00800804 	movi	r2,32
  10be4c:	4908d83a 	srl	r4,r9,r4
  10be50:	18804526 	beq	r3,r2,10bf68 <__adddf3+0x564>
  10be54:	00801004 	movi	r2,64
  10be58:	10c5c83a 	sub	r2,r2,r3
  10be5c:	4886983a 	sll	r3,r9,r2
  10be60:	198cb03a 	or	r6,r3,r6
  10be64:	300cc03a 	cmpne	r6,r6,zero
  10be68:	218cb03a 	or	r6,r4,r6
  10be6c:	0007883a 	mov	r3,zero
  10be70:	003f3b06 	br	10bb60 <__alt_data_end+0xfff0bb60>
  10be74:	80002a26 	beq	r16,zero,10bf20 <__adddf3+0x51c>
  10be78:	0101ffc4 	movi	r4,2047
  10be7c:	11006826 	beq	r2,r4,10c020 <__adddf3+0x61c>
  10be80:	00c7c83a 	sub	r3,zero,r3
  10be84:	42002034 	orhi	r8,r8,128
  10be88:	01000e04 	movi	r4,56
  10be8c:	20c07c16 	blt	r4,r3,10c080 <__adddf3+0x67c>
  10be90:	010007c4 	movi	r4,31
  10be94:	20c0da16 	blt	r4,r3,10c200 <__adddf3+0x7fc>
  10be98:	01000804 	movi	r4,32
  10be9c:	20c9c83a 	sub	r4,r4,r3
  10bea0:	4114983a 	sll	r10,r8,r4
  10bea4:	88cad83a 	srl	r5,r17,r3
  10bea8:	8908983a 	sll	r4,r17,r4
  10beac:	40c6d83a 	srl	r3,r8,r3
  10beb0:	5162b03a 	or	r17,r10,r5
  10beb4:	2008c03a 	cmpne	r4,r4,zero
  10beb8:	8922b03a 	or	r17,r17,r4
  10bebc:	3463c83a 	sub	r17,r6,r17
  10bec0:	48c7c83a 	sub	r3,r9,r3
  10bec4:	344d803a 	cmpltu	r6,r6,r17
  10bec8:	1991c83a 	sub	r8,r3,r6
  10becc:	1021883a 	mov	r16,r2
  10bed0:	3825883a 	mov	r18,r7
  10bed4:	003f2706 	br	10bb74 <__alt_data_end+0xfff0bb74>
  10bed8:	24d0b03a 	or	r8,r4,r19
  10bedc:	40001b1e 	bne	r8,zero,10bf4c <__adddf3+0x548>
  10bee0:	0005883a 	mov	r2,zero
  10bee4:	0007883a 	mov	r3,zero
  10bee8:	0021883a 	mov	r16,zero
  10beec:	003f4d06 	br	10bc24 <__alt_data_end+0xfff0bc24>
  10bef0:	008007c4 	movi	r2,31
  10bef4:	11003c16 	blt	r2,r4,10bfe8 <__adddf3+0x5e4>
  10bef8:	00800804 	movi	r2,32
  10befc:	1105c83a 	sub	r2,r2,r4
  10bf00:	488e983a 	sll	r7,r9,r2
  10bf04:	310ad83a 	srl	r5,r6,r4
  10bf08:	3084983a 	sll	r2,r6,r2
  10bf0c:	4912d83a 	srl	r9,r9,r4
  10bf10:	394ab03a 	or	r5,r7,r5
  10bf14:	1004c03a 	cmpne	r2,r2,zero
  10bf18:	288ab03a 	or	r5,r5,r2
  10bf1c:	003f5306 	br	10bc6c <__alt_data_end+0xfff0bc6c>
  10bf20:	4448b03a 	or	r4,r8,r17
  10bf24:	20003e26 	beq	r4,zero,10c020 <__adddf3+0x61c>
  10bf28:	00c6303a 	nor	r3,zero,r3
  10bf2c:	18003a1e 	bne	r3,zero,10c018 <__adddf3+0x614>
  10bf30:	3463c83a 	sub	r17,r6,r17
  10bf34:	4a07c83a 	sub	r3,r9,r8
  10bf38:	344d803a 	cmpltu	r6,r6,r17
  10bf3c:	1991c83a 	sub	r8,r3,r6
  10bf40:	1021883a 	mov	r16,r2
  10bf44:	3825883a 	mov	r18,r7
  10bf48:	003f0a06 	br	10bb74 <__alt_data_end+0xfff0bb74>
  10bf4c:	2023883a 	mov	r17,r4
  10bf50:	003f0d06 	br	10bb88 <__alt_data_end+0xfff0bb88>
  10bf54:	0081ffc4 	movi	r2,2047
  10bf58:	80bf3f1e 	bne	r16,r2,10bc58 <__alt_data_end+0xfff0bc58>
  10bf5c:	003ec806 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10bf60:	0005883a 	mov	r2,zero
  10bf64:	003fb106 	br	10be2c <__alt_data_end+0xfff0be2c>
  10bf68:	0007883a 	mov	r3,zero
  10bf6c:	003fbc06 	br	10be60 <__alt_data_end+0xfff0be60>
  10bf70:	4444b03a 	or	r2,r8,r17
  10bf74:	8000871e 	bne	r16,zero,10c194 <__adddf3+0x790>
  10bf78:	1000ba26 	beq	r2,zero,10c264 <__adddf3+0x860>
  10bf7c:	4984b03a 	or	r2,r9,r6
  10bf80:	103ebf26 	beq	r2,zero,10ba80 <__alt_data_end+0xfff0ba80>
  10bf84:	8985883a 	add	r2,r17,r6
  10bf88:	4247883a 	add	r3,r8,r9
  10bf8c:	1451803a 	cmpltu	r8,r2,r17
  10bf90:	40d1883a 	add	r8,r8,r3
  10bf94:	40c0202c 	andhi	r3,r8,128
  10bf98:	1023883a 	mov	r17,r2
  10bf9c:	183f1a26 	beq	r3,zero,10bc08 <__alt_data_end+0xfff0bc08>
  10bfa0:	00bfe034 	movhi	r2,65408
  10bfa4:	10bfffc4 	addi	r2,r2,-1
  10bfa8:	2021883a 	mov	r16,r4
  10bfac:	4090703a 	and	r8,r8,r2
  10bfb0:	003eb306 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10bfb4:	4444b03a 	or	r2,r8,r17
  10bfb8:	8000291e 	bne	r16,zero,10c060 <__adddf3+0x65c>
  10bfbc:	10004b1e 	bne	r2,zero,10c0ec <__adddf3+0x6e8>
  10bfc0:	4990b03a 	or	r8,r9,r6
  10bfc4:	40008b26 	beq	r8,zero,10c1f4 <__adddf3+0x7f0>
  10bfc8:	4811883a 	mov	r8,r9
  10bfcc:	3023883a 	mov	r17,r6
  10bfd0:	3825883a 	mov	r18,r7
  10bfd4:	003eaa06 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10bfd8:	1021883a 	mov	r16,r2
  10bfdc:	0011883a 	mov	r8,zero
  10bfe0:	0005883a 	mov	r2,zero
  10bfe4:	003f0f06 	br	10bc24 <__alt_data_end+0xfff0bc24>
  10bfe8:	217ff804 	addi	r5,r4,-32
  10bfec:	00800804 	movi	r2,32
  10bff0:	494ad83a 	srl	r5,r9,r5
  10bff4:	20807d26 	beq	r4,r2,10c1ec <__adddf3+0x7e8>
  10bff8:	00801004 	movi	r2,64
  10bffc:	1109c83a 	sub	r4,r2,r4
  10c000:	4912983a 	sll	r9,r9,r4
  10c004:	498cb03a 	or	r6,r9,r6
  10c008:	300cc03a 	cmpne	r6,r6,zero
  10c00c:	298ab03a 	or	r5,r5,r6
  10c010:	0013883a 	mov	r9,zero
  10c014:	003f1506 	br	10bc6c <__alt_data_end+0xfff0bc6c>
  10c018:	0101ffc4 	movi	r4,2047
  10c01c:	113f9a1e 	bne	r2,r4,10be88 <__alt_data_end+0xfff0be88>
  10c020:	4811883a 	mov	r8,r9
  10c024:	3023883a 	mov	r17,r6
  10c028:	1021883a 	mov	r16,r2
  10c02c:	3825883a 	mov	r18,r7
  10c030:	003e9306 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10c034:	8000161e 	bne	r16,zero,10c090 <__adddf3+0x68c>
  10c038:	444ab03a 	or	r5,r8,r17
  10c03c:	28005126 	beq	r5,zero,10c184 <__adddf3+0x780>
  10c040:	0108303a 	nor	r4,zero,r4
  10c044:	20004d1e 	bne	r4,zero,10c17c <__adddf3+0x778>
  10c048:	89a3883a 	add	r17,r17,r6
  10c04c:	4253883a 	add	r9,r8,r9
  10c050:	898d803a 	cmpltu	r6,r17,r6
  10c054:	3251883a 	add	r8,r6,r9
  10c058:	1021883a 	mov	r16,r2
  10c05c:	003f0806 	br	10bc80 <__alt_data_end+0xfff0bc80>
  10c060:	1000301e 	bne	r2,zero,10c124 <__adddf3+0x720>
  10c064:	4984b03a 	or	r2,r9,r6
  10c068:	10007126 	beq	r2,zero,10c230 <__adddf3+0x82c>
  10c06c:	4811883a 	mov	r8,r9
  10c070:	3023883a 	mov	r17,r6
  10c074:	3825883a 	mov	r18,r7
  10c078:	0401ffc4 	movi	r16,2047
  10c07c:	003e8006 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10c080:	4462b03a 	or	r17,r8,r17
  10c084:	8822c03a 	cmpne	r17,r17,zero
  10c088:	0007883a 	mov	r3,zero
  10c08c:	003f8b06 	br	10bebc <__alt_data_end+0xfff0bebc>
  10c090:	0141ffc4 	movi	r5,2047
  10c094:	11403b26 	beq	r2,r5,10c184 <__adddf3+0x780>
  10c098:	0109c83a 	sub	r4,zero,r4
  10c09c:	42002034 	orhi	r8,r8,128
  10c0a0:	01400e04 	movi	r5,56
  10c0a4:	29006716 	blt	r5,r4,10c244 <__adddf3+0x840>
  10c0a8:	014007c4 	movi	r5,31
  10c0ac:	29007016 	blt	r5,r4,10c270 <__adddf3+0x86c>
  10c0b0:	01400804 	movi	r5,32
  10c0b4:	290bc83a 	sub	r5,r5,r4
  10c0b8:	4154983a 	sll	r10,r8,r5
  10c0bc:	890ed83a 	srl	r7,r17,r4
  10c0c0:	894a983a 	sll	r5,r17,r5
  10c0c4:	4108d83a 	srl	r4,r8,r4
  10c0c8:	51e2b03a 	or	r17,r10,r7
  10c0cc:	280ac03a 	cmpne	r5,r5,zero
  10c0d0:	8962b03a 	or	r17,r17,r5
  10c0d4:	89a3883a 	add	r17,r17,r6
  10c0d8:	2253883a 	add	r9,r4,r9
  10c0dc:	898d803a 	cmpltu	r6,r17,r6
  10c0e0:	3251883a 	add	r8,r6,r9
  10c0e4:	1021883a 	mov	r16,r2
  10c0e8:	003ee506 	br	10bc80 <__alt_data_end+0xfff0bc80>
  10c0ec:	4984b03a 	or	r2,r9,r6
  10c0f0:	103e6326 	beq	r2,zero,10ba80 <__alt_data_end+0xfff0ba80>
  10c0f4:	8987c83a 	sub	r3,r17,r6
  10c0f8:	88c9803a 	cmpltu	r4,r17,r3
  10c0fc:	4245c83a 	sub	r2,r8,r9
  10c100:	1105c83a 	sub	r2,r2,r4
  10c104:	1100202c 	andhi	r4,r2,128
  10c108:	203ebb26 	beq	r4,zero,10bbf8 <__alt_data_end+0xfff0bbf8>
  10c10c:	3463c83a 	sub	r17,r6,r17
  10c110:	4a07c83a 	sub	r3,r9,r8
  10c114:	344d803a 	cmpltu	r6,r6,r17
  10c118:	1991c83a 	sub	r8,r3,r6
  10c11c:	3825883a 	mov	r18,r7
  10c120:	003e5706 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10c124:	4984b03a 	or	r2,r9,r6
  10c128:	10002e26 	beq	r2,zero,10c1e4 <__adddf3+0x7e0>
  10c12c:	4004d0fa 	srli	r2,r8,3
  10c130:	8822d0fa 	srli	r17,r17,3
  10c134:	4010977a 	slli	r8,r8,29
  10c138:	10c0022c 	andhi	r3,r2,8
  10c13c:	4462b03a 	or	r17,r8,r17
  10c140:	18000826 	beq	r3,zero,10c164 <__adddf3+0x760>
  10c144:	4808d0fa 	srli	r4,r9,3
  10c148:	20c0022c 	andhi	r3,r4,8
  10c14c:	1800051e 	bne	r3,zero,10c164 <__adddf3+0x760>
  10c150:	300cd0fa 	srli	r6,r6,3
  10c154:	4806977a 	slli	r3,r9,29
  10c158:	2005883a 	mov	r2,r4
  10c15c:	3825883a 	mov	r18,r7
  10c160:	19a2b03a 	or	r17,r3,r6
  10c164:	8810d77a 	srli	r8,r17,29
  10c168:	100490fa 	slli	r2,r2,3
  10c16c:	882290fa 	slli	r17,r17,3
  10c170:	0401ffc4 	movi	r16,2047
  10c174:	4090b03a 	or	r8,r8,r2
  10c178:	003e4106 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10c17c:	0141ffc4 	movi	r5,2047
  10c180:	117fc71e 	bne	r2,r5,10c0a0 <__alt_data_end+0xfff0c0a0>
  10c184:	4811883a 	mov	r8,r9
  10c188:	3023883a 	mov	r17,r6
  10c18c:	1021883a 	mov	r16,r2
  10c190:	003e3b06 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10c194:	10002f26 	beq	r2,zero,10c254 <__adddf3+0x850>
  10c198:	4984b03a 	or	r2,r9,r6
  10c19c:	10001126 	beq	r2,zero,10c1e4 <__adddf3+0x7e0>
  10c1a0:	4004d0fa 	srli	r2,r8,3
  10c1a4:	8822d0fa 	srli	r17,r17,3
  10c1a8:	4010977a 	slli	r8,r8,29
  10c1ac:	10c0022c 	andhi	r3,r2,8
  10c1b0:	4462b03a 	or	r17,r8,r17
  10c1b4:	183feb26 	beq	r3,zero,10c164 <__alt_data_end+0xfff0c164>
  10c1b8:	4808d0fa 	srli	r4,r9,3
  10c1bc:	20c0022c 	andhi	r3,r4,8
  10c1c0:	183fe81e 	bne	r3,zero,10c164 <__alt_data_end+0xfff0c164>
  10c1c4:	300cd0fa 	srli	r6,r6,3
  10c1c8:	4806977a 	slli	r3,r9,29
  10c1cc:	2005883a 	mov	r2,r4
  10c1d0:	19a2b03a 	or	r17,r3,r6
  10c1d4:	003fe306 	br	10c164 <__alt_data_end+0xfff0c164>
  10c1d8:	0011883a 	mov	r8,zero
  10c1dc:	0005883a 	mov	r2,zero
  10c1e0:	003e3f06 	br	10bae0 <__alt_data_end+0xfff0bae0>
  10c1e4:	0401ffc4 	movi	r16,2047
  10c1e8:	003e2506 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10c1ec:	0013883a 	mov	r9,zero
  10c1f0:	003f8406 	br	10c004 <__alt_data_end+0xfff0c004>
  10c1f4:	0005883a 	mov	r2,zero
  10c1f8:	0007883a 	mov	r3,zero
  10c1fc:	003e8906 	br	10bc24 <__alt_data_end+0xfff0bc24>
  10c200:	197ff804 	addi	r5,r3,-32
  10c204:	01000804 	movi	r4,32
  10c208:	414ad83a 	srl	r5,r8,r5
  10c20c:	19002426 	beq	r3,r4,10c2a0 <__adddf3+0x89c>
  10c210:	01001004 	movi	r4,64
  10c214:	20c7c83a 	sub	r3,r4,r3
  10c218:	40c6983a 	sll	r3,r8,r3
  10c21c:	1c46b03a 	or	r3,r3,r17
  10c220:	1806c03a 	cmpne	r3,r3,zero
  10c224:	28e2b03a 	or	r17,r5,r3
  10c228:	0007883a 	mov	r3,zero
  10c22c:	003f2306 	br	10bebc <__alt_data_end+0xfff0bebc>
  10c230:	0007883a 	mov	r3,zero
  10c234:	5811883a 	mov	r8,r11
  10c238:	00bfffc4 	movi	r2,-1
  10c23c:	0401ffc4 	movi	r16,2047
  10c240:	003e7806 	br	10bc24 <__alt_data_end+0xfff0bc24>
  10c244:	4462b03a 	or	r17,r8,r17
  10c248:	8822c03a 	cmpne	r17,r17,zero
  10c24c:	0009883a 	mov	r4,zero
  10c250:	003fa006 	br	10c0d4 <__alt_data_end+0xfff0c0d4>
  10c254:	4811883a 	mov	r8,r9
  10c258:	3023883a 	mov	r17,r6
  10c25c:	0401ffc4 	movi	r16,2047
  10c260:	003e0706 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10c264:	4811883a 	mov	r8,r9
  10c268:	3023883a 	mov	r17,r6
  10c26c:	003e0406 	br	10ba80 <__alt_data_end+0xfff0ba80>
  10c270:	21fff804 	addi	r7,r4,-32
  10c274:	01400804 	movi	r5,32
  10c278:	41ced83a 	srl	r7,r8,r7
  10c27c:	21400a26 	beq	r4,r5,10c2a8 <__adddf3+0x8a4>
  10c280:	01401004 	movi	r5,64
  10c284:	2909c83a 	sub	r4,r5,r4
  10c288:	4108983a 	sll	r4,r8,r4
  10c28c:	2448b03a 	or	r4,r4,r17
  10c290:	2008c03a 	cmpne	r4,r4,zero
  10c294:	3922b03a 	or	r17,r7,r4
  10c298:	0009883a 	mov	r4,zero
  10c29c:	003f8d06 	br	10c0d4 <__alt_data_end+0xfff0c0d4>
  10c2a0:	0007883a 	mov	r3,zero
  10c2a4:	003fdd06 	br	10c21c <__alt_data_end+0xfff0c21c>
  10c2a8:	0009883a 	mov	r4,zero
  10c2ac:	003ff706 	br	10c28c <__alt_data_end+0xfff0c28c>

0010c2b0 <__divdf3>:
  10c2b0:	defff204 	addi	sp,sp,-56
  10c2b4:	dd400915 	stw	r21,36(sp)
  10c2b8:	282ad53a 	srli	r21,r5,20
  10c2bc:	dd000815 	stw	r20,32(sp)
  10c2c0:	2828d7fa 	srli	r20,r5,31
  10c2c4:	dc000415 	stw	r16,16(sp)
  10c2c8:	04000434 	movhi	r16,16
  10c2cc:	df000c15 	stw	fp,48(sp)
  10c2d0:	843fffc4 	addi	r16,r16,-1
  10c2d4:	dfc00d15 	stw	ra,52(sp)
  10c2d8:	ddc00b15 	stw	r23,44(sp)
  10c2dc:	dd800a15 	stw	r22,40(sp)
  10c2e0:	dcc00715 	stw	r19,28(sp)
  10c2e4:	dc800615 	stw	r18,24(sp)
  10c2e8:	dc400515 	stw	r17,20(sp)
  10c2ec:	ad41ffcc 	andi	r21,r21,2047
  10c2f0:	2c20703a 	and	r16,r5,r16
  10c2f4:	a7003fcc 	andi	fp,r20,255
  10c2f8:	a8006126 	beq	r21,zero,10c480 <__divdf3+0x1d0>
  10c2fc:	0081ffc4 	movi	r2,2047
  10c300:	2025883a 	mov	r18,r4
  10c304:	a8803726 	beq	r21,r2,10c3e4 <__divdf3+0x134>
  10c308:	80800434 	orhi	r2,r16,16
  10c30c:	100490fa 	slli	r2,r2,3
  10c310:	2020d77a 	srli	r16,r4,29
  10c314:	202490fa 	slli	r18,r4,3
  10c318:	ad7f0044 	addi	r21,r21,-1023
  10c31c:	80a0b03a 	or	r16,r16,r2
  10c320:	0027883a 	mov	r19,zero
  10c324:	0013883a 	mov	r9,zero
  10c328:	3804d53a 	srli	r2,r7,20
  10c32c:	382cd7fa 	srli	r22,r7,31
  10c330:	04400434 	movhi	r17,16
  10c334:	8c7fffc4 	addi	r17,r17,-1
  10c338:	1081ffcc 	andi	r2,r2,2047
  10c33c:	3011883a 	mov	r8,r6
  10c340:	3c62703a 	and	r17,r7,r17
  10c344:	b5c03fcc 	andi	r23,r22,255
  10c348:	10006c26 	beq	r2,zero,10c4fc <__divdf3+0x24c>
  10c34c:	00c1ffc4 	movi	r3,2047
  10c350:	10c06426 	beq	r2,r3,10c4e4 <__divdf3+0x234>
  10c354:	88c00434 	orhi	r3,r17,16
  10c358:	180690fa 	slli	r3,r3,3
  10c35c:	3022d77a 	srli	r17,r6,29
  10c360:	301090fa 	slli	r8,r6,3
  10c364:	10bf0044 	addi	r2,r2,-1023
  10c368:	88e2b03a 	or	r17,r17,r3
  10c36c:	000f883a 	mov	r7,zero
  10c370:	a58cf03a 	xor	r6,r20,r22
  10c374:	3cc8b03a 	or	r4,r7,r19
  10c378:	a8abc83a 	sub	r21,r21,r2
  10c37c:	008003c4 	movi	r2,15
  10c380:	3007883a 	mov	r3,r6
  10c384:	34c03fcc 	andi	r19,r6,255
  10c388:	11009036 	bltu	r2,r4,10c5cc <__divdf3+0x31c>
  10c38c:	200890ba 	slli	r4,r4,2
  10c390:	00800474 	movhi	r2,17
  10c394:	10b0e904 	addi	r2,r2,-15452
  10c398:	2089883a 	add	r4,r4,r2
  10c39c:	20800017 	ldw	r2,0(r4)
  10c3a0:	1000683a 	jmp	r2
  10c3a4:	0010c5cc 	andi	zero,zero,17175
  10c3a8:	0010c41c 	xori	zero,zero,17168
  10c3ac:	0010c5bc 	xorhi	zero,zero,17174
  10c3b0:	0010c410 	cmplti	zero,zero,17168
  10c3b4:	0010c5bc 	xorhi	zero,zero,17174
  10c3b8:	0010c590 	cmplti	zero,zero,17174
  10c3bc:	0010c5bc 	xorhi	zero,zero,17174
  10c3c0:	0010c410 	cmplti	zero,zero,17168
  10c3c4:	0010c41c 	xori	zero,zero,17168
  10c3c8:	0010c41c 	xori	zero,zero,17168
  10c3cc:	0010c590 	cmplti	zero,zero,17174
  10c3d0:	0010c410 	cmplti	zero,zero,17168
  10c3d4:	0010c400 	call	10c40 <__alt_mem_onchip_memory2-0xef3c0>
  10c3d8:	0010c400 	call	10c40 <__alt_mem_onchip_memory2-0xef3c0>
  10c3dc:	0010c400 	call	10c40 <__alt_mem_onchip_memory2-0xef3c0>
  10c3e0:	0010c8b0 	cmpltui	zero,zero,17186
  10c3e4:	2404b03a 	or	r2,r4,r16
  10c3e8:	1000661e 	bne	r2,zero,10c584 <__divdf3+0x2d4>
  10c3ec:	04c00204 	movi	r19,8
  10c3f0:	0021883a 	mov	r16,zero
  10c3f4:	0025883a 	mov	r18,zero
  10c3f8:	02400084 	movi	r9,2
  10c3fc:	003fca06 	br	10c328 <__alt_data_end+0xfff0c328>
  10c400:	8023883a 	mov	r17,r16
  10c404:	9011883a 	mov	r8,r18
  10c408:	e02f883a 	mov	r23,fp
  10c40c:	480f883a 	mov	r7,r9
  10c410:	00800084 	movi	r2,2
  10c414:	3881311e 	bne	r7,r2,10c8dc <__divdf3+0x62c>
  10c418:	b827883a 	mov	r19,r23
  10c41c:	98c0004c 	andi	r3,r19,1
  10c420:	0081ffc4 	movi	r2,2047
  10c424:	000b883a 	mov	r5,zero
  10c428:	0025883a 	mov	r18,zero
  10c42c:	1004953a 	slli	r2,r2,20
  10c430:	18c03fcc 	andi	r3,r3,255
  10c434:	04400434 	movhi	r17,16
  10c438:	8c7fffc4 	addi	r17,r17,-1
  10c43c:	180697fa 	slli	r3,r3,31
  10c440:	2c4a703a 	and	r5,r5,r17
  10c444:	288ab03a 	or	r5,r5,r2
  10c448:	28c6b03a 	or	r3,r5,r3
  10c44c:	9005883a 	mov	r2,r18
  10c450:	dfc00d17 	ldw	ra,52(sp)
  10c454:	df000c17 	ldw	fp,48(sp)
  10c458:	ddc00b17 	ldw	r23,44(sp)
  10c45c:	dd800a17 	ldw	r22,40(sp)
  10c460:	dd400917 	ldw	r21,36(sp)
  10c464:	dd000817 	ldw	r20,32(sp)
  10c468:	dcc00717 	ldw	r19,28(sp)
  10c46c:	dc800617 	ldw	r18,24(sp)
  10c470:	dc400517 	ldw	r17,20(sp)
  10c474:	dc000417 	ldw	r16,16(sp)
  10c478:	dec00e04 	addi	sp,sp,56
  10c47c:	f800283a 	ret
  10c480:	2404b03a 	or	r2,r4,r16
  10c484:	2027883a 	mov	r19,r4
  10c488:	10003926 	beq	r2,zero,10c570 <__divdf3+0x2c0>
  10c48c:	80012e26 	beq	r16,zero,10c948 <__divdf3+0x698>
  10c490:	8009883a 	mov	r4,r16
  10c494:	d9800315 	stw	r6,12(sp)
  10c498:	d9c00215 	stw	r7,8(sp)
  10c49c:	01019700 	call	101970 <__clzsi2>
  10c4a0:	d9800317 	ldw	r6,12(sp)
  10c4a4:	d9c00217 	ldw	r7,8(sp)
  10c4a8:	113ffd44 	addi	r4,r2,-11
  10c4ac:	00c00704 	movi	r3,28
  10c4b0:	19012116 	blt	r3,r4,10c938 <__divdf3+0x688>
  10c4b4:	00c00744 	movi	r3,29
  10c4b8:	147ffe04 	addi	r17,r2,-8
  10c4bc:	1907c83a 	sub	r3,r3,r4
  10c4c0:	8460983a 	sll	r16,r16,r17
  10c4c4:	98c6d83a 	srl	r3,r19,r3
  10c4c8:	9c64983a 	sll	r18,r19,r17
  10c4cc:	1c20b03a 	or	r16,r3,r16
  10c4d0:	1080fcc4 	addi	r2,r2,1011
  10c4d4:	00abc83a 	sub	r21,zero,r2
  10c4d8:	0027883a 	mov	r19,zero
  10c4dc:	0013883a 	mov	r9,zero
  10c4e0:	003f9106 	br	10c328 <__alt_data_end+0xfff0c328>
  10c4e4:	3446b03a 	or	r3,r6,r17
  10c4e8:	18001f1e 	bne	r3,zero,10c568 <__divdf3+0x2b8>
  10c4ec:	0023883a 	mov	r17,zero
  10c4f0:	0011883a 	mov	r8,zero
  10c4f4:	01c00084 	movi	r7,2
  10c4f8:	003f9d06 	br	10c370 <__alt_data_end+0xfff0c370>
  10c4fc:	3446b03a 	or	r3,r6,r17
  10c500:	18001526 	beq	r3,zero,10c558 <__divdf3+0x2a8>
  10c504:	88011b26 	beq	r17,zero,10c974 <__divdf3+0x6c4>
  10c508:	8809883a 	mov	r4,r17
  10c50c:	d9800315 	stw	r6,12(sp)
  10c510:	da400115 	stw	r9,4(sp)
  10c514:	01019700 	call	101970 <__clzsi2>
  10c518:	d9800317 	ldw	r6,12(sp)
  10c51c:	da400117 	ldw	r9,4(sp)
  10c520:	113ffd44 	addi	r4,r2,-11
  10c524:	00c00704 	movi	r3,28
  10c528:	19010e16 	blt	r3,r4,10c964 <__divdf3+0x6b4>
  10c52c:	00c00744 	movi	r3,29
  10c530:	123ffe04 	addi	r8,r2,-8
  10c534:	1907c83a 	sub	r3,r3,r4
  10c538:	8a22983a 	sll	r17,r17,r8
  10c53c:	30c6d83a 	srl	r3,r6,r3
  10c540:	3210983a 	sll	r8,r6,r8
  10c544:	1c62b03a 	or	r17,r3,r17
  10c548:	1080fcc4 	addi	r2,r2,1011
  10c54c:	0085c83a 	sub	r2,zero,r2
  10c550:	000f883a 	mov	r7,zero
  10c554:	003f8606 	br	10c370 <__alt_data_end+0xfff0c370>
  10c558:	0023883a 	mov	r17,zero
  10c55c:	0011883a 	mov	r8,zero
  10c560:	01c00044 	movi	r7,1
  10c564:	003f8206 	br	10c370 <__alt_data_end+0xfff0c370>
  10c568:	01c000c4 	movi	r7,3
  10c56c:	003f8006 	br	10c370 <__alt_data_end+0xfff0c370>
  10c570:	04c00104 	movi	r19,4
  10c574:	0021883a 	mov	r16,zero
  10c578:	0025883a 	mov	r18,zero
  10c57c:	02400044 	movi	r9,1
  10c580:	003f6906 	br	10c328 <__alt_data_end+0xfff0c328>
  10c584:	04c00304 	movi	r19,12
  10c588:	024000c4 	movi	r9,3
  10c58c:	003f6606 	br	10c328 <__alt_data_end+0xfff0c328>
  10c590:	01400434 	movhi	r5,16
  10c594:	0007883a 	mov	r3,zero
  10c598:	297fffc4 	addi	r5,r5,-1
  10c59c:	04bfffc4 	movi	r18,-1
  10c5a0:	0081ffc4 	movi	r2,2047
  10c5a4:	003fa106 	br	10c42c <__alt_data_end+0xfff0c42c>
  10c5a8:	00c00044 	movi	r3,1
  10c5ac:	1887c83a 	sub	r3,r3,r2
  10c5b0:	01000e04 	movi	r4,56
  10c5b4:	20c1210e 	bge	r4,r3,10ca3c <__divdf3+0x78c>
  10c5b8:	98c0004c 	andi	r3,r19,1
  10c5bc:	0005883a 	mov	r2,zero
  10c5c0:	000b883a 	mov	r5,zero
  10c5c4:	0025883a 	mov	r18,zero
  10c5c8:	003f9806 	br	10c42c <__alt_data_end+0xfff0c42c>
  10c5cc:	8c00fd36 	bltu	r17,r16,10c9c4 <__divdf3+0x714>
  10c5d0:	8440fb26 	beq	r16,r17,10c9c0 <__divdf3+0x710>
  10c5d4:	8007883a 	mov	r3,r16
  10c5d8:	ad7fffc4 	addi	r21,r21,-1
  10c5dc:	0021883a 	mov	r16,zero
  10c5e0:	4004d63a 	srli	r2,r8,24
  10c5e4:	8822923a 	slli	r17,r17,8
  10c5e8:	1809883a 	mov	r4,r3
  10c5ec:	402c923a 	slli	r22,r8,8
  10c5f0:	88b8b03a 	or	fp,r17,r2
  10c5f4:	e028d43a 	srli	r20,fp,16
  10c5f8:	d8c00015 	stw	r3,0(sp)
  10c5fc:	e5ffffcc 	andi	r23,fp,65535
  10c600:	a00b883a 	mov	r5,r20
  10c604:	0100ee40 	call	100ee4 <__udivsi3>
  10c608:	d8c00017 	ldw	r3,0(sp)
  10c60c:	a00b883a 	mov	r5,r20
  10c610:	d8800315 	stw	r2,12(sp)
  10c614:	1809883a 	mov	r4,r3
  10c618:	0100f480 	call	100f48 <__umodsi3>
  10c61c:	d9800317 	ldw	r6,12(sp)
  10c620:	1006943a 	slli	r3,r2,16
  10c624:	9004d43a 	srli	r2,r18,16
  10c628:	b9a3383a 	mul	r17,r23,r6
  10c62c:	10c4b03a 	or	r2,r2,r3
  10c630:	1440062e 	bgeu	r2,r17,10c64c <__divdf3+0x39c>
  10c634:	1705883a 	add	r2,r2,fp
  10c638:	30ffffc4 	addi	r3,r6,-1
  10c63c:	1700ee36 	bltu	r2,fp,10c9f8 <__divdf3+0x748>
  10c640:	1440ed2e 	bgeu	r2,r17,10c9f8 <__divdf3+0x748>
  10c644:	31bfff84 	addi	r6,r6,-2
  10c648:	1705883a 	add	r2,r2,fp
  10c64c:	1463c83a 	sub	r17,r2,r17
  10c650:	a00b883a 	mov	r5,r20
  10c654:	8809883a 	mov	r4,r17
  10c658:	d9800315 	stw	r6,12(sp)
  10c65c:	0100ee40 	call	100ee4 <__udivsi3>
  10c660:	a00b883a 	mov	r5,r20
  10c664:	8809883a 	mov	r4,r17
  10c668:	d8800215 	stw	r2,8(sp)
  10c66c:	0100f480 	call	100f48 <__umodsi3>
  10c670:	d9c00217 	ldw	r7,8(sp)
  10c674:	1004943a 	slli	r2,r2,16
  10c678:	94bfffcc 	andi	r18,r18,65535
  10c67c:	b9d1383a 	mul	r8,r23,r7
  10c680:	90a4b03a 	or	r18,r18,r2
  10c684:	d9800317 	ldw	r6,12(sp)
  10c688:	9200062e 	bgeu	r18,r8,10c6a4 <__divdf3+0x3f4>
  10c68c:	9725883a 	add	r18,r18,fp
  10c690:	38bfffc4 	addi	r2,r7,-1
  10c694:	9700d636 	bltu	r18,fp,10c9f0 <__divdf3+0x740>
  10c698:	9200d52e 	bgeu	r18,r8,10c9f0 <__divdf3+0x740>
  10c69c:	39ffff84 	addi	r7,r7,-2
  10c6a0:	9725883a 	add	r18,r18,fp
  10c6a4:	3004943a 	slli	r2,r6,16
  10c6a8:	b012d43a 	srli	r9,r22,16
  10c6ac:	b1bfffcc 	andi	r6,r22,65535
  10c6b0:	11e2b03a 	or	r17,r2,r7
  10c6b4:	8806d43a 	srli	r3,r17,16
  10c6b8:	893fffcc 	andi	r4,r17,65535
  10c6bc:	218b383a 	mul	r5,r4,r6
  10c6c0:	30c5383a 	mul	r2,r6,r3
  10c6c4:	2249383a 	mul	r4,r4,r9
  10c6c8:	280ed43a 	srli	r7,r5,16
  10c6cc:	9225c83a 	sub	r18,r18,r8
  10c6d0:	2089883a 	add	r4,r4,r2
  10c6d4:	3909883a 	add	r4,r7,r4
  10c6d8:	1a47383a 	mul	r3,r3,r9
  10c6dc:	2080022e 	bgeu	r4,r2,10c6e8 <__divdf3+0x438>
  10c6e0:	00800074 	movhi	r2,1
  10c6e4:	1887883a 	add	r3,r3,r2
  10c6e8:	2004d43a 	srli	r2,r4,16
  10c6ec:	2008943a 	slli	r4,r4,16
  10c6f0:	297fffcc 	andi	r5,r5,65535
  10c6f4:	10c7883a 	add	r3,r2,r3
  10c6f8:	2149883a 	add	r4,r4,r5
  10c6fc:	90c0a536 	bltu	r18,r3,10c994 <__divdf3+0x6e4>
  10c700:	90c0bf26 	beq	r18,r3,10ca00 <__divdf3+0x750>
  10c704:	90c7c83a 	sub	r3,r18,r3
  10c708:	810fc83a 	sub	r7,r16,r4
  10c70c:	81e5803a 	cmpltu	r18,r16,r7
  10c710:	1ca5c83a 	sub	r18,r3,r18
  10c714:	e480c126 	beq	fp,r18,10ca1c <__divdf3+0x76c>
  10c718:	a00b883a 	mov	r5,r20
  10c71c:	9009883a 	mov	r4,r18
  10c720:	d9800315 	stw	r6,12(sp)
  10c724:	d9c00215 	stw	r7,8(sp)
  10c728:	da400115 	stw	r9,4(sp)
  10c72c:	0100ee40 	call	100ee4 <__udivsi3>
  10c730:	a00b883a 	mov	r5,r20
  10c734:	9009883a 	mov	r4,r18
  10c738:	d8800015 	stw	r2,0(sp)
  10c73c:	0100f480 	call	100f48 <__umodsi3>
  10c740:	d9c00217 	ldw	r7,8(sp)
  10c744:	da000017 	ldw	r8,0(sp)
  10c748:	1006943a 	slli	r3,r2,16
  10c74c:	3804d43a 	srli	r2,r7,16
  10c750:	ba21383a 	mul	r16,r23,r8
  10c754:	d9800317 	ldw	r6,12(sp)
  10c758:	10c4b03a 	or	r2,r2,r3
  10c75c:	da400117 	ldw	r9,4(sp)
  10c760:	1400062e 	bgeu	r2,r16,10c77c <__divdf3+0x4cc>
  10c764:	1705883a 	add	r2,r2,fp
  10c768:	40ffffc4 	addi	r3,r8,-1
  10c76c:	1700ad36 	bltu	r2,fp,10ca24 <__divdf3+0x774>
  10c770:	1400ac2e 	bgeu	r2,r16,10ca24 <__divdf3+0x774>
  10c774:	423fff84 	addi	r8,r8,-2
  10c778:	1705883a 	add	r2,r2,fp
  10c77c:	1421c83a 	sub	r16,r2,r16
  10c780:	a00b883a 	mov	r5,r20
  10c784:	8009883a 	mov	r4,r16
  10c788:	d9800315 	stw	r6,12(sp)
  10c78c:	d9c00215 	stw	r7,8(sp)
  10c790:	da000015 	stw	r8,0(sp)
  10c794:	da400115 	stw	r9,4(sp)
  10c798:	0100ee40 	call	100ee4 <__udivsi3>
  10c79c:	8009883a 	mov	r4,r16
  10c7a0:	a00b883a 	mov	r5,r20
  10c7a4:	1025883a 	mov	r18,r2
  10c7a8:	0100f480 	call	100f48 <__umodsi3>
  10c7ac:	d9c00217 	ldw	r7,8(sp)
  10c7b0:	1004943a 	slli	r2,r2,16
  10c7b4:	bcaf383a 	mul	r23,r23,r18
  10c7b8:	393fffcc 	andi	r4,r7,65535
  10c7bc:	2088b03a 	or	r4,r4,r2
  10c7c0:	d9800317 	ldw	r6,12(sp)
  10c7c4:	da000017 	ldw	r8,0(sp)
  10c7c8:	da400117 	ldw	r9,4(sp)
  10c7cc:	25c0062e 	bgeu	r4,r23,10c7e8 <__divdf3+0x538>
  10c7d0:	2709883a 	add	r4,r4,fp
  10c7d4:	90bfffc4 	addi	r2,r18,-1
  10c7d8:	27009436 	bltu	r4,fp,10ca2c <__divdf3+0x77c>
  10c7dc:	25c0932e 	bgeu	r4,r23,10ca2c <__divdf3+0x77c>
  10c7e0:	94bfff84 	addi	r18,r18,-2
  10c7e4:	2709883a 	add	r4,r4,fp
  10c7e8:	4004943a 	slli	r2,r8,16
  10c7ec:	25efc83a 	sub	r23,r4,r23
  10c7f0:	1490b03a 	or	r8,r2,r18
  10c7f4:	4008d43a 	srli	r4,r8,16
  10c7f8:	40ffffcc 	andi	r3,r8,65535
  10c7fc:	30c5383a 	mul	r2,r6,r3
  10c800:	1a47383a 	mul	r3,r3,r9
  10c804:	310d383a 	mul	r6,r6,r4
  10c808:	100ad43a 	srli	r5,r2,16
  10c80c:	4913383a 	mul	r9,r9,r4
  10c810:	1987883a 	add	r3,r3,r6
  10c814:	28c7883a 	add	r3,r5,r3
  10c818:	1980022e 	bgeu	r3,r6,10c824 <__divdf3+0x574>
  10c81c:	01000074 	movhi	r4,1
  10c820:	4913883a 	add	r9,r9,r4
  10c824:	1808d43a 	srli	r4,r3,16
  10c828:	1806943a 	slli	r3,r3,16
  10c82c:	10bfffcc 	andi	r2,r2,65535
  10c830:	2253883a 	add	r9,r4,r9
  10c834:	1887883a 	add	r3,r3,r2
  10c838:	ba403836 	bltu	r23,r9,10c91c <__divdf3+0x66c>
  10c83c:	ba403626 	beq	r23,r9,10c918 <__divdf3+0x668>
  10c840:	42000054 	ori	r8,r8,1
  10c844:	a880ffc4 	addi	r2,r21,1023
  10c848:	00bf570e 	bge	zero,r2,10c5a8 <__alt_data_end+0xfff0c5a8>
  10c84c:	40c001cc 	andi	r3,r8,7
  10c850:	18000726 	beq	r3,zero,10c870 <__divdf3+0x5c0>
  10c854:	40c003cc 	andi	r3,r8,15
  10c858:	01000104 	movi	r4,4
  10c85c:	19000426 	beq	r3,r4,10c870 <__divdf3+0x5c0>
  10c860:	4107883a 	add	r3,r8,r4
  10c864:	1a11803a 	cmpltu	r8,r3,r8
  10c868:	8a23883a 	add	r17,r17,r8
  10c86c:	1811883a 	mov	r8,r3
  10c870:	88c0402c 	andhi	r3,r17,256
  10c874:	18000426 	beq	r3,zero,10c888 <__divdf3+0x5d8>
  10c878:	00ffc034 	movhi	r3,65280
  10c87c:	18ffffc4 	addi	r3,r3,-1
  10c880:	a8810004 	addi	r2,r21,1024
  10c884:	88e2703a 	and	r17,r17,r3
  10c888:	00c1ff84 	movi	r3,2046
  10c88c:	18bee316 	blt	r3,r2,10c41c <__alt_data_end+0xfff0c41c>
  10c890:	8824977a 	slli	r18,r17,29
  10c894:	4010d0fa 	srli	r8,r8,3
  10c898:	8822927a 	slli	r17,r17,9
  10c89c:	1081ffcc 	andi	r2,r2,2047
  10c8a0:	9224b03a 	or	r18,r18,r8
  10c8a4:	880ad33a 	srli	r5,r17,12
  10c8a8:	98c0004c 	andi	r3,r19,1
  10c8ac:	003edf06 	br	10c42c <__alt_data_end+0xfff0c42c>
  10c8b0:	8080022c 	andhi	r2,r16,8
  10c8b4:	10001226 	beq	r2,zero,10c900 <__divdf3+0x650>
  10c8b8:	8880022c 	andhi	r2,r17,8
  10c8bc:	1000101e 	bne	r2,zero,10c900 <__divdf3+0x650>
  10c8c0:	00800434 	movhi	r2,16
  10c8c4:	89400234 	orhi	r5,r17,8
  10c8c8:	10bfffc4 	addi	r2,r2,-1
  10c8cc:	b007883a 	mov	r3,r22
  10c8d0:	288a703a 	and	r5,r5,r2
  10c8d4:	4025883a 	mov	r18,r8
  10c8d8:	003f3106 	br	10c5a0 <__alt_data_end+0xfff0c5a0>
  10c8dc:	008000c4 	movi	r2,3
  10c8e0:	3880a626 	beq	r7,r2,10cb7c <__divdf3+0x8cc>
  10c8e4:	00800044 	movi	r2,1
  10c8e8:	3880521e 	bne	r7,r2,10ca34 <__divdf3+0x784>
  10c8ec:	b807883a 	mov	r3,r23
  10c8f0:	0005883a 	mov	r2,zero
  10c8f4:	000b883a 	mov	r5,zero
  10c8f8:	0025883a 	mov	r18,zero
  10c8fc:	003ecb06 	br	10c42c <__alt_data_end+0xfff0c42c>
  10c900:	00800434 	movhi	r2,16
  10c904:	81400234 	orhi	r5,r16,8
  10c908:	10bfffc4 	addi	r2,r2,-1
  10c90c:	a007883a 	mov	r3,r20
  10c910:	288a703a 	and	r5,r5,r2
  10c914:	003f2206 	br	10c5a0 <__alt_data_end+0xfff0c5a0>
  10c918:	183fca26 	beq	r3,zero,10c844 <__alt_data_end+0xfff0c844>
  10c91c:	e5ef883a 	add	r23,fp,r23
  10c920:	40bfffc4 	addi	r2,r8,-1
  10c924:	bf00392e 	bgeu	r23,fp,10ca0c <__divdf3+0x75c>
  10c928:	1011883a 	mov	r8,r2
  10c92c:	ba7fc41e 	bne	r23,r9,10c840 <__alt_data_end+0xfff0c840>
  10c930:	b0ffc31e 	bne	r22,r3,10c840 <__alt_data_end+0xfff0c840>
  10c934:	003fc306 	br	10c844 <__alt_data_end+0xfff0c844>
  10c938:	143ff604 	addi	r16,r2,-40
  10c93c:	9c20983a 	sll	r16,r19,r16
  10c940:	0025883a 	mov	r18,zero
  10c944:	003ee206 	br	10c4d0 <__alt_data_end+0xfff0c4d0>
  10c948:	d9800315 	stw	r6,12(sp)
  10c94c:	d9c00215 	stw	r7,8(sp)
  10c950:	01019700 	call	101970 <__clzsi2>
  10c954:	10800804 	addi	r2,r2,32
  10c958:	d9c00217 	ldw	r7,8(sp)
  10c95c:	d9800317 	ldw	r6,12(sp)
  10c960:	003ed106 	br	10c4a8 <__alt_data_end+0xfff0c4a8>
  10c964:	147ff604 	addi	r17,r2,-40
  10c968:	3462983a 	sll	r17,r6,r17
  10c96c:	0011883a 	mov	r8,zero
  10c970:	003ef506 	br	10c548 <__alt_data_end+0xfff0c548>
  10c974:	3009883a 	mov	r4,r6
  10c978:	d9800315 	stw	r6,12(sp)
  10c97c:	da400115 	stw	r9,4(sp)
  10c980:	01019700 	call	101970 <__clzsi2>
  10c984:	10800804 	addi	r2,r2,32
  10c988:	da400117 	ldw	r9,4(sp)
  10c98c:	d9800317 	ldw	r6,12(sp)
  10c990:	003ee306 	br	10c520 <__alt_data_end+0xfff0c520>
  10c994:	85a1883a 	add	r16,r16,r22
  10c998:	8585803a 	cmpltu	r2,r16,r22
  10c99c:	1705883a 	add	r2,r2,fp
  10c9a0:	14a5883a 	add	r18,r2,r18
  10c9a4:	88bfffc4 	addi	r2,r17,-1
  10c9a8:	e4800c2e 	bgeu	fp,r18,10c9dc <__divdf3+0x72c>
  10c9ac:	90c03e36 	bltu	r18,r3,10caa8 <__divdf3+0x7f8>
  10c9b0:	1c806926 	beq	r3,r18,10cb58 <__divdf3+0x8a8>
  10c9b4:	90c7c83a 	sub	r3,r18,r3
  10c9b8:	1023883a 	mov	r17,r2
  10c9bc:	003f5206 	br	10c708 <__alt_data_end+0xfff0c708>
  10c9c0:	923f0436 	bltu	r18,r8,10c5d4 <__alt_data_end+0xfff0c5d4>
  10c9c4:	800897fa 	slli	r4,r16,31
  10c9c8:	9004d07a 	srli	r2,r18,1
  10c9cc:	8006d07a 	srli	r3,r16,1
  10c9d0:	902097fa 	slli	r16,r18,31
  10c9d4:	20a4b03a 	or	r18,r4,r2
  10c9d8:	003f0106 	br	10c5e0 <__alt_data_end+0xfff0c5e0>
  10c9dc:	e4bff51e 	bne	fp,r18,10c9b4 <__alt_data_end+0xfff0c9b4>
  10c9e0:	85bff22e 	bgeu	r16,r22,10c9ac <__alt_data_end+0xfff0c9ac>
  10c9e4:	e0c7c83a 	sub	r3,fp,r3
  10c9e8:	1023883a 	mov	r17,r2
  10c9ec:	003f4606 	br	10c708 <__alt_data_end+0xfff0c708>
  10c9f0:	100f883a 	mov	r7,r2
  10c9f4:	003f2b06 	br	10c6a4 <__alt_data_end+0xfff0c6a4>
  10c9f8:	180d883a 	mov	r6,r3
  10c9fc:	003f1306 	br	10c64c <__alt_data_end+0xfff0c64c>
  10ca00:	813fe436 	bltu	r16,r4,10c994 <__alt_data_end+0xfff0c994>
  10ca04:	0007883a 	mov	r3,zero
  10ca08:	003f3f06 	br	10c708 <__alt_data_end+0xfff0c708>
  10ca0c:	ba402c36 	bltu	r23,r9,10cac0 <__divdf3+0x810>
  10ca10:	4dc05426 	beq	r9,r23,10cb64 <__divdf3+0x8b4>
  10ca14:	1011883a 	mov	r8,r2
  10ca18:	003f8906 	br	10c840 <__alt_data_end+0xfff0c840>
  10ca1c:	023fffc4 	movi	r8,-1
  10ca20:	003f8806 	br	10c844 <__alt_data_end+0xfff0c844>
  10ca24:	1811883a 	mov	r8,r3
  10ca28:	003f5406 	br	10c77c <__alt_data_end+0xfff0c77c>
  10ca2c:	1025883a 	mov	r18,r2
  10ca30:	003f6d06 	br	10c7e8 <__alt_data_end+0xfff0c7e8>
  10ca34:	b827883a 	mov	r19,r23
  10ca38:	003f8206 	br	10c844 <__alt_data_end+0xfff0c844>
  10ca3c:	010007c4 	movi	r4,31
  10ca40:	20c02616 	blt	r4,r3,10cadc <__divdf3+0x82c>
  10ca44:	00800804 	movi	r2,32
  10ca48:	10c5c83a 	sub	r2,r2,r3
  10ca4c:	888a983a 	sll	r5,r17,r2
  10ca50:	40c8d83a 	srl	r4,r8,r3
  10ca54:	4084983a 	sll	r2,r8,r2
  10ca58:	88e2d83a 	srl	r17,r17,r3
  10ca5c:	2906b03a 	or	r3,r5,r4
  10ca60:	1004c03a 	cmpne	r2,r2,zero
  10ca64:	1886b03a 	or	r3,r3,r2
  10ca68:	188001cc 	andi	r2,r3,7
  10ca6c:	10000726 	beq	r2,zero,10ca8c <__divdf3+0x7dc>
  10ca70:	188003cc 	andi	r2,r3,15
  10ca74:	01000104 	movi	r4,4
  10ca78:	11000426 	beq	r2,r4,10ca8c <__divdf3+0x7dc>
  10ca7c:	1805883a 	mov	r2,r3
  10ca80:	10c00104 	addi	r3,r2,4
  10ca84:	1885803a 	cmpltu	r2,r3,r2
  10ca88:	88a3883a 	add	r17,r17,r2
  10ca8c:	8880202c 	andhi	r2,r17,128
  10ca90:	10002726 	beq	r2,zero,10cb30 <__divdf3+0x880>
  10ca94:	98c0004c 	andi	r3,r19,1
  10ca98:	00800044 	movi	r2,1
  10ca9c:	000b883a 	mov	r5,zero
  10caa0:	0025883a 	mov	r18,zero
  10caa4:	003e6106 	br	10c42c <__alt_data_end+0xfff0c42c>
  10caa8:	85a1883a 	add	r16,r16,r22
  10caac:	8585803a 	cmpltu	r2,r16,r22
  10cab0:	1705883a 	add	r2,r2,fp
  10cab4:	14a5883a 	add	r18,r2,r18
  10cab8:	8c7fff84 	addi	r17,r17,-2
  10cabc:	003f1106 	br	10c704 <__alt_data_end+0xfff0c704>
  10cac0:	b589883a 	add	r4,r22,r22
  10cac4:	25ad803a 	cmpltu	r22,r4,r22
  10cac8:	b739883a 	add	fp,r22,fp
  10cacc:	40bfff84 	addi	r2,r8,-2
  10cad0:	bf2f883a 	add	r23,r23,fp
  10cad4:	202d883a 	mov	r22,r4
  10cad8:	003f9306 	br	10c928 <__alt_data_end+0xfff0c928>
  10cadc:	013ff844 	movi	r4,-31
  10cae0:	2085c83a 	sub	r2,r4,r2
  10cae4:	8888d83a 	srl	r4,r17,r2
  10cae8:	00800804 	movi	r2,32
  10caec:	18802126 	beq	r3,r2,10cb74 <__divdf3+0x8c4>
  10caf0:	00801004 	movi	r2,64
  10caf4:	10c5c83a 	sub	r2,r2,r3
  10caf8:	8884983a 	sll	r2,r17,r2
  10cafc:	1204b03a 	or	r2,r2,r8
  10cb00:	1004c03a 	cmpne	r2,r2,zero
  10cb04:	2084b03a 	or	r2,r4,r2
  10cb08:	144001cc 	andi	r17,r2,7
  10cb0c:	88000d1e 	bne	r17,zero,10cb44 <__divdf3+0x894>
  10cb10:	000b883a 	mov	r5,zero
  10cb14:	1024d0fa 	srli	r18,r2,3
  10cb18:	98c0004c 	andi	r3,r19,1
  10cb1c:	0005883a 	mov	r2,zero
  10cb20:	9464b03a 	or	r18,r18,r17
  10cb24:	003e4106 	br	10c42c <__alt_data_end+0xfff0c42c>
  10cb28:	1007883a 	mov	r3,r2
  10cb2c:	0023883a 	mov	r17,zero
  10cb30:	880a927a 	slli	r5,r17,9
  10cb34:	1805883a 	mov	r2,r3
  10cb38:	8822977a 	slli	r17,r17,29
  10cb3c:	280ad33a 	srli	r5,r5,12
  10cb40:	003ff406 	br	10cb14 <__alt_data_end+0xfff0cb14>
  10cb44:	10c003cc 	andi	r3,r2,15
  10cb48:	01000104 	movi	r4,4
  10cb4c:	193ff626 	beq	r3,r4,10cb28 <__alt_data_end+0xfff0cb28>
  10cb50:	0023883a 	mov	r17,zero
  10cb54:	003fca06 	br	10ca80 <__alt_data_end+0xfff0ca80>
  10cb58:	813fd336 	bltu	r16,r4,10caa8 <__alt_data_end+0xfff0caa8>
  10cb5c:	1023883a 	mov	r17,r2
  10cb60:	003fa806 	br	10ca04 <__alt_data_end+0xfff0ca04>
  10cb64:	b0ffd636 	bltu	r22,r3,10cac0 <__alt_data_end+0xfff0cac0>
  10cb68:	1011883a 	mov	r8,r2
  10cb6c:	b0ff341e 	bne	r22,r3,10c840 <__alt_data_end+0xfff0c840>
  10cb70:	003f3406 	br	10c844 <__alt_data_end+0xfff0c844>
  10cb74:	0005883a 	mov	r2,zero
  10cb78:	003fe006 	br	10cafc <__alt_data_end+0xfff0cafc>
  10cb7c:	00800434 	movhi	r2,16
  10cb80:	89400234 	orhi	r5,r17,8
  10cb84:	10bfffc4 	addi	r2,r2,-1
  10cb88:	b807883a 	mov	r3,r23
  10cb8c:	288a703a 	and	r5,r5,r2
  10cb90:	4025883a 	mov	r18,r8
  10cb94:	003e8206 	br	10c5a0 <__alt_data_end+0xfff0c5a0>

0010cb98 <__eqdf2>:
  10cb98:	2804d53a 	srli	r2,r5,20
  10cb9c:	3806d53a 	srli	r3,r7,20
  10cba0:	02000434 	movhi	r8,16
  10cba4:	423fffc4 	addi	r8,r8,-1
  10cba8:	1081ffcc 	andi	r2,r2,2047
  10cbac:	0281ffc4 	movi	r10,2047
  10cbb0:	2a12703a 	and	r9,r5,r8
  10cbb4:	18c1ffcc 	andi	r3,r3,2047
  10cbb8:	3a10703a 	and	r8,r7,r8
  10cbbc:	280ad7fa 	srli	r5,r5,31
  10cbc0:	380ed7fa 	srli	r7,r7,31
  10cbc4:	12801026 	beq	r2,r10,10cc08 <__eqdf2+0x70>
  10cbc8:	0281ffc4 	movi	r10,2047
  10cbcc:	1a800a26 	beq	r3,r10,10cbf8 <__eqdf2+0x60>
  10cbd0:	10c00226 	beq	r2,r3,10cbdc <__eqdf2+0x44>
  10cbd4:	00800044 	movi	r2,1
  10cbd8:	f800283a 	ret
  10cbdc:	4a3ffd1e 	bne	r9,r8,10cbd4 <__alt_data_end+0xfff0cbd4>
  10cbe0:	21bffc1e 	bne	r4,r6,10cbd4 <__alt_data_end+0xfff0cbd4>
  10cbe4:	29c00c26 	beq	r5,r7,10cc18 <__eqdf2+0x80>
  10cbe8:	103ffa1e 	bne	r2,zero,10cbd4 <__alt_data_end+0xfff0cbd4>
  10cbec:	2244b03a 	or	r2,r4,r9
  10cbf0:	1004c03a 	cmpne	r2,r2,zero
  10cbf4:	f800283a 	ret
  10cbf8:	3214b03a 	or	r10,r6,r8
  10cbfc:	503ff426 	beq	r10,zero,10cbd0 <__alt_data_end+0xfff0cbd0>
  10cc00:	00800044 	movi	r2,1
  10cc04:	f800283a 	ret
  10cc08:	2254b03a 	or	r10,r4,r9
  10cc0c:	503fee26 	beq	r10,zero,10cbc8 <__alt_data_end+0xfff0cbc8>
  10cc10:	00800044 	movi	r2,1
  10cc14:	f800283a 	ret
  10cc18:	0005883a 	mov	r2,zero
  10cc1c:	f800283a 	ret

0010cc20 <__gedf2>:
  10cc20:	2804d53a 	srli	r2,r5,20
  10cc24:	3806d53a 	srli	r3,r7,20
  10cc28:	02000434 	movhi	r8,16
  10cc2c:	423fffc4 	addi	r8,r8,-1
  10cc30:	1081ffcc 	andi	r2,r2,2047
  10cc34:	0241ffc4 	movi	r9,2047
  10cc38:	2a14703a 	and	r10,r5,r8
  10cc3c:	18c1ffcc 	andi	r3,r3,2047
  10cc40:	3a10703a 	and	r8,r7,r8
  10cc44:	280ad7fa 	srli	r5,r5,31
  10cc48:	380ed7fa 	srli	r7,r7,31
  10cc4c:	12401d26 	beq	r2,r9,10ccc4 <__gedf2+0xa4>
  10cc50:	0241ffc4 	movi	r9,2047
  10cc54:	1a401226 	beq	r3,r9,10cca0 <__gedf2+0x80>
  10cc58:	1000081e 	bne	r2,zero,10cc7c <__gedf2+0x5c>
  10cc5c:	2296b03a 	or	r11,r4,r10
  10cc60:	5813003a 	cmpeq	r9,r11,zero
  10cc64:	1800091e 	bne	r3,zero,10cc8c <__gedf2+0x6c>
  10cc68:	3218b03a 	or	r12,r6,r8
  10cc6c:	6000071e 	bne	r12,zero,10cc8c <__gedf2+0x6c>
  10cc70:	0005883a 	mov	r2,zero
  10cc74:	5800101e 	bne	r11,zero,10ccb8 <__gedf2+0x98>
  10cc78:	f800283a 	ret
  10cc7c:	18000c1e 	bne	r3,zero,10ccb0 <__gedf2+0x90>
  10cc80:	3212b03a 	or	r9,r6,r8
  10cc84:	48000c26 	beq	r9,zero,10ccb8 <__gedf2+0x98>
  10cc88:	0013883a 	mov	r9,zero
  10cc8c:	39c03fcc 	andi	r7,r7,255
  10cc90:	48000826 	beq	r9,zero,10ccb4 <__gedf2+0x94>
  10cc94:	38000926 	beq	r7,zero,10ccbc <__gedf2+0x9c>
  10cc98:	00800044 	movi	r2,1
  10cc9c:	f800283a 	ret
  10cca0:	3212b03a 	or	r9,r6,r8
  10cca4:	483fec26 	beq	r9,zero,10cc58 <__alt_data_end+0xfff0cc58>
  10cca8:	00bfff84 	movi	r2,-2
  10ccac:	f800283a 	ret
  10ccb0:	39c03fcc 	andi	r7,r7,255
  10ccb4:	29c00626 	beq	r5,r7,10ccd0 <__gedf2+0xb0>
  10ccb8:	283ff726 	beq	r5,zero,10cc98 <__alt_data_end+0xfff0cc98>
  10ccbc:	00bfffc4 	movi	r2,-1
  10ccc0:	f800283a 	ret
  10ccc4:	2292b03a 	or	r9,r4,r10
  10ccc8:	483fe126 	beq	r9,zero,10cc50 <__alt_data_end+0xfff0cc50>
  10cccc:	003ff606 	br	10cca8 <__alt_data_end+0xfff0cca8>
  10ccd0:	18bff916 	blt	r3,r2,10ccb8 <__alt_data_end+0xfff0ccb8>
  10ccd4:	10c00316 	blt	r2,r3,10cce4 <__gedf2+0xc4>
  10ccd8:	42bff736 	bltu	r8,r10,10ccb8 <__alt_data_end+0xfff0ccb8>
  10ccdc:	52000326 	beq	r10,r8,10ccec <__gedf2+0xcc>
  10cce0:	5200042e 	bgeu	r10,r8,10ccf4 <__gedf2+0xd4>
  10cce4:	283fec1e 	bne	r5,zero,10cc98 <__alt_data_end+0xfff0cc98>
  10cce8:	003ff406 	br	10ccbc <__alt_data_end+0xfff0ccbc>
  10ccec:	313ff236 	bltu	r6,r4,10ccb8 <__alt_data_end+0xfff0ccb8>
  10ccf0:	21bffc36 	bltu	r4,r6,10cce4 <__alt_data_end+0xfff0cce4>
  10ccf4:	0005883a 	mov	r2,zero
  10ccf8:	f800283a 	ret

0010ccfc <__ledf2>:
  10ccfc:	2804d53a 	srli	r2,r5,20
  10cd00:	3810d53a 	srli	r8,r7,20
  10cd04:	00c00434 	movhi	r3,16
  10cd08:	18ffffc4 	addi	r3,r3,-1
  10cd0c:	1081ffcc 	andi	r2,r2,2047
  10cd10:	0241ffc4 	movi	r9,2047
  10cd14:	28d4703a 	and	r10,r5,r3
  10cd18:	4201ffcc 	andi	r8,r8,2047
  10cd1c:	38c6703a 	and	r3,r7,r3
  10cd20:	280ad7fa 	srli	r5,r5,31
  10cd24:	380ed7fa 	srli	r7,r7,31
  10cd28:	12401f26 	beq	r2,r9,10cda8 <__ledf2+0xac>
  10cd2c:	0241ffc4 	movi	r9,2047
  10cd30:	42401426 	beq	r8,r9,10cd84 <__ledf2+0x88>
  10cd34:	1000091e 	bne	r2,zero,10cd5c <__ledf2+0x60>
  10cd38:	2296b03a 	or	r11,r4,r10
  10cd3c:	5813003a 	cmpeq	r9,r11,zero
  10cd40:	29403fcc 	andi	r5,r5,255
  10cd44:	40000a1e 	bne	r8,zero,10cd70 <__ledf2+0x74>
  10cd48:	30d8b03a 	or	r12,r6,r3
  10cd4c:	6000081e 	bne	r12,zero,10cd70 <__ledf2+0x74>
  10cd50:	0005883a 	mov	r2,zero
  10cd54:	5800111e 	bne	r11,zero,10cd9c <__ledf2+0xa0>
  10cd58:	f800283a 	ret
  10cd5c:	29403fcc 	andi	r5,r5,255
  10cd60:	40000c1e 	bne	r8,zero,10cd94 <__ledf2+0x98>
  10cd64:	30d2b03a 	or	r9,r6,r3
  10cd68:	48000c26 	beq	r9,zero,10cd9c <__ledf2+0xa0>
  10cd6c:	0013883a 	mov	r9,zero
  10cd70:	39c03fcc 	andi	r7,r7,255
  10cd74:	48000826 	beq	r9,zero,10cd98 <__ledf2+0x9c>
  10cd78:	38001126 	beq	r7,zero,10cdc0 <__ledf2+0xc4>
  10cd7c:	00800044 	movi	r2,1
  10cd80:	f800283a 	ret
  10cd84:	30d2b03a 	or	r9,r6,r3
  10cd88:	483fea26 	beq	r9,zero,10cd34 <__alt_data_end+0xfff0cd34>
  10cd8c:	00800084 	movi	r2,2
  10cd90:	f800283a 	ret
  10cd94:	39c03fcc 	andi	r7,r7,255
  10cd98:	39400726 	beq	r7,r5,10cdb8 <__ledf2+0xbc>
  10cd9c:	2800081e 	bne	r5,zero,10cdc0 <__ledf2+0xc4>
  10cda0:	00800044 	movi	r2,1
  10cda4:	f800283a 	ret
  10cda8:	2292b03a 	or	r9,r4,r10
  10cdac:	483fdf26 	beq	r9,zero,10cd2c <__alt_data_end+0xfff0cd2c>
  10cdb0:	00800084 	movi	r2,2
  10cdb4:	f800283a 	ret
  10cdb8:	4080030e 	bge	r8,r2,10cdc8 <__ledf2+0xcc>
  10cdbc:	383fef26 	beq	r7,zero,10cd7c <__alt_data_end+0xfff0cd7c>
  10cdc0:	00bfffc4 	movi	r2,-1
  10cdc4:	f800283a 	ret
  10cdc8:	123feb16 	blt	r2,r8,10cd78 <__alt_data_end+0xfff0cd78>
  10cdcc:	1abff336 	bltu	r3,r10,10cd9c <__alt_data_end+0xfff0cd9c>
  10cdd0:	50c00326 	beq	r10,r3,10cde0 <__ledf2+0xe4>
  10cdd4:	50c0042e 	bgeu	r10,r3,10cde8 <__ledf2+0xec>
  10cdd8:	283fe81e 	bne	r5,zero,10cd7c <__alt_data_end+0xfff0cd7c>
  10cddc:	003ff806 	br	10cdc0 <__alt_data_end+0xfff0cdc0>
  10cde0:	313fee36 	bltu	r6,r4,10cd9c <__alt_data_end+0xfff0cd9c>
  10cde4:	21bffc36 	bltu	r4,r6,10cdd8 <__alt_data_end+0xfff0cdd8>
  10cde8:	0005883a 	mov	r2,zero
  10cdec:	f800283a 	ret

0010cdf0 <__muldf3>:
  10cdf0:	defff304 	addi	sp,sp,-52
  10cdf4:	2804d53a 	srli	r2,r5,20
  10cdf8:	dd800915 	stw	r22,36(sp)
  10cdfc:	282cd7fa 	srli	r22,r5,31
  10ce00:	dc000315 	stw	r16,12(sp)
  10ce04:	04000434 	movhi	r16,16
  10ce08:	dd400815 	stw	r21,32(sp)
  10ce0c:	dc800515 	stw	r18,20(sp)
  10ce10:	843fffc4 	addi	r16,r16,-1
  10ce14:	dfc00c15 	stw	ra,48(sp)
  10ce18:	df000b15 	stw	fp,44(sp)
  10ce1c:	ddc00a15 	stw	r23,40(sp)
  10ce20:	dd000715 	stw	r20,28(sp)
  10ce24:	dcc00615 	stw	r19,24(sp)
  10ce28:	dc400415 	stw	r17,16(sp)
  10ce2c:	1481ffcc 	andi	r18,r2,2047
  10ce30:	2c20703a 	and	r16,r5,r16
  10ce34:	b02b883a 	mov	r21,r22
  10ce38:	b2403fcc 	andi	r9,r22,255
  10ce3c:	90006026 	beq	r18,zero,10cfc0 <__muldf3+0x1d0>
  10ce40:	0081ffc4 	movi	r2,2047
  10ce44:	2029883a 	mov	r20,r4
  10ce48:	90803626 	beq	r18,r2,10cf24 <__muldf3+0x134>
  10ce4c:	80800434 	orhi	r2,r16,16
  10ce50:	100490fa 	slli	r2,r2,3
  10ce54:	2020d77a 	srli	r16,r4,29
  10ce58:	202890fa 	slli	r20,r4,3
  10ce5c:	94bf0044 	addi	r18,r18,-1023
  10ce60:	80a0b03a 	or	r16,r16,r2
  10ce64:	0027883a 	mov	r19,zero
  10ce68:	0039883a 	mov	fp,zero
  10ce6c:	3804d53a 	srli	r2,r7,20
  10ce70:	382ed7fa 	srli	r23,r7,31
  10ce74:	04400434 	movhi	r17,16
  10ce78:	8c7fffc4 	addi	r17,r17,-1
  10ce7c:	1081ffcc 	andi	r2,r2,2047
  10ce80:	3011883a 	mov	r8,r6
  10ce84:	3c62703a 	and	r17,r7,r17
  10ce88:	ba803fcc 	andi	r10,r23,255
  10ce8c:	10006d26 	beq	r2,zero,10d044 <__muldf3+0x254>
  10ce90:	00c1ffc4 	movi	r3,2047
  10ce94:	10c06526 	beq	r2,r3,10d02c <__muldf3+0x23c>
  10ce98:	88c00434 	orhi	r3,r17,16
  10ce9c:	180690fa 	slli	r3,r3,3
  10cea0:	3022d77a 	srli	r17,r6,29
  10cea4:	301090fa 	slli	r8,r6,3
  10cea8:	10bf0044 	addi	r2,r2,-1023
  10ceac:	88e2b03a 	or	r17,r17,r3
  10ceb0:	000b883a 	mov	r5,zero
  10ceb4:	9085883a 	add	r2,r18,r2
  10ceb8:	2cc8b03a 	or	r4,r5,r19
  10cebc:	00c003c4 	movi	r3,15
  10cec0:	bdacf03a 	xor	r22,r23,r22
  10cec4:	12c00044 	addi	r11,r2,1
  10cec8:	19009936 	bltu	r3,r4,10d130 <__muldf3+0x340>
  10cecc:	200890ba 	slli	r4,r4,2
  10ced0:	00c00474 	movhi	r3,17
  10ced4:	18f3b904 	addi	r3,r3,-12572
  10ced8:	20c9883a 	add	r4,r4,r3
  10cedc:	20c00017 	ldw	r3,0(r4)
  10cee0:	1800683a 	jmp	r3
  10cee4:	0010d130 	cmpltui	zero,zero,17220
  10cee8:	0010cf44 	movi	zero,17213
  10ceec:	0010cf44 	movi	zero,17213
  10cef0:	0010cf40 	call	10cf4 <__alt_mem_onchip_memory2-0xef30c>
  10cef4:	0010d10c 	andi	zero,zero,17220
  10cef8:	0010d10c 	andi	zero,zero,17220
  10cefc:	0010d0f4 	movhi	zero,17219
  10cf00:	0010cf40 	call	10cf4 <__alt_mem_onchip_memory2-0xef30c>
  10cf04:	0010d10c 	andi	zero,zero,17220
  10cf08:	0010d0f4 	movhi	zero,17219
  10cf0c:	0010d10c 	andi	zero,zero,17220
  10cf10:	0010cf40 	call	10cf4 <__alt_mem_onchip_memory2-0xef30c>
  10cf14:	0010d11c 	xori	zero,zero,17220
  10cf18:	0010d11c 	xori	zero,zero,17220
  10cf1c:	0010d11c 	xori	zero,zero,17220
  10cf20:	0010d338 	rdprs	zero,zero,17228
  10cf24:	2404b03a 	or	r2,r4,r16
  10cf28:	10006f1e 	bne	r2,zero,10d0e8 <__muldf3+0x2f8>
  10cf2c:	04c00204 	movi	r19,8
  10cf30:	0021883a 	mov	r16,zero
  10cf34:	0029883a 	mov	r20,zero
  10cf38:	07000084 	movi	fp,2
  10cf3c:	003fcb06 	br	10ce6c <__alt_data_end+0xfff0ce6c>
  10cf40:	502d883a 	mov	r22,r10
  10cf44:	00800084 	movi	r2,2
  10cf48:	28805726 	beq	r5,r2,10d0a8 <__muldf3+0x2b8>
  10cf4c:	008000c4 	movi	r2,3
  10cf50:	28816626 	beq	r5,r2,10d4ec <__muldf3+0x6fc>
  10cf54:	00800044 	movi	r2,1
  10cf58:	2881411e 	bne	r5,r2,10d460 <__muldf3+0x670>
  10cf5c:	b02b883a 	mov	r21,r22
  10cf60:	0005883a 	mov	r2,zero
  10cf64:	000b883a 	mov	r5,zero
  10cf68:	0029883a 	mov	r20,zero
  10cf6c:	1004953a 	slli	r2,r2,20
  10cf70:	a8c03fcc 	andi	r3,r21,255
  10cf74:	04400434 	movhi	r17,16
  10cf78:	8c7fffc4 	addi	r17,r17,-1
  10cf7c:	180697fa 	slli	r3,r3,31
  10cf80:	2c4a703a 	and	r5,r5,r17
  10cf84:	288ab03a 	or	r5,r5,r2
  10cf88:	28c6b03a 	or	r3,r5,r3
  10cf8c:	a005883a 	mov	r2,r20
  10cf90:	dfc00c17 	ldw	ra,48(sp)
  10cf94:	df000b17 	ldw	fp,44(sp)
  10cf98:	ddc00a17 	ldw	r23,40(sp)
  10cf9c:	dd800917 	ldw	r22,36(sp)
  10cfa0:	dd400817 	ldw	r21,32(sp)
  10cfa4:	dd000717 	ldw	r20,28(sp)
  10cfa8:	dcc00617 	ldw	r19,24(sp)
  10cfac:	dc800517 	ldw	r18,20(sp)
  10cfb0:	dc400417 	ldw	r17,16(sp)
  10cfb4:	dc000317 	ldw	r16,12(sp)
  10cfb8:	dec00d04 	addi	sp,sp,52
  10cfbc:	f800283a 	ret
  10cfc0:	2404b03a 	or	r2,r4,r16
  10cfc4:	2027883a 	mov	r19,r4
  10cfc8:	10004226 	beq	r2,zero,10d0d4 <__muldf3+0x2e4>
  10cfcc:	8000fc26 	beq	r16,zero,10d3c0 <__muldf3+0x5d0>
  10cfd0:	8009883a 	mov	r4,r16
  10cfd4:	d9800215 	stw	r6,8(sp)
  10cfd8:	d9c00015 	stw	r7,0(sp)
  10cfdc:	da400115 	stw	r9,4(sp)
  10cfe0:	01019700 	call	101970 <__clzsi2>
  10cfe4:	d9800217 	ldw	r6,8(sp)
  10cfe8:	d9c00017 	ldw	r7,0(sp)
  10cfec:	da400117 	ldw	r9,4(sp)
  10cff0:	113ffd44 	addi	r4,r2,-11
  10cff4:	00c00704 	movi	r3,28
  10cff8:	1900ed16 	blt	r3,r4,10d3b0 <__muldf3+0x5c0>
  10cffc:	00c00744 	movi	r3,29
  10d000:	147ffe04 	addi	r17,r2,-8
  10d004:	1907c83a 	sub	r3,r3,r4
  10d008:	8460983a 	sll	r16,r16,r17
  10d00c:	98c6d83a 	srl	r3,r19,r3
  10d010:	9c68983a 	sll	r20,r19,r17
  10d014:	1c20b03a 	or	r16,r3,r16
  10d018:	1080fcc4 	addi	r2,r2,1011
  10d01c:	00a5c83a 	sub	r18,zero,r2
  10d020:	0027883a 	mov	r19,zero
  10d024:	0039883a 	mov	fp,zero
  10d028:	003f9006 	br	10ce6c <__alt_data_end+0xfff0ce6c>
  10d02c:	3446b03a 	or	r3,r6,r17
  10d030:	1800261e 	bne	r3,zero,10d0cc <__muldf3+0x2dc>
  10d034:	0023883a 	mov	r17,zero
  10d038:	0011883a 	mov	r8,zero
  10d03c:	01400084 	movi	r5,2
  10d040:	003f9c06 	br	10ceb4 <__alt_data_end+0xfff0ceb4>
  10d044:	3446b03a 	or	r3,r6,r17
  10d048:	18001c26 	beq	r3,zero,10d0bc <__muldf3+0x2cc>
  10d04c:	8800ce26 	beq	r17,zero,10d388 <__muldf3+0x598>
  10d050:	8809883a 	mov	r4,r17
  10d054:	d9800215 	stw	r6,8(sp)
  10d058:	da400115 	stw	r9,4(sp)
  10d05c:	da800015 	stw	r10,0(sp)
  10d060:	01019700 	call	101970 <__clzsi2>
  10d064:	d9800217 	ldw	r6,8(sp)
  10d068:	da400117 	ldw	r9,4(sp)
  10d06c:	da800017 	ldw	r10,0(sp)
  10d070:	113ffd44 	addi	r4,r2,-11
  10d074:	00c00704 	movi	r3,28
  10d078:	1900bf16 	blt	r3,r4,10d378 <__muldf3+0x588>
  10d07c:	00c00744 	movi	r3,29
  10d080:	123ffe04 	addi	r8,r2,-8
  10d084:	1907c83a 	sub	r3,r3,r4
  10d088:	8a22983a 	sll	r17,r17,r8
  10d08c:	30c6d83a 	srl	r3,r6,r3
  10d090:	3210983a 	sll	r8,r6,r8
  10d094:	1c62b03a 	or	r17,r3,r17
  10d098:	1080fcc4 	addi	r2,r2,1011
  10d09c:	0085c83a 	sub	r2,zero,r2
  10d0a0:	000b883a 	mov	r5,zero
  10d0a4:	003f8306 	br	10ceb4 <__alt_data_end+0xfff0ceb4>
  10d0a8:	b02b883a 	mov	r21,r22
  10d0ac:	0081ffc4 	movi	r2,2047
  10d0b0:	000b883a 	mov	r5,zero
  10d0b4:	0029883a 	mov	r20,zero
  10d0b8:	003fac06 	br	10cf6c <__alt_data_end+0xfff0cf6c>
  10d0bc:	0023883a 	mov	r17,zero
  10d0c0:	0011883a 	mov	r8,zero
  10d0c4:	01400044 	movi	r5,1
  10d0c8:	003f7a06 	br	10ceb4 <__alt_data_end+0xfff0ceb4>
  10d0cc:	014000c4 	movi	r5,3
  10d0d0:	003f7806 	br	10ceb4 <__alt_data_end+0xfff0ceb4>
  10d0d4:	04c00104 	movi	r19,4
  10d0d8:	0021883a 	mov	r16,zero
  10d0dc:	0029883a 	mov	r20,zero
  10d0e0:	07000044 	movi	fp,1
  10d0e4:	003f6106 	br	10ce6c <__alt_data_end+0xfff0ce6c>
  10d0e8:	04c00304 	movi	r19,12
  10d0ec:	070000c4 	movi	fp,3
  10d0f0:	003f5e06 	br	10ce6c <__alt_data_end+0xfff0ce6c>
  10d0f4:	01400434 	movhi	r5,16
  10d0f8:	002b883a 	mov	r21,zero
  10d0fc:	297fffc4 	addi	r5,r5,-1
  10d100:	053fffc4 	movi	r20,-1
  10d104:	0081ffc4 	movi	r2,2047
  10d108:	003f9806 	br	10cf6c <__alt_data_end+0xfff0cf6c>
  10d10c:	8023883a 	mov	r17,r16
  10d110:	a011883a 	mov	r8,r20
  10d114:	e00b883a 	mov	r5,fp
  10d118:	003f8a06 	br	10cf44 <__alt_data_end+0xfff0cf44>
  10d11c:	8023883a 	mov	r17,r16
  10d120:	a011883a 	mov	r8,r20
  10d124:	482d883a 	mov	r22,r9
  10d128:	e00b883a 	mov	r5,fp
  10d12c:	003f8506 	br	10cf44 <__alt_data_end+0xfff0cf44>
  10d130:	a00ad43a 	srli	r5,r20,16
  10d134:	401ad43a 	srli	r13,r8,16
  10d138:	a53fffcc 	andi	r20,r20,65535
  10d13c:	423fffcc 	andi	r8,r8,65535
  10d140:	4519383a 	mul	r12,r8,r20
  10d144:	4147383a 	mul	r3,r8,r5
  10d148:	6d09383a 	mul	r4,r13,r20
  10d14c:	600cd43a 	srli	r6,r12,16
  10d150:	2b5d383a 	mul	r14,r5,r13
  10d154:	20c9883a 	add	r4,r4,r3
  10d158:	310d883a 	add	r6,r6,r4
  10d15c:	30c0022e 	bgeu	r6,r3,10d168 <__muldf3+0x378>
  10d160:	00c00074 	movhi	r3,1
  10d164:	70dd883a 	add	r14,r14,r3
  10d168:	8826d43a 	srli	r19,r17,16
  10d16c:	8bffffcc 	andi	r15,r17,65535
  10d170:	7d23383a 	mul	r17,r15,r20
  10d174:	7949383a 	mul	r4,r15,r5
  10d178:	9d29383a 	mul	r20,r19,r20
  10d17c:	8814d43a 	srli	r10,r17,16
  10d180:	3012943a 	slli	r9,r6,16
  10d184:	a129883a 	add	r20,r20,r4
  10d188:	633fffcc 	andi	r12,r12,65535
  10d18c:	5515883a 	add	r10,r10,r20
  10d190:	3006d43a 	srli	r3,r6,16
  10d194:	4b13883a 	add	r9,r9,r12
  10d198:	2ccb383a 	mul	r5,r5,r19
  10d19c:	5100022e 	bgeu	r10,r4,10d1a8 <__muldf3+0x3b8>
  10d1a0:	01000074 	movhi	r4,1
  10d1a4:	290b883a 	add	r5,r5,r4
  10d1a8:	802ad43a 	srli	r21,r16,16
  10d1ac:	843fffcc 	andi	r16,r16,65535
  10d1b0:	440d383a 	mul	r6,r8,r16
  10d1b4:	4565383a 	mul	r18,r8,r21
  10d1b8:	8349383a 	mul	r4,r16,r13
  10d1bc:	500e943a 	slli	r7,r10,16
  10d1c0:	3010d43a 	srli	r8,r6,16
  10d1c4:	5028d43a 	srli	r20,r10,16
  10d1c8:	2489883a 	add	r4,r4,r18
  10d1cc:	8abfffcc 	andi	r10,r17,65535
  10d1d0:	3a95883a 	add	r10,r7,r10
  10d1d4:	4119883a 	add	r12,r8,r4
  10d1d8:	a169883a 	add	r20,r20,r5
  10d1dc:	1a87883a 	add	r3,r3,r10
  10d1e0:	6d5b383a 	mul	r13,r13,r21
  10d1e4:	6480022e 	bgeu	r12,r18,10d1f0 <__muldf3+0x400>
  10d1e8:	01000074 	movhi	r4,1
  10d1ec:	691b883a 	add	r13,r13,r4
  10d1f0:	7c25383a 	mul	r18,r15,r16
  10d1f4:	7d4b383a 	mul	r5,r15,r21
  10d1f8:	84cf383a 	mul	r7,r16,r19
  10d1fc:	901ed43a 	srli	r15,r18,16
  10d200:	6008d43a 	srli	r4,r12,16
  10d204:	6010943a 	slli	r8,r12,16
  10d208:	394f883a 	add	r7,r7,r5
  10d20c:	333fffcc 	andi	r12,r6,65535
  10d210:	79df883a 	add	r15,r15,r7
  10d214:	235b883a 	add	r13,r4,r13
  10d218:	9d63383a 	mul	r17,r19,r21
  10d21c:	4309883a 	add	r4,r8,r12
  10d220:	7940022e 	bgeu	r15,r5,10d22c <__muldf3+0x43c>
  10d224:	01400074 	movhi	r5,1
  10d228:	8963883a 	add	r17,r17,r5
  10d22c:	780a943a 	slli	r5,r15,16
  10d230:	91bfffcc 	andi	r6,r18,65535
  10d234:	70c7883a 	add	r3,r14,r3
  10d238:	298d883a 	add	r6,r5,r6
  10d23c:	1a8f803a 	cmpltu	r7,r3,r10
  10d240:	350b883a 	add	r5,r6,r20
  10d244:	20c7883a 	add	r3,r4,r3
  10d248:	3955883a 	add	r10,r7,r5
  10d24c:	1909803a 	cmpltu	r4,r3,r4
  10d250:	6a91883a 	add	r8,r13,r10
  10d254:	780cd43a 	srli	r6,r15,16
  10d258:	2219883a 	add	r12,r4,r8
  10d25c:	2d0b803a 	cmpltu	r5,r5,r20
  10d260:	51cf803a 	cmpltu	r7,r10,r7
  10d264:	29ceb03a 	or	r7,r5,r7
  10d268:	4351803a 	cmpltu	r8,r8,r13
  10d26c:	610b803a 	cmpltu	r5,r12,r4
  10d270:	4148b03a 	or	r4,r8,r5
  10d274:	398f883a 	add	r7,r7,r6
  10d278:	3909883a 	add	r4,r7,r4
  10d27c:	1810927a 	slli	r8,r3,9
  10d280:	2449883a 	add	r4,r4,r17
  10d284:	2008927a 	slli	r4,r4,9
  10d288:	6022d5fa 	srli	r17,r12,23
  10d28c:	1806d5fa 	srli	r3,r3,23
  10d290:	4252b03a 	or	r9,r8,r9
  10d294:	600a927a 	slli	r5,r12,9
  10d298:	4810c03a 	cmpne	r8,r9,zero
  10d29c:	2462b03a 	or	r17,r4,r17
  10d2a0:	40c6b03a 	or	r3,r8,r3
  10d2a4:	8900402c 	andhi	r4,r17,256
  10d2a8:	1950b03a 	or	r8,r3,r5
  10d2ac:	20000726 	beq	r4,zero,10d2cc <__muldf3+0x4dc>
  10d2b0:	4006d07a 	srli	r3,r8,1
  10d2b4:	880497fa 	slli	r2,r17,31
  10d2b8:	4200004c 	andi	r8,r8,1
  10d2bc:	8822d07a 	srli	r17,r17,1
  10d2c0:	1a10b03a 	or	r8,r3,r8
  10d2c4:	1210b03a 	or	r8,r2,r8
  10d2c8:	5805883a 	mov	r2,r11
  10d2cc:	1140ffc4 	addi	r5,r2,1023
  10d2d0:	0140440e 	bge	zero,r5,10d3e4 <__muldf3+0x5f4>
  10d2d4:	40c001cc 	andi	r3,r8,7
  10d2d8:	18000726 	beq	r3,zero,10d2f8 <__muldf3+0x508>
  10d2dc:	40c003cc 	andi	r3,r8,15
  10d2e0:	01000104 	movi	r4,4
  10d2e4:	19000426 	beq	r3,r4,10d2f8 <__muldf3+0x508>
  10d2e8:	4107883a 	add	r3,r8,r4
  10d2ec:	1a11803a 	cmpltu	r8,r3,r8
  10d2f0:	8a23883a 	add	r17,r17,r8
  10d2f4:	1811883a 	mov	r8,r3
  10d2f8:	88c0402c 	andhi	r3,r17,256
  10d2fc:	18000426 	beq	r3,zero,10d310 <__muldf3+0x520>
  10d300:	11410004 	addi	r5,r2,1024
  10d304:	00bfc034 	movhi	r2,65280
  10d308:	10bfffc4 	addi	r2,r2,-1
  10d30c:	88a2703a 	and	r17,r17,r2
  10d310:	0081ff84 	movi	r2,2046
  10d314:	117f6416 	blt	r2,r5,10d0a8 <__alt_data_end+0xfff0d0a8>
  10d318:	8828977a 	slli	r20,r17,29
  10d31c:	4010d0fa 	srli	r8,r8,3
  10d320:	8822927a 	slli	r17,r17,9
  10d324:	2881ffcc 	andi	r2,r5,2047
  10d328:	a228b03a 	or	r20,r20,r8
  10d32c:	880ad33a 	srli	r5,r17,12
  10d330:	b02b883a 	mov	r21,r22
  10d334:	003f0d06 	br	10cf6c <__alt_data_end+0xfff0cf6c>
  10d338:	8080022c 	andhi	r2,r16,8
  10d33c:	10000926 	beq	r2,zero,10d364 <__muldf3+0x574>
  10d340:	8880022c 	andhi	r2,r17,8
  10d344:	1000071e 	bne	r2,zero,10d364 <__muldf3+0x574>
  10d348:	00800434 	movhi	r2,16
  10d34c:	89400234 	orhi	r5,r17,8
  10d350:	10bfffc4 	addi	r2,r2,-1
  10d354:	b82b883a 	mov	r21,r23
  10d358:	288a703a 	and	r5,r5,r2
  10d35c:	4029883a 	mov	r20,r8
  10d360:	003f6806 	br	10d104 <__alt_data_end+0xfff0d104>
  10d364:	00800434 	movhi	r2,16
  10d368:	81400234 	orhi	r5,r16,8
  10d36c:	10bfffc4 	addi	r2,r2,-1
  10d370:	288a703a 	and	r5,r5,r2
  10d374:	003f6306 	br	10d104 <__alt_data_end+0xfff0d104>
  10d378:	147ff604 	addi	r17,r2,-40
  10d37c:	3462983a 	sll	r17,r6,r17
  10d380:	0011883a 	mov	r8,zero
  10d384:	003f4406 	br	10d098 <__alt_data_end+0xfff0d098>
  10d388:	3009883a 	mov	r4,r6
  10d38c:	d9800215 	stw	r6,8(sp)
  10d390:	da400115 	stw	r9,4(sp)
  10d394:	da800015 	stw	r10,0(sp)
  10d398:	01019700 	call	101970 <__clzsi2>
  10d39c:	10800804 	addi	r2,r2,32
  10d3a0:	da800017 	ldw	r10,0(sp)
  10d3a4:	da400117 	ldw	r9,4(sp)
  10d3a8:	d9800217 	ldw	r6,8(sp)
  10d3ac:	003f3006 	br	10d070 <__alt_data_end+0xfff0d070>
  10d3b0:	143ff604 	addi	r16,r2,-40
  10d3b4:	9c20983a 	sll	r16,r19,r16
  10d3b8:	0029883a 	mov	r20,zero
  10d3bc:	003f1606 	br	10d018 <__alt_data_end+0xfff0d018>
  10d3c0:	d9800215 	stw	r6,8(sp)
  10d3c4:	d9c00015 	stw	r7,0(sp)
  10d3c8:	da400115 	stw	r9,4(sp)
  10d3cc:	01019700 	call	101970 <__clzsi2>
  10d3d0:	10800804 	addi	r2,r2,32
  10d3d4:	da400117 	ldw	r9,4(sp)
  10d3d8:	d9c00017 	ldw	r7,0(sp)
  10d3dc:	d9800217 	ldw	r6,8(sp)
  10d3e0:	003f0306 	br	10cff0 <__alt_data_end+0xfff0cff0>
  10d3e4:	00c00044 	movi	r3,1
  10d3e8:	1947c83a 	sub	r3,r3,r5
  10d3ec:	00800e04 	movi	r2,56
  10d3f0:	10feda16 	blt	r2,r3,10cf5c <__alt_data_end+0xfff0cf5c>
  10d3f4:	008007c4 	movi	r2,31
  10d3f8:	10c01b16 	blt	r2,r3,10d468 <__muldf3+0x678>
  10d3fc:	00800804 	movi	r2,32
  10d400:	10c5c83a 	sub	r2,r2,r3
  10d404:	888a983a 	sll	r5,r17,r2
  10d408:	40c8d83a 	srl	r4,r8,r3
  10d40c:	4084983a 	sll	r2,r8,r2
  10d410:	88e2d83a 	srl	r17,r17,r3
  10d414:	2906b03a 	or	r3,r5,r4
  10d418:	1004c03a 	cmpne	r2,r2,zero
  10d41c:	1886b03a 	or	r3,r3,r2
  10d420:	188001cc 	andi	r2,r3,7
  10d424:	10000726 	beq	r2,zero,10d444 <__muldf3+0x654>
  10d428:	188003cc 	andi	r2,r3,15
  10d42c:	01000104 	movi	r4,4
  10d430:	11000426 	beq	r2,r4,10d444 <__muldf3+0x654>
  10d434:	1805883a 	mov	r2,r3
  10d438:	10c00104 	addi	r3,r2,4
  10d43c:	1885803a 	cmpltu	r2,r3,r2
  10d440:	88a3883a 	add	r17,r17,r2
  10d444:	8880202c 	andhi	r2,r17,128
  10d448:	10001c26 	beq	r2,zero,10d4bc <__muldf3+0x6cc>
  10d44c:	b02b883a 	mov	r21,r22
  10d450:	00800044 	movi	r2,1
  10d454:	000b883a 	mov	r5,zero
  10d458:	0029883a 	mov	r20,zero
  10d45c:	003ec306 	br	10cf6c <__alt_data_end+0xfff0cf6c>
  10d460:	5805883a 	mov	r2,r11
  10d464:	003f9906 	br	10d2cc <__alt_data_end+0xfff0d2cc>
  10d468:	00bff844 	movi	r2,-31
  10d46c:	1145c83a 	sub	r2,r2,r5
  10d470:	8888d83a 	srl	r4,r17,r2
  10d474:	00800804 	movi	r2,32
  10d478:	18801a26 	beq	r3,r2,10d4e4 <__muldf3+0x6f4>
  10d47c:	00801004 	movi	r2,64
  10d480:	10c5c83a 	sub	r2,r2,r3
  10d484:	8884983a 	sll	r2,r17,r2
  10d488:	1204b03a 	or	r2,r2,r8
  10d48c:	1004c03a 	cmpne	r2,r2,zero
  10d490:	2084b03a 	or	r2,r4,r2
  10d494:	144001cc 	andi	r17,r2,7
  10d498:	88000d1e 	bne	r17,zero,10d4d0 <__muldf3+0x6e0>
  10d49c:	000b883a 	mov	r5,zero
  10d4a0:	1028d0fa 	srli	r20,r2,3
  10d4a4:	b02b883a 	mov	r21,r22
  10d4a8:	0005883a 	mov	r2,zero
  10d4ac:	a468b03a 	or	r20,r20,r17
  10d4b0:	003eae06 	br	10cf6c <__alt_data_end+0xfff0cf6c>
  10d4b4:	1007883a 	mov	r3,r2
  10d4b8:	0023883a 	mov	r17,zero
  10d4bc:	880a927a 	slli	r5,r17,9
  10d4c0:	1805883a 	mov	r2,r3
  10d4c4:	8822977a 	slli	r17,r17,29
  10d4c8:	280ad33a 	srli	r5,r5,12
  10d4cc:	003ff406 	br	10d4a0 <__alt_data_end+0xfff0d4a0>
  10d4d0:	10c003cc 	andi	r3,r2,15
  10d4d4:	01000104 	movi	r4,4
  10d4d8:	193ff626 	beq	r3,r4,10d4b4 <__alt_data_end+0xfff0d4b4>
  10d4dc:	0023883a 	mov	r17,zero
  10d4e0:	003fd506 	br	10d438 <__alt_data_end+0xfff0d438>
  10d4e4:	0005883a 	mov	r2,zero
  10d4e8:	003fe706 	br	10d488 <__alt_data_end+0xfff0d488>
  10d4ec:	00800434 	movhi	r2,16
  10d4f0:	89400234 	orhi	r5,r17,8
  10d4f4:	10bfffc4 	addi	r2,r2,-1
  10d4f8:	b02b883a 	mov	r21,r22
  10d4fc:	288a703a 	and	r5,r5,r2
  10d500:	4029883a 	mov	r20,r8
  10d504:	003eff06 	br	10d104 <__alt_data_end+0xfff0d104>

0010d508 <__subdf3>:
  10d508:	02000434 	movhi	r8,16
  10d50c:	423fffc4 	addi	r8,r8,-1
  10d510:	defffb04 	addi	sp,sp,-20
  10d514:	2a14703a 	and	r10,r5,r8
  10d518:	3812d53a 	srli	r9,r7,20
  10d51c:	3a10703a 	and	r8,r7,r8
  10d520:	2006d77a 	srli	r3,r4,29
  10d524:	3004d77a 	srli	r2,r6,29
  10d528:	dc000015 	stw	r16,0(sp)
  10d52c:	501490fa 	slli	r10,r10,3
  10d530:	2820d53a 	srli	r16,r5,20
  10d534:	401090fa 	slli	r8,r8,3
  10d538:	dc800215 	stw	r18,8(sp)
  10d53c:	dc400115 	stw	r17,4(sp)
  10d540:	dfc00415 	stw	ra,16(sp)
  10d544:	202290fa 	slli	r17,r4,3
  10d548:	dcc00315 	stw	r19,12(sp)
  10d54c:	4a41ffcc 	andi	r9,r9,2047
  10d550:	0101ffc4 	movi	r4,2047
  10d554:	2824d7fa 	srli	r18,r5,31
  10d558:	8401ffcc 	andi	r16,r16,2047
  10d55c:	50c6b03a 	or	r3,r10,r3
  10d560:	380ed7fa 	srli	r7,r7,31
  10d564:	408ab03a 	or	r5,r8,r2
  10d568:	300c90fa 	slli	r6,r6,3
  10d56c:	49009626 	beq	r9,r4,10d7c8 <__subdf3+0x2c0>
  10d570:	39c0005c 	xori	r7,r7,1
  10d574:	8245c83a 	sub	r2,r16,r9
  10d578:	3c807426 	beq	r7,r18,10d74c <__subdf3+0x244>
  10d57c:	0080af0e 	bge	zero,r2,10d83c <__subdf3+0x334>
  10d580:	48002a1e 	bne	r9,zero,10d62c <__subdf3+0x124>
  10d584:	2988b03a 	or	r4,r5,r6
  10d588:	20009a1e 	bne	r4,zero,10d7f4 <__subdf3+0x2ec>
  10d58c:	888001cc 	andi	r2,r17,7
  10d590:	10000726 	beq	r2,zero,10d5b0 <__subdf3+0xa8>
  10d594:	888003cc 	andi	r2,r17,15
  10d598:	01000104 	movi	r4,4
  10d59c:	11000426 	beq	r2,r4,10d5b0 <__subdf3+0xa8>
  10d5a0:	890b883a 	add	r5,r17,r4
  10d5a4:	2c63803a 	cmpltu	r17,r5,r17
  10d5a8:	1c47883a 	add	r3,r3,r17
  10d5ac:	2823883a 	mov	r17,r5
  10d5b0:	1880202c 	andhi	r2,r3,128
  10d5b4:	10005926 	beq	r2,zero,10d71c <__subdf3+0x214>
  10d5b8:	84000044 	addi	r16,r16,1
  10d5bc:	0081ffc4 	movi	r2,2047
  10d5c0:	8080be26 	beq	r16,r2,10d8bc <__subdf3+0x3b4>
  10d5c4:	017fe034 	movhi	r5,65408
  10d5c8:	297fffc4 	addi	r5,r5,-1
  10d5cc:	1946703a 	and	r3,r3,r5
  10d5d0:	1804977a 	slli	r2,r3,29
  10d5d4:	1806927a 	slli	r3,r3,9
  10d5d8:	8822d0fa 	srli	r17,r17,3
  10d5dc:	8401ffcc 	andi	r16,r16,2047
  10d5e0:	180ad33a 	srli	r5,r3,12
  10d5e4:	9100004c 	andi	r4,r18,1
  10d5e8:	1444b03a 	or	r2,r2,r17
  10d5ec:	80c1ffcc 	andi	r3,r16,2047
  10d5f0:	1820953a 	slli	r16,r3,20
  10d5f4:	20c03fcc 	andi	r3,r4,255
  10d5f8:	180897fa 	slli	r4,r3,31
  10d5fc:	00c00434 	movhi	r3,16
  10d600:	18ffffc4 	addi	r3,r3,-1
  10d604:	28c6703a 	and	r3,r5,r3
  10d608:	1c06b03a 	or	r3,r3,r16
  10d60c:	1906b03a 	or	r3,r3,r4
  10d610:	dfc00417 	ldw	ra,16(sp)
  10d614:	dcc00317 	ldw	r19,12(sp)
  10d618:	dc800217 	ldw	r18,8(sp)
  10d61c:	dc400117 	ldw	r17,4(sp)
  10d620:	dc000017 	ldw	r16,0(sp)
  10d624:	dec00504 	addi	sp,sp,20
  10d628:	f800283a 	ret
  10d62c:	0101ffc4 	movi	r4,2047
  10d630:	813fd626 	beq	r16,r4,10d58c <__alt_data_end+0xfff0d58c>
  10d634:	29402034 	orhi	r5,r5,128
  10d638:	01000e04 	movi	r4,56
  10d63c:	2080a316 	blt	r4,r2,10d8cc <__subdf3+0x3c4>
  10d640:	010007c4 	movi	r4,31
  10d644:	2080c616 	blt	r4,r2,10d960 <__subdf3+0x458>
  10d648:	01000804 	movi	r4,32
  10d64c:	2089c83a 	sub	r4,r4,r2
  10d650:	2910983a 	sll	r8,r5,r4
  10d654:	308ed83a 	srl	r7,r6,r2
  10d658:	3108983a 	sll	r4,r6,r4
  10d65c:	2884d83a 	srl	r2,r5,r2
  10d660:	41ccb03a 	or	r6,r8,r7
  10d664:	2008c03a 	cmpne	r4,r4,zero
  10d668:	310cb03a 	or	r6,r6,r4
  10d66c:	898dc83a 	sub	r6,r17,r6
  10d670:	89a3803a 	cmpltu	r17,r17,r6
  10d674:	1887c83a 	sub	r3,r3,r2
  10d678:	1c47c83a 	sub	r3,r3,r17
  10d67c:	3023883a 	mov	r17,r6
  10d680:	1880202c 	andhi	r2,r3,128
  10d684:	10002326 	beq	r2,zero,10d714 <__subdf3+0x20c>
  10d688:	04c02034 	movhi	r19,128
  10d68c:	9cffffc4 	addi	r19,r19,-1
  10d690:	1ce6703a 	and	r19,r3,r19
  10d694:	98007a26 	beq	r19,zero,10d880 <__subdf3+0x378>
  10d698:	9809883a 	mov	r4,r19
  10d69c:	01019700 	call	101970 <__clzsi2>
  10d6a0:	113ffe04 	addi	r4,r2,-8
  10d6a4:	00c007c4 	movi	r3,31
  10d6a8:	19007b16 	blt	r3,r4,10d898 <__subdf3+0x390>
  10d6ac:	00800804 	movi	r2,32
  10d6b0:	1105c83a 	sub	r2,r2,r4
  10d6b4:	8884d83a 	srl	r2,r17,r2
  10d6b8:	9906983a 	sll	r3,r19,r4
  10d6bc:	8922983a 	sll	r17,r17,r4
  10d6c0:	10c4b03a 	or	r2,r2,r3
  10d6c4:	24007816 	blt	r4,r16,10d8a8 <__subdf3+0x3a0>
  10d6c8:	2421c83a 	sub	r16,r4,r16
  10d6cc:	80c00044 	addi	r3,r16,1
  10d6d0:	010007c4 	movi	r4,31
  10d6d4:	20c09516 	blt	r4,r3,10d92c <__subdf3+0x424>
  10d6d8:	01400804 	movi	r5,32
  10d6dc:	28cbc83a 	sub	r5,r5,r3
  10d6e0:	88c8d83a 	srl	r4,r17,r3
  10d6e4:	8962983a 	sll	r17,r17,r5
  10d6e8:	114a983a 	sll	r5,r2,r5
  10d6ec:	10c6d83a 	srl	r3,r2,r3
  10d6f0:	8804c03a 	cmpne	r2,r17,zero
  10d6f4:	290ab03a 	or	r5,r5,r4
  10d6f8:	28a2b03a 	or	r17,r5,r2
  10d6fc:	0021883a 	mov	r16,zero
  10d700:	003fa206 	br	10d58c <__alt_data_end+0xfff0d58c>
  10d704:	2090b03a 	or	r8,r4,r2
  10d708:	40018e26 	beq	r8,zero,10dd44 <__subdf3+0x83c>
  10d70c:	1007883a 	mov	r3,r2
  10d710:	2023883a 	mov	r17,r4
  10d714:	888001cc 	andi	r2,r17,7
  10d718:	103f9e1e 	bne	r2,zero,10d594 <__alt_data_end+0xfff0d594>
  10d71c:	1804977a 	slli	r2,r3,29
  10d720:	8822d0fa 	srli	r17,r17,3
  10d724:	1810d0fa 	srli	r8,r3,3
  10d728:	9100004c 	andi	r4,r18,1
  10d72c:	1444b03a 	or	r2,r2,r17
  10d730:	00c1ffc4 	movi	r3,2047
  10d734:	80c02826 	beq	r16,r3,10d7d8 <__subdf3+0x2d0>
  10d738:	01400434 	movhi	r5,16
  10d73c:	297fffc4 	addi	r5,r5,-1
  10d740:	80e0703a 	and	r16,r16,r3
  10d744:	414a703a 	and	r5,r8,r5
  10d748:	003fa806 	br	10d5ec <__alt_data_end+0xfff0d5ec>
  10d74c:	0080630e 	bge	zero,r2,10d8dc <__subdf3+0x3d4>
  10d750:	48003026 	beq	r9,zero,10d814 <__subdf3+0x30c>
  10d754:	0101ffc4 	movi	r4,2047
  10d758:	813f8c26 	beq	r16,r4,10d58c <__alt_data_end+0xfff0d58c>
  10d75c:	29402034 	orhi	r5,r5,128
  10d760:	01000e04 	movi	r4,56
  10d764:	2080a90e 	bge	r4,r2,10da0c <__subdf3+0x504>
  10d768:	298cb03a 	or	r6,r5,r6
  10d76c:	3012c03a 	cmpne	r9,r6,zero
  10d770:	0005883a 	mov	r2,zero
  10d774:	4c53883a 	add	r9,r9,r17
  10d778:	4c63803a 	cmpltu	r17,r9,r17
  10d77c:	10c7883a 	add	r3,r2,r3
  10d780:	88c7883a 	add	r3,r17,r3
  10d784:	4823883a 	mov	r17,r9
  10d788:	1880202c 	andhi	r2,r3,128
  10d78c:	1000d026 	beq	r2,zero,10dad0 <__subdf3+0x5c8>
  10d790:	84000044 	addi	r16,r16,1
  10d794:	0081ffc4 	movi	r2,2047
  10d798:	8080fe26 	beq	r16,r2,10db94 <__subdf3+0x68c>
  10d79c:	00bfe034 	movhi	r2,65408
  10d7a0:	10bfffc4 	addi	r2,r2,-1
  10d7a4:	1886703a 	and	r3,r3,r2
  10d7a8:	880ad07a 	srli	r5,r17,1
  10d7ac:	180497fa 	slli	r2,r3,31
  10d7b0:	8900004c 	andi	r4,r17,1
  10d7b4:	2922b03a 	or	r17,r5,r4
  10d7b8:	1806d07a 	srli	r3,r3,1
  10d7bc:	1462b03a 	or	r17,r2,r17
  10d7c0:	3825883a 	mov	r18,r7
  10d7c4:	003f7106 	br	10d58c <__alt_data_end+0xfff0d58c>
  10d7c8:	2984b03a 	or	r2,r5,r6
  10d7cc:	103f6826 	beq	r2,zero,10d570 <__alt_data_end+0xfff0d570>
  10d7d0:	39c03fcc 	andi	r7,r7,255
  10d7d4:	003f6706 	br	10d574 <__alt_data_end+0xfff0d574>
  10d7d8:	4086b03a 	or	r3,r8,r2
  10d7dc:	18015226 	beq	r3,zero,10dd28 <__subdf3+0x820>
  10d7e0:	00c00434 	movhi	r3,16
  10d7e4:	41400234 	orhi	r5,r8,8
  10d7e8:	18ffffc4 	addi	r3,r3,-1
  10d7ec:	28ca703a 	and	r5,r5,r3
  10d7f0:	003f7e06 	br	10d5ec <__alt_data_end+0xfff0d5ec>
  10d7f4:	10bfffc4 	addi	r2,r2,-1
  10d7f8:	1000491e 	bne	r2,zero,10d920 <__subdf3+0x418>
  10d7fc:	898fc83a 	sub	r7,r17,r6
  10d800:	89e3803a 	cmpltu	r17,r17,r7
  10d804:	1947c83a 	sub	r3,r3,r5
  10d808:	1c47c83a 	sub	r3,r3,r17
  10d80c:	3823883a 	mov	r17,r7
  10d810:	003f9b06 	br	10d680 <__alt_data_end+0xfff0d680>
  10d814:	2988b03a 	or	r4,r5,r6
  10d818:	203f5c26 	beq	r4,zero,10d58c <__alt_data_end+0xfff0d58c>
  10d81c:	10bfffc4 	addi	r2,r2,-1
  10d820:	1000931e 	bne	r2,zero,10da70 <__subdf3+0x568>
  10d824:	898d883a 	add	r6,r17,r6
  10d828:	3463803a 	cmpltu	r17,r6,r17
  10d82c:	1947883a 	add	r3,r3,r5
  10d830:	88c7883a 	add	r3,r17,r3
  10d834:	3023883a 	mov	r17,r6
  10d838:	003fd306 	br	10d788 <__alt_data_end+0xfff0d788>
  10d83c:	1000541e 	bne	r2,zero,10d990 <__subdf3+0x488>
  10d840:	80800044 	addi	r2,r16,1
  10d844:	1081ffcc 	andi	r2,r2,2047
  10d848:	01000044 	movi	r4,1
  10d84c:	2080a20e 	bge	r4,r2,10dad8 <__subdf3+0x5d0>
  10d850:	8989c83a 	sub	r4,r17,r6
  10d854:	8905803a 	cmpltu	r2,r17,r4
  10d858:	1967c83a 	sub	r19,r3,r5
  10d85c:	98a7c83a 	sub	r19,r19,r2
  10d860:	9880202c 	andhi	r2,r19,128
  10d864:	10006326 	beq	r2,zero,10d9f4 <__subdf3+0x4ec>
  10d868:	3463c83a 	sub	r17,r6,r17
  10d86c:	28c7c83a 	sub	r3,r5,r3
  10d870:	344d803a 	cmpltu	r6,r6,r17
  10d874:	19a7c83a 	sub	r19,r3,r6
  10d878:	3825883a 	mov	r18,r7
  10d87c:	983f861e 	bne	r19,zero,10d698 <__alt_data_end+0xfff0d698>
  10d880:	8809883a 	mov	r4,r17
  10d884:	01019700 	call	101970 <__clzsi2>
  10d888:	10800804 	addi	r2,r2,32
  10d88c:	113ffe04 	addi	r4,r2,-8
  10d890:	00c007c4 	movi	r3,31
  10d894:	193f850e 	bge	r3,r4,10d6ac <__alt_data_end+0xfff0d6ac>
  10d898:	10bff604 	addi	r2,r2,-40
  10d89c:	8884983a 	sll	r2,r17,r2
  10d8a0:	0023883a 	mov	r17,zero
  10d8a4:	243f880e 	bge	r4,r16,10d6c8 <__alt_data_end+0xfff0d6c8>
  10d8a8:	00ffe034 	movhi	r3,65408
  10d8ac:	18ffffc4 	addi	r3,r3,-1
  10d8b0:	8121c83a 	sub	r16,r16,r4
  10d8b4:	10c6703a 	and	r3,r2,r3
  10d8b8:	003f3406 	br	10d58c <__alt_data_end+0xfff0d58c>
  10d8bc:	9100004c 	andi	r4,r18,1
  10d8c0:	000b883a 	mov	r5,zero
  10d8c4:	0005883a 	mov	r2,zero
  10d8c8:	003f4806 	br	10d5ec <__alt_data_end+0xfff0d5ec>
  10d8cc:	298cb03a 	or	r6,r5,r6
  10d8d0:	300cc03a 	cmpne	r6,r6,zero
  10d8d4:	0005883a 	mov	r2,zero
  10d8d8:	003f6406 	br	10d66c <__alt_data_end+0xfff0d66c>
  10d8dc:	10009a1e 	bne	r2,zero,10db48 <__subdf3+0x640>
  10d8e0:	82400044 	addi	r9,r16,1
  10d8e4:	4881ffcc 	andi	r2,r9,2047
  10d8e8:	02800044 	movi	r10,1
  10d8ec:	5080670e 	bge	r10,r2,10da8c <__subdf3+0x584>
  10d8f0:	0081ffc4 	movi	r2,2047
  10d8f4:	4880af26 	beq	r9,r2,10dbb4 <__subdf3+0x6ac>
  10d8f8:	898d883a 	add	r6,r17,r6
  10d8fc:	1945883a 	add	r2,r3,r5
  10d900:	3447803a 	cmpltu	r3,r6,r17
  10d904:	1887883a 	add	r3,r3,r2
  10d908:	182297fa 	slli	r17,r3,31
  10d90c:	300cd07a 	srli	r6,r6,1
  10d910:	1806d07a 	srli	r3,r3,1
  10d914:	4821883a 	mov	r16,r9
  10d918:	89a2b03a 	or	r17,r17,r6
  10d91c:	003f1b06 	br	10d58c <__alt_data_end+0xfff0d58c>
  10d920:	0101ffc4 	movi	r4,2047
  10d924:	813f441e 	bne	r16,r4,10d638 <__alt_data_end+0xfff0d638>
  10d928:	003f1806 	br	10d58c <__alt_data_end+0xfff0d58c>
  10d92c:	843ff844 	addi	r16,r16,-31
  10d930:	01400804 	movi	r5,32
  10d934:	1408d83a 	srl	r4,r2,r16
  10d938:	19405026 	beq	r3,r5,10da7c <__subdf3+0x574>
  10d93c:	01401004 	movi	r5,64
  10d940:	28c7c83a 	sub	r3,r5,r3
  10d944:	10c4983a 	sll	r2,r2,r3
  10d948:	88a2b03a 	or	r17,r17,r2
  10d94c:	8822c03a 	cmpne	r17,r17,zero
  10d950:	2462b03a 	or	r17,r4,r17
  10d954:	0007883a 	mov	r3,zero
  10d958:	0021883a 	mov	r16,zero
  10d95c:	003f6d06 	br	10d714 <__alt_data_end+0xfff0d714>
  10d960:	11fff804 	addi	r7,r2,-32
  10d964:	01000804 	movi	r4,32
  10d968:	29ced83a 	srl	r7,r5,r7
  10d96c:	11004526 	beq	r2,r4,10da84 <__subdf3+0x57c>
  10d970:	01001004 	movi	r4,64
  10d974:	2089c83a 	sub	r4,r4,r2
  10d978:	2904983a 	sll	r2,r5,r4
  10d97c:	118cb03a 	or	r6,r2,r6
  10d980:	300cc03a 	cmpne	r6,r6,zero
  10d984:	398cb03a 	or	r6,r7,r6
  10d988:	0005883a 	mov	r2,zero
  10d98c:	003f3706 	br	10d66c <__alt_data_end+0xfff0d66c>
  10d990:	80002a26 	beq	r16,zero,10da3c <__subdf3+0x534>
  10d994:	0101ffc4 	movi	r4,2047
  10d998:	49006626 	beq	r9,r4,10db34 <__subdf3+0x62c>
  10d99c:	0085c83a 	sub	r2,zero,r2
  10d9a0:	18c02034 	orhi	r3,r3,128
  10d9a4:	01000e04 	movi	r4,56
  10d9a8:	20807e16 	blt	r4,r2,10dba4 <__subdf3+0x69c>
  10d9ac:	010007c4 	movi	r4,31
  10d9b0:	2080e716 	blt	r4,r2,10dd50 <__subdf3+0x848>
  10d9b4:	01000804 	movi	r4,32
  10d9b8:	2089c83a 	sub	r4,r4,r2
  10d9bc:	1914983a 	sll	r10,r3,r4
  10d9c0:	8890d83a 	srl	r8,r17,r2
  10d9c4:	8908983a 	sll	r4,r17,r4
  10d9c8:	1884d83a 	srl	r2,r3,r2
  10d9cc:	5222b03a 	or	r17,r10,r8
  10d9d0:	2006c03a 	cmpne	r3,r4,zero
  10d9d4:	88e2b03a 	or	r17,r17,r3
  10d9d8:	3463c83a 	sub	r17,r6,r17
  10d9dc:	2885c83a 	sub	r2,r5,r2
  10d9e0:	344d803a 	cmpltu	r6,r6,r17
  10d9e4:	1187c83a 	sub	r3,r2,r6
  10d9e8:	4821883a 	mov	r16,r9
  10d9ec:	3825883a 	mov	r18,r7
  10d9f0:	003f2306 	br	10d680 <__alt_data_end+0xfff0d680>
  10d9f4:	24d0b03a 	or	r8,r4,r19
  10d9f8:	40001b1e 	bne	r8,zero,10da68 <__subdf3+0x560>
  10d9fc:	0005883a 	mov	r2,zero
  10da00:	0009883a 	mov	r4,zero
  10da04:	0021883a 	mov	r16,zero
  10da08:	003f4906 	br	10d730 <__alt_data_end+0xfff0d730>
  10da0c:	010007c4 	movi	r4,31
  10da10:	20803a16 	blt	r4,r2,10dafc <__subdf3+0x5f4>
  10da14:	01000804 	movi	r4,32
  10da18:	2089c83a 	sub	r4,r4,r2
  10da1c:	2912983a 	sll	r9,r5,r4
  10da20:	3090d83a 	srl	r8,r6,r2
  10da24:	3108983a 	sll	r4,r6,r4
  10da28:	2884d83a 	srl	r2,r5,r2
  10da2c:	4a12b03a 	or	r9,r9,r8
  10da30:	2008c03a 	cmpne	r4,r4,zero
  10da34:	4912b03a 	or	r9,r9,r4
  10da38:	003f4e06 	br	10d774 <__alt_data_end+0xfff0d774>
  10da3c:	1c48b03a 	or	r4,r3,r17
  10da40:	20003c26 	beq	r4,zero,10db34 <__subdf3+0x62c>
  10da44:	0084303a 	nor	r2,zero,r2
  10da48:	1000381e 	bne	r2,zero,10db2c <__subdf3+0x624>
  10da4c:	3463c83a 	sub	r17,r6,r17
  10da50:	28c5c83a 	sub	r2,r5,r3
  10da54:	344d803a 	cmpltu	r6,r6,r17
  10da58:	1187c83a 	sub	r3,r2,r6
  10da5c:	4821883a 	mov	r16,r9
  10da60:	3825883a 	mov	r18,r7
  10da64:	003f0606 	br	10d680 <__alt_data_end+0xfff0d680>
  10da68:	2023883a 	mov	r17,r4
  10da6c:	003f0906 	br	10d694 <__alt_data_end+0xfff0d694>
  10da70:	0101ffc4 	movi	r4,2047
  10da74:	813f3a1e 	bne	r16,r4,10d760 <__alt_data_end+0xfff0d760>
  10da78:	003ec406 	br	10d58c <__alt_data_end+0xfff0d58c>
  10da7c:	0005883a 	mov	r2,zero
  10da80:	003fb106 	br	10d948 <__alt_data_end+0xfff0d948>
  10da84:	0005883a 	mov	r2,zero
  10da88:	003fbc06 	br	10d97c <__alt_data_end+0xfff0d97c>
  10da8c:	1c44b03a 	or	r2,r3,r17
  10da90:	80008e1e 	bne	r16,zero,10dccc <__subdf3+0x7c4>
  10da94:	1000c826 	beq	r2,zero,10ddb8 <__subdf3+0x8b0>
  10da98:	2984b03a 	or	r2,r5,r6
  10da9c:	103ebb26 	beq	r2,zero,10d58c <__alt_data_end+0xfff0d58c>
  10daa0:	8989883a 	add	r4,r17,r6
  10daa4:	1945883a 	add	r2,r3,r5
  10daa8:	2447803a 	cmpltu	r3,r4,r17
  10daac:	1887883a 	add	r3,r3,r2
  10dab0:	1880202c 	andhi	r2,r3,128
  10dab4:	2023883a 	mov	r17,r4
  10dab8:	103f1626 	beq	r2,zero,10d714 <__alt_data_end+0xfff0d714>
  10dabc:	00bfe034 	movhi	r2,65408
  10dac0:	10bfffc4 	addi	r2,r2,-1
  10dac4:	5021883a 	mov	r16,r10
  10dac8:	1886703a 	and	r3,r3,r2
  10dacc:	003eaf06 	br	10d58c <__alt_data_end+0xfff0d58c>
  10dad0:	3825883a 	mov	r18,r7
  10dad4:	003f0f06 	br	10d714 <__alt_data_end+0xfff0d714>
  10dad8:	1c44b03a 	or	r2,r3,r17
  10dadc:	8000251e 	bne	r16,zero,10db74 <__subdf3+0x66c>
  10dae0:	1000661e 	bne	r2,zero,10dc7c <__subdf3+0x774>
  10dae4:	2990b03a 	or	r8,r5,r6
  10dae8:	40009626 	beq	r8,zero,10dd44 <__subdf3+0x83c>
  10daec:	2807883a 	mov	r3,r5
  10daf0:	3023883a 	mov	r17,r6
  10daf4:	3825883a 	mov	r18,r7
  10daf8:	003ea406 	br	10d58c <__alt_data_end+0xfff0d58c>
  10dafc:	127ff804 	addi	r9,r2,-32
  10db00:	01000804 	movi	r4,32
  10db04:	2a52d83a 	srl	r9,r5,r9
  10db08:	11008c26 	beq	r2,r4,10dd3c <__subdf3+0x834>
  10db0c:	01001004 	movi	r4,64
  10db10:	2085c83a 	sub	r2,r4,r2
  10db14:	2884983a 	sll	r2,r5,r2
  10db18:	118cb03a 	or	r6,r2,r6
  10db1c:	300cc03a 	cmpne	r6,r6,zero
  10db20:	4992b03a 	or	r9,r9,r6
  10db24:	0005883a 	mov	r2,zero
  10db28:	003f1206 	br	10d774 <__alt_data_end+0xfff0d774>
  10db2c:	0101ffc4 	movi	r4,2047
  10db30:	493f9c1e 	bne	r9,r4,10d9a4 <__alt_data_end+0xfff0d9a4>
  10db34:	2807883a 	mov	r3,r5
  10db38:	3023883a 	mov	r17,r6
  10db3c:	4821883a 	mov	r16,r9
  10db40:	3825883a 	mov	r18,r7
  10db44:	003e9106 	br	10d58c <__alt_data_end+0xfff0d58c>
  10db48:	80001f1e 	bne	r16,zero,10dbc8 <__subdf3+0x6c0>
  10db4c:	1c48b03a 	or	r4,r3,r17
  10db50:	20005a26 	beq	r4,zero,10dcbc <__subdf3+0x7b4>
  10db54:	0084303a 	nor	r2,zero,r2
  10db58:	1000561e 	bne	r2,zero,10dcb4 <__subdf3+0x7ac>
  10db5c:	89a3883a 	add	r17,r17,r6
  10db60:	1945883a 	add	r2,r3,r5
  10db64:	898d803a 	cmpltu	r6,r17,r6
  10db68:	3087883a 	add	r3,r6,r2
  10db6c:	4821883a 	mov	r16,r9
  10db70:	003f0506 	br	10d788 <__alt_data_end+0xfff0d788>
  10db74:	10002b1e 	bne	r2,zero,10dc24 <__subdf3+0x71c>
  10db78:	2984b03a 	or	r2,r5,r6
  10db7c:	10008026 	beq	r2,zero,10dd80 <__subdf3+0x878>
  10db80:	2807883a 	mov	r3,r5
  10db84:	3023883a 	mov	r17,r6
  10db88:	3825883a 	mov	r18,r7
  10db8c:	0401ffc4 	movi	r16,2047
  10db90:	003e7e06 	br	10d58c <__alt_data_end+0xfff0d58c>
  10db94:	3809883a 	mov	r4,r7
  10db98:	0011883a 	mov	r8,zero
  10db9c:	0005883a 	mov	r2,zero
  10dba0:	003ee306 	br	10d730 <__alt_data_end+0xfff0d730>
  10dba4:	1c62b03a 	or	r17,r3,r17
  10dba8:	8822c03a 	cmpne	r17,r17,zero
  10dbac:	0005883a 	mov	r2,zero
  10dbb0:	003f8906 	br	10d9d8 <__alt_data_end+0xfff0d9d8>
  10dbb4:	3809883a 	mov	r4,r7
  10dbb8:	4821883a 	mov	r16,r9
  10dbbc:	0011883a 	mov	r8,zero
  10dbc0:	0005883a 	mov	r2,zero
  10dbc4:	003eda06 	br	10d730 <__alt_data_end+0xfff0d730>
  10dbc8:	0101ffc4 	movi	r4,2047
  10dbcc:	49003b26 	beq	r9,r4,10dcbc <__subdf3+0x7b4>
  10dbd0:	0085c83a 	sub	r2,zero,r2
  10dbd4:	18c02034 	orhi	r3,r3,128
  10dbd8:	01000e04 	movi	r4,56
  10dbdc:	20806e16 	blt	r4,r2,10dd98 <__subdf3+0x890>
  10dbe0:	010007c4 	movi	r4,31
  10dbe4:	20807716 	blt	r4,r2,10ddc4 <__subdf3+0x8bc>
  10dbe8:	01000804 	movi	r4,32
  10dbec:	2089c83a 	sub	r4,r4,r2
  10dbf0:	1914983a 	sll	r10,r3,r4
  10dbf4:	8890d83a 	srl	r8,r17,r2
  10dbf8:	8908983a 	sll	r4,r17,r4
  10dbfc:	1884d83a 	srl	r2,r3,r2
  10dc00:	5222b03a 	or	r17,r10,r8
  10dc04:	2006c03a 	cmpne	r3,r4,zero
  10dc08:	88e2b03a 	or	r17,r17,r3
  10dc0c:	89a3883a 	add	r17,r17,r6
  10dc10:	1145883a 	add	r2,r2,r5
  10dc14:	898d803a 	cmpltu	r6,r17,r6
  10dc18:	3087883a 	add	r3,r6,r2
  10dc1c:	4821883a 	mov	r16,r9
  10dc20:	003ed906 	br	10d788 <__alt_data_end+0xfff0d788>
  10dc24:	2984b03a 	or	r2,r5,r6
  10dc28:	10004226 	beq	r2,zero,10dd34 <__subdf3+0x82c>
  10dc2c:	1808d0fa 	srli	r4,r3,3
  10dc30:	8822d0fa 	srli	r17,r17,3
  10dc34:	1806977a 	slli	r3,r3,29
  10dc38:	2080022c 	andhi	r2,r4,8
  10dc3c:	1c62b03a 	or	r17,r3,r17
  10dc40:	10000826 	beq	r2,zero,10dc64 <__subdf3+0x75c>
  10dc44:	2812d0fa 	srli	r9,r5,3
  10dc48:	4880022c 	andhi	r2,r9,8
  10dc4c:	1000051e 	bne	r2,zero,10dc64 <__subdf3+0x75c>
  10dc50:	300cd0fa 	srli	r6,r6,3
  10dc54:	2804977a 	slli	r2,r5,29
  10dc58:	4809883a 	mov	r4,r9
  10dc5c:	3825883a 	mov	r18,r7
  10dc60:	11a2b03a 	or	r17,r2,r6
  10dc64:	8806d77a 	srli	r3,r17,29
  10dc68:	200890fa 	slli	r4,r4,3
  10dc6c:	882290fa 	slli	r17,r17,3
  10dc70:	0401ffc4 	movi	r16,2047
  10dc74:	1906b03a 	or	r3,r3,r4
  10dc78:	003e4406 	br	10d58c <__alt_data_end+0xfff0d58c>
  10dc7c:	2984b03a 	or	r2,r5,r6
  10dc80:	103e4226 	beq	r2,zero,10d58c <__alt_data_end+0xfff0d58c>
  10dc84:	8989c83a 	sub	r4,r17,r6
  10dc88:	8911803a 	cmpltu	r8,r17,r4
  10dc8c:	1945c83a 	sub	r2,r3,r5
  10dc90:	1205c83a 	sub	r2,r2,r8
  10dc94:	1200202c 	andhi	r8,r2,128
  10dc98:	403e9a26 	beq	r8,zero,10d704 <__alt_data_end+0xfff0d704>
  10dc9c:	3463c83a 	sub	r17,r6,r17
  10dca0:	28c5c83a 	sub	r2,r5,r3
  10dca4:	344d803a 	cmpltu	r6,r6,r17
  10dca8:	1187c83a 	sub	r3,r2,r6
  10dcac:	3825883a 	mov	r18,r7
  10dcb0:	003e3606 	br	10d58c <__alt_data_end+0xfff0d58c>
  10dcb4:	0101ffc4 	movi	r4,2047
  10dcb8:	493fc71e 	bne	r9,r4,10dbd8 <__alt_data_end+0xfff0dbd8>
  10dcbc:	2807883a 	mov	r3,r5
  10dcc0:	3023883a 	mov	r17,r6
  10dcc4:	4821883a 	mov	r16,r9
  10dcc8:	003e3006 	br	10d58c <__alt_data_end+0xfff0d58c>
  10dccc:	10003626 	beq	r2,zero,10dda8 <__subdf3+0x8a0>
  10dcd0:	2984b03a 	or	r2,r5,r6
  10dcd4:	10001726 	beq	r2,zero,10dd34 <__subdf3+0x82c>
  10dcd8:	1808d0fa 	srli	r4,r3,3
  10dcdc:	8822d0fa 	srli	r17,r17,3
  10dce0:	1806977a 	slli	r3,r3,29
  10dce4:	2080022c 	andhi	r2,r4,8
  10dce8:	1c62b03a 	or	r17,r3,r17
  10dcec:	10000726 	beq	r2,zero,10dd0c <__subdf3+0x804>
  10dcf0:	2812d0fa 	srli	r9,r5,3
  10dcf4:	4880022c 	andhi	r2,r9,8
  10dcf8:	1000041e 	bne	r2,zero,10dd0c <__subdf3+0x804>
  10dcfc:	300cd0fa 	srli	r6,r6,3
  10dd00:	2804977a 	slli	r2,r5,29
  10dd04:	4809883a 	mov	r4,r9
  10dd08:	11a2b03a 	or	r17,r2,r6
  10dd0c:	8806d77a 	srli	r3,r17,29
  10dd10:	200890fa 	slli	r4,r4,3
  10dd14:	882290fa 	slli	r17,r17,3
  10dd18:	3825883a 	mov	r18,r7
  10dd1c:	1906b03a 	or	r3,r3,r4
  10dd20:	0401ffc4 	movi	r16,2047
  10dd24:	003e1906 	br	10d58c <__alt_data_end+0xfff0d58c>
  10dd28:	000b883a 	mov	r5,zero
  10dd2c:	0005883a 	mov	r2,zero
  10dd30:	003e2e06 	br	10d5ec <__alt_data_end+0xfff0d5ec>
  10dd34:	0401ffc4 	movi	r16,2047
  10dd38:	003e1406 	br	10d58c <__alt_data_end+0xfff0d58c>
  10dd3c:	0005883a 	mov	r2,zero
  10dd40:	003f7506 	br	10db18 <__alt_data_end+0xfff0db18>
  10dd44:	0005883a 	mov	r2,zero
  10dd48:	0009883a 	mov	r4,zero
  10dd4c:	003e7806 	br	10d730 <__alt_data_end+0xfff0d730>
  10dd50:	123ff804 	addi	r8,r2,-32
  10dd54:	01000804 	movi	r4,32
  10dd58:	1a10d83a 	srl	r8,r3,r8
  10dd5c:	11002526 	beq	r2,r4,10ddf4 <__subdf3+0x8ec>
  10dd60:	01001004 	movi	r4,64
  10dd64:	2085c83a 	sub	r2,r4,r2
  10dd68:	1884983a 	sll	r2,r3,r2
  10dd6c:	1444b03a 	or	r2,r2,r17
  10dd70:	1004c03a 	cmpne	r2,r2,zero
  10dd74:	40a2b03a 	or	r17,r8,r2
  10dd78:	0005883a 	mov	r2,zero
  10dd7c:	003f1606 	br	10d9d8 <__alt_data_end+0xfff0d9d8>
  10dd80:	02000434 	movhi	r8,16
  10dd84:	0009883a 	mov	r4,zero
  10dd88:	423fffc4 	addi	r8,r8,-1
  10dd8c:	00bfffc4 	movi	r2,-1
  10dd90:	0401ffc4 	movi	r16,2047
  10dd94:	003e6606 	br	10d730 <__alt_data_end+0xfff0d730>
  10dd98:	1c62b03a 	or	r17,r3,r17
  10dd9c:	8822c03a 	cmpne	r17,r17,zero
  10dda0:	0005883a 	mov	r2,zero
  10dda4:	003f9906 	br	10dc0c <__alt_data_end+0xfff0dc0c>
  10dda8:	2807883a 	mov	r3,r5
  10ddac:	3023883a 	mov	r17,r6
  10ddb0:	0401ffc4 	movi	r16,2047
  10ddb4:	003df506 	br	10d58c <__alt_data_end+0xfff0d58c>
  10ddb8:	2807883a 	mov	r3,r5
  10ddbc:	3023883a 	mov	r17,r6
  10ddc0:	003df206 	br	10d58c <__alt_data_end+0xfff0d58c>
  10ddc4:	123ff804 	addi	r8,r2,-32
  10ddc8:	01000804 	movi	r4,32
  10ddcc:	1a10d83a 	srl	r8,r3,r8
  10ddd0:	11000a26 	beq	r2,r4,10ddfc <__subdf3+0x8f4>
  10ddd4:	01001004 	movi	r4,64
  10ddd8:	2085c83a 	sub	r2,r4,r2
  10dddc:	1884983a 	sll	r2,r3,r2
  10dde0:	1444b03a 	or	r2,r2,r17
  10dde4:	1004c03a 	cmpne	r2,r2,zero
  10dde8:	40a2b03a 	or	r17,r8,r2
  10ddec:	0005883a 	mov	r2,zero
  10ddf0:	003f8606 	br	10dc0c <__alt_data_end+0xfff0dc0c>
  10ddf4:	0005883a 	mov	r2,zero
  10ddf8:	003fdc06 	br	10dd6c <__alt_data_end+0xfff0dd6c>
  10ddfc:	0005883a 	mov	r2,zero
  10de00:	003ff706 	br	10dde0 <__alt_data_end+0xfff0dde0>

0010de04 <__fixdfsi>:
  10de04:	280cd53a 	srli	r6,r5,20
  10de08:	00c00434 	movhi	r3,16
  10de0c:	18ffffc4 	addi	r3,r3,-1
  10de10:	3181ffcc 	andi	r6,r6,2047
  10de14:	01c0ff84 	movi	r7,1022
  10de18:	28c6703a 	and	r3,r5,r3
  10de1c:	280ad7fa 	srli	r5,r5,31
  10de20:	3980120e 	bge	r7,r6,10de6c <__fixdfsi+0x68>
  10de24:	00810744 	movi	r2,1053
  10de28:	11800c16 	blt	r2,r6,10de5c <__fixdfsi+0x58>
  10de2c:	00810cc4 	movi	r2,1075
  10de30:	1185c83a 	sub	r2,r2,r6
  10de34:	01c007c4 	movi	r7,31
  10de38:	18c00434 	orhi	r3,r3,16
  10de3c:	38800d16 	blt	r7,r2,10de74 <__fixdfsi+0x70>
  10de40:	31befb44 	addi	r6,r6,-1043
  10de44:	2084d83a 	srl	r2,r4,r2
  10de48:	1986983a 	sll	r3,r3,r6
  10de4c:	1884b03a 	or	r2,r3,r2
  10de50:	28000726 	beq	r5,zero,10de70 <__fixdfsi+0x6c>
  10de54:	0085c83a 	sub	r2,zero,r2
  10de58:	f800283a 	ret
  10de5c:	00a00034 	movhi	r2,32768
  10de60:	10bfffc4 	addi	r2,r2,-1
  10de64:	2885883a 	add	r2,r5,r2
  10de68:	f800283a 	ret
  10de6c:	0005883a 	mov	r2,zero
  10de70:	f800283a 	ret
  10de74:	008104c4 	movi	r2,1043
  10de78:	1185c83a 	sub	r2,r2,r6
  10de7c:	1884d83a 	srl	r2,r3,r2
  10de80:	003ff306 	br	10de50 <__alt_data_end+0xfff0de50>

0010de84 <__floatsidf>:
  10de84:	defffd04 	addi	sp,sp,-12
  10de88:	dfc00215 	stw	ra,8(sp)
  10de8c:	dc400115 	stw	r17,4(sp)
  10de90:	dc000015 	stw	r16,0(sp)
  10de94:	20002b26 	beq	r4,zero,10df44 <__floatsidf+0xc0>
  10de98:	2023883a 	mov	r17,r4
  10de9c:	2020d7fa 	srli	r16,r4,31
  10dea0:	20002d16 	blt	r4,zero,10df58 <__floatsidf+0xd4>
  10dea4:	8809883a 	mov	r4,r17
  10dea8:	01019700 	call	101970 <__clzsi2>
  10deac:	01410784 	movi	r5,1054
  10deb0:	288bc83a 	sub	r5,r5,r2
  10deb4:	01010cc4 	movi	r4,1075
  10deb8:	2149c83a 	sub	r4,r4,r5
  10debc:	00c007c4 	movi	r3,31
  10dec0:	1900160e 	bge	r3,r4,10df1c <__floatsidf+0x98>
  10dec4:	00c104c4 	movi	r3,1043
  10dec8:	1947c83a 	sub	r3,r3,r5
  10decc:	88c6983a 	sll	r3,r17,r3
  10ded0:	00800434 	movhi	r2,16
  10ded4:	10bfffc4 	addi	r2,r2,-1
  10ded8:	1886703a 	and	r3,r3,r2
  10dedc:	2941ffcc 	andi	r5,r5,2047
  10dee0:	800d883a 	mov	r6,r16
  10dee4:	0005883a 	mov	r2,zero
  10dee8:	280a953a 	slli	r5,r5,20
  10deec:	31803fcc 	andi	r6,r6,255
  10def0:	01000434 	movhi	r4,16
  10def4:	300c97fa 	slli	r6,r6,31
  10def8:	213fffc4 	addi	r4,r4,-1
  10defc:	1906703a 	and	r3,r3,r4
  10df00:	1946b03a 	or	r3,r3,r5
  10df04:	1986b03a 	or	r3,r3,r6
  10df08:	dfc00217 	ldw	ra,8(sp)
  10df0c:	dc400117 	ldw	r17,4(sp)
  10df10:	dc000017 	ldw	r16,0(sp)
  10df14:	dec00304 	addi	sp,sp,12
  10df18:	f800283a 	ret
  10df1c:	00c002c4 	movi	r3,11
  10df20:	1887c83a 	sub	r3,r3,r2
  10df24:	88c6d83a 	srl	r3,r17,r3
  10df28:	8904983a 	sll	r2,r17,r4
  10df2c:	01000434 	movhi	r4,16
  10df30:	213fffc4 	addi	r4,r4,-1
  10df34:	2941ffcc 	andi	r5,r5,2047
  10df38:	1906703a 	and	r3,r3,r4
  10df3c:	800d883a 	mov	r6,r16
  10df40:	003fe906 	br	10dee8 <__alt_data_end+0xfff0dee8>
  10df44:	000d883a 	mov	r6,zero
  10df48:	000b883a 	mov	r5,zero
  10df4c:	0007883a 	mov	r3,zero
  10df50:	0005883a 	mov	r2,zero
  10df54:	003fe406 	br	10dee8 <__alt_data_end+0xfff0dee8>
  10df58:	0123c83a 	sub	r17,zero,r4
  10df5c:	003fd106 	br	10dea4 <__alt_data_end+0xfff0dea4>

0010df60 <__floatunsidf>:
  10df60:	defffe04 	addi	sp,sp,-8
  10df64:	dc000015 	stw	r16,0(sp)
  10df68:	dfc00115 	stw	ra,4(sp)
  10df6c:	2021883a 	mov	r16,r4
  10df70:	20002226 	beq	r4,zero,10dffc <__floatunsidf+0x9c>
  10df74:	01019700 	call	101970 <__clzsi2>
  10df78:	01010784 	movi	r4,1054
  10df7c:	2089c83a 	sub	r4,r4,r2
  10df80:	01810cc4 	movi	r6,1075
  10df84:	310dc83a 	sub	r6,r6,r4
  10df88:	00c007c4 	movi	r3,31
  10df8c:	1980120e 	bge	r3,r6,10dfd8 <__floatunsidf+0x78>
  10df90:	00c104c4 	movi	r3,1043
  10df94:	1907c83a 	sub	r3,r3,r4
  10df98:	80ca983a 	sll	r5,r16,r3
  10df9c:	00800434 	movhi	r2,16
  10dfa0:	10bfffc4 	addi	r2,r2,-1
  10dfa4:	2101ffcc 	andi	r4,r4,2047
  10dfa8:	0021883a 	mov	r16,zero
  10dfac:	288a703a 	and	r5,r5,r2
  10dfb0:	2008953a 	slli	r4,r4,20
  10dfb4:	00c00434 	movhi	r3,16
  10dfb8:	18ffffc4 	addi	r3,r3,-1
  10dfbc:	28c6703a 	and	r3,r5,r3
  10dfc0:	8005883a 	mov	r2,r16
  10dfc4:	1906b03a 	or	r3,r3,r4
  10dfc8:	dfc00117 	ldw	ra,4(sp)
  10dfcc:	dc000017 	ldw	r16,0(sp)
  10dfd0:	dec00204 	addi	sp,sp,8
  10dfd4:	f800283a 	ret
  10dfd8:	00c002c4 	movi	r3,11
  10dfdc:	188bc83a 	sub	r5,r3,r2
  10dfe0:	814ad83a 	srl	r5,r16,r5
  10dfe4:	00c00434 	movhi	r3,16
  10dfe8:	18ffffc4 	addi	r3,r3,-1
  10dfec:	81a0983a 	sll	r16,r16,r6
  10dff0:	2101ffcc 	andi	r4,r4,2047
  10dff4:	28ca703a 	and	r5,r5,r3
  10dff8:	003fed06 	br	10dfb0 <__alt_data_end+0xfff0dfb0>
  10dffc:	0009883a 	mov	r4,zero
  10e000:	000b883a 	mov	r5,zero
  10e004:	003fea06 	br	10dfb0 <__alt_data_end+0xfff0dfb0>

0010e008 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  10e008:	defffe04 	addi	sp,sp,-8
  10e00c:	dfc00115 	stw	ra,4(sp)
  10e010:	df000015 	stw	fp,0(sp)
  10e014:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  10e018:	d0a00b17 	ldw	r2,-32724(gp)
  10e01c:	10000326 	beq	r2,zero,10e02c <alt_get_errno+0x24>
  10e020:	d0a00b17 	ldw	r2,-32724(gp)
  10e024:	103ee83a 	callr	r2
  10e028:	00000106 	br	10e030 <alt_get_errno+0x28>
  10e02c:	d0a41f04 	addi	r2,gp,-28548
}
  10e030:	e037883a 	mov	sp,fp
  10e034:	dfc00117 	ldw	ra,4(sp)
  10e038:	df000017 	ldw	fp,0(sp)
  10e03c:	dec00204 	addi	sp,sp,8
  10e040:	f800283a 	ret

0010e044 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  10e044:	defffb04 	addi	sp,sp,-20
  10e048:	dfc00415 	stw	ra,16(sp)
  10e04c:	df000315 	stw	fp,12(sp)
  10e050:	df000304 	addi	fp,sp,12
  10e054:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  10e058:	e0bfff17 	ldw	r2,-4(fp)
  10e05c:	10000616 	blt	r2,zero,10e078 <close+0x34>
  10e060:	e0bfff17 	ldw	r2,-4(fp)
  10e064:	10c00324 	muli	r3,r2,12
  10e068:	00800474 	movhi	r2,17
  10e06c:	10851a04 	addi	r2,r2,5224
  10e070:	1885883a 	add	r2,r3,r2
  10e074:	00000106 	br	10e07c <close+0x38>
  10e078:	0005883a 	mov	r2,zero
  10e07c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  10e080:	e0bffd17 	ldw	r2,-12(fp)
  10e084:	10001926 	beq	r2,zero,10e0ec <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  10e088:	e0bffd17 	ldw	r2,-12(fp)
  10e08c:	10800017 	ldw	r2,0(r2)
  10e090:	10800417 	ldw	r2,16(r2)
  10e094:	10000626 	beq	r2,zero,10e0b0 <close+0x6c>
  10e098:	e0bffd17 	ldw	r2,-12(fp)
  10e09c:	10800017 	ldw	r2,0(r2)
  10e0a0:	10800417 	ldw	r2,16(r2)
  10e0a4:	e13ffd17 	ldw	r4,-12(fp)
  10e0a8:	103ee83a 	callr	r2
  10e0ac:	00000106 	br	10e0b4 <close+0x70>
  10e0b0:	0005883a 	mov	r2,zero
  10e0b4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  10e0b8:	e13fff17 	ldw	r4,-4(fp)
  10e0bc:	010e7040 	call	10e704 <alt_release_fd>
    if (rval < 0)
  10e0c0:	e0bffe17 	ldw	r2,-8(fp)
  10e0c4:	1000070e 	bge	r2,zero,10e0e4 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  10e0c8:	010e0080 	call	10e008 <alt_get_errno>
  10e0cc:	1007883a 	mov	r3,r2
  10e0d0:	e0bffe17 	ldw	r2,-8(fp)
  10e0d4:	0085c83a 	sub	r2,zero,r2
  10e0d8:	18800015 	stw	r2,0(r3)
      return -1;
  10e0dc:	00bfffc4 	movi	r2,-1
  10e0e0:	00000706 	br	10e100 <close+0xbc>
    }
    return 0;
  10e0e4:	0005883a 	mov	r2,zero
  10e0e8:	00000506 	br	10e100 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  10e0ec:	010e0080 	call	10e008 <alt_get_errno>
  10e0f0:	1007883a 	mov	r3,r2
  10e0f4:	00801444 	movi	r2,81
  10e0f8:	18800015 	stw	r2,0(r3)
    return -1;
  10e0fc:	00bfffc4 	movi	r2,-1
  }
}
  10e100:	e037883a 	mov	sp,fp
  10e104:	dfc00117 	ldw	ra,4(sp)
  10e108:	df000017 	ldw	fp,0(sp)
  10e10c:	dec00204 	addi	sp,sp,8
  10e110:	f800283a 	ret

0010e114 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  10e114:	defffc04 	addi	sp,sp,-16
  10e118:	df000315 	stw	fp,12(sp)
  10e11c:	df000304 	addi	fp,sp,12
  10e120:	e13ffd15 	stw	r4,-12(fp)
  10e124:	e17ffe15 	stw	r5,-8(fp)
  10e128:	e1bfff15 	stw	r6,-4(fp)
  return len;
  10e12c:	e0bfff17 	ldw	r2,-4(fp)
}
  10e130:	e037883a 	mov	sp,fp
  10e134:	df000017 	ldw	fp,0(sp)
  10e138:	dec00104 	addi	sp,sp,4
  10e13c:	f800283a 	ret

0010e140 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  10e140:	defffe04 	addi	sp,sp,-8
  10e144:	dfc00115 	stw	ra,4(sp)
  10e148:	df000015 	stw	fp,0(sp)
  10e14c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  10e150:	d0a00b17 	ldw	r2,-32724(gp)
  10e154:	10000326 	beq	r2,zero,10e164 <alt_get_errno+0x24>
  10e158:	d0a00b17 	ldw	r2,-32724(gp)
  10e15c:	103ee83a 	callr	r2
  10e160:	00000106 	br	10e168 <alt_get_errno+0x28>
  10e164:	d0a41f04 	addi	r2,gp,-28548
}
  10e168:	e037883a 	mov	sp,fp
  10e16c:	dfc00117 	ldw	ra,4(sp)
  10e170:	df000017 	ldw	fp,0(sp)
  10e174:	dec00204 	addi	sp,sp,8
  10e178:	f800283a 	ret

0010e17c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  10e17c:	defffb04 	addi	sp,sp,-20
  10e180:	dfc00415 	stw	ra,16(sp)
  10e184:	df000315 	stw	fp,12(sp)
  10e188:	df000304 	addi	fp,sp,12
  10e18c:	e13ffe15 	stw	r4,-8(fp)
  10e190:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  10e194:	e0bffe17 	ldw	r2,-8(fp)
  10e198:	10000616 	blt	r2,zero,10e1b4 <fstat+0x38>
  10e19c:	e0bffe17 	ldw	r2,-8(fp)
  10e1a0:	10c00324 	muli	r3,r2,12
  10e1a4:	00800474 	movhi	r2,17
  10e1a8:	10851a04 	addi	r2,r2,5224
  10e1ac:	1885883a 	add	r2,r3,r2
  10e1b0:	00000106 	br	10e1b8 <fstat+0x3c>
  10e1b4:	0005883a 	mov	r2,zero
  10e1b8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  10e1bc:	e0bffd17 	ldw	r2,-12(fp)
  10e1c0:	10001026 	beq	r2,zero,10e204 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  10e1c4:	e0bffd17 	ldw	r2,-12(fp)
  10e1c8:	10800017 	ldw	r2,0(r2)
  10e1cc:	10800817 	ldw	r2,32(r2)
  10e1d0:	10000726 	beq	r2,zero,10e1f0 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  10e1d4:	e0bffd17 	ldw	r2,-12(fp)
  10e1d8:	10800017 	ldw	r2,0(r2)
  10e1dc:	10800817 	ldw	r2,32(r2)
  10e1e0:	e17fff17 	ldw	r5,-4(fp)
  10e1e4:	e13ffd17 	ldw	r4,-12(fp)
  10e1e8:	103ee83a 	callr	r2
  10e1ec:	00000a06 	br	10e218 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  10e1f0:	e0bfff17 	ldw	r2,-4(fp)
  10e1f4:	00c80004 	movi	r3,8192
  10e1f8:	10c00115 	stw	r3,4(r2)
      return 0;
  10e1fc:	0005883a 	mov	r2,zero
  10e200:	00000506 	br	10e218 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  10e204:	010e1400 	call	10e140 <alt_get_errno>
  10e208:	1007883a 	mov	r3,r2
  10e20c:	00801444 	movi	r2,81
  10e210:	18800015 	stw	r2,0(r3)
    return -1;
  10e214:	00bfffc4 	movi	r2,-1
  }
}
  10e218:	e037883a 	mov	sp,fp
  10e21c:	dfc00117 	ldw	ra,4(sp)
  10e220:	df000017 	ldw	fp,0(sp)
  10e224:	dec00204 	addi	sp,sp,8
  10e228:	f800283a 	ret

0010e22c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  10e22c:	defffe04 	addi	sp,sp,-8
  10e230:	dfc00115 	stw	ra,4(sp)
  10e234:	df000015 	stw	fp,0(sp)
  10e238:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  10e23c:	d0a00b17 	ldw	r2,-32724(gp)
  10e240:	10000326 	beq	r2,zero,10e250 <alt_get_errno+0x24>
  10e244:	d0a00b17 	ldw	r2,-32724(gp)
  10e248:	103ee83a 	callr	r2
  10e24c:	00000106 	br	10e254 <alt_get_errno+0x28>
  10e250:	d0a41f04 	addi	r2,gp,-28548
}
  10e254:	e037883a 	mov	sp,fp
  10e258:	dfc00117 	ldw	ra,4(sp)
  10e25c:	df000017 	ldw	fp,0(sp)
  10e260:	dec00204 	addi	sp,sp,8
  10e264:	f800283a 	ret

0010e268 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  10e268:	deffed04 	addi	sp,sp,-76
  10e26c:	dfc01215 	stw	ra,72(sp)
  10e270:	df001115 	stw	fp,68(sp)
  10e274:	df001104 	addi	fp,sp,68
  10e278:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  10e27c:	e0bfff17 	ldw	r2,-4(fp)
  10e280:	10000616 	blt	r2,zero,10e29c <isatty+0x34>
  10e284:	e0bfff17 	ldw	r2,-4(fp)
  10e288:	10c00324 	muli	r3,r2,12
  10e28c:	00800474 	movhi	r2,17
  10e290:	10851a04 	addi	r2,r2,5224
  10e294:	1885883a 	add	r2,r3,r2
  10e298:	00000106 	br	10e2a0 <isatty+0x38>
  10e29c:	0005883a 	mov	r2,zero
  10e2a0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  10e2a4:	e0bfef17 	ldw	r2,-68(fp)
  10e2a8:	10000e26 	beq	r2,zero,10e2e4 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  10e2ac:	e0bfef17 	ldw	r2,-68(fp)
  10e2b0:	10800017 	ldw	r2,0(r2)
  10e2b4:	10800817 	ldw	r2,32(r2)
  10e2b8:	1000021e 	bne	r2,zero,10e2c4 <isatty+0x5c>
    {
      return 1;
  10e2bc:	00800044 	movi	r2,1
  10e2c0:	00000d06 	br	10e2f8 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  10e2c4:	e0bff004 	addi	r2,fp,-64
  10e2c8:	100b883a 	mov	r5,r2
  10e2cc:	e13fff17 	ldw	r4,-4(fp)
  10e2d0:	010e17c0 	call	10e17c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  10e2d4:	e0bff117 	ldw	r2,-60(fp)
  10e2d8:	10880020 	cmpeqi	r2,r2,8192
  10e2dc:	10803fcc 	andi	r2,r2,255
  10e2e0:	00000506 	br	10e2f8 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  10e2e4:	010e22c0 	call	10e22c <alt_get_errno>
  10e2e8:	1007883a 	mov	r3,r2
  10e2ec:	00801444 	movi	r2,81
  10e2f0:	18800015 	stw	r2,0(r3)
    return 0;
  10e2f4:	0005883a 	mov	r2,zero
  }
}
  10e2f8:	e037883a 	mov	sp,fp
  10e2fc:	dfc00117 	ldw	ra,4(sp)
  10e300:	df000017 	ldw	fp,0(sp)
  10e304:	dec00204 	addi	sp,sp,8
  10e308:	f800283a 	ret

0010e30c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  10e30c:	defffc04 	addi	sp,sp,-16
  10e310:	df000315 	stw	fp,12(sp)
  10e314:	df000304 	addi	fp,sp,12
  10e318:	e13ffd15 	stw	r4,-12(fp)
  10e31c:	e17ffe15 	stw	r5,-8(fp)
  10e320:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  10e324:	e0fffe17 	ldw	r3,-8(fp)
  10e328:	e0bffd17 	ldw	r2,-12(fp)
  10e32c:	18800c26 	beq	r3,r2,10e360 <alt_load_section+0x54>
  {
    while( to != end )
  10e330:	00000806 	br	10e354 <alt_load_section+0x48>
    {
      *to++ = *from++;
  10e334:	e0bffe17 	ldw	r2,-8(fp)
  10e338:	10c00104 	addi	r3,r2,4
  10e33c:	e0fffe15 	stw	r3,-8(fp)
  10e340:	e0fffd17 	ldw	r3,-12(fp)
  10e344:	19000104 	addi	r4,r3,4
  10e348:	e13ffd15 	stw	r4,-12(fp)
  10e34c:	18c00017 	ldw	r3,0(r3)
  10e350:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  10e354:	e0fffe17 	ldw	r3,-8(fp)
  10e358:	e0bfff17 	ldw	r2,-4(fp)
  10e35c:	18bff51e 	bne	r3,r2,10e334 <__alt_data_end+0xfff0e334>
    {
      *to++ = *from++;
    }
  }
}
  10e360:	0001883a 	nop
  10e364:	e037883a 	mov	sp,fp
  10e368:	df000017 	ldw	fp,0(sp)
  10e36c:	dec00104 	addi	sp,sp,4
  10e370:	f800283a 	ret

0010e374 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  10e374:	defffe04 	addi	sp,sp,-8
  10e378:	dfc00115 	stw	ra,4(sp)
  10e37c:	df000015 	stw	fp,0(sp)
  10e380:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  10e384:	01800474 	movhi	r6,17
  10e388:	3185b904 	addi	r6,r6,5860
  10e38c:	01400474 	movhi	r5,17
  10e390:	2941b104 	addi	r5,r5,1732
  10e394:	01000474 	movhi	r4,17
  10e398:	2105b904 	addi	r4,r4,5860
  10e39c:	010e30c0 	call	10e30c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  10e3a0:	01800434 	movhi	r6,16
  10e3a4:	31809104 	addi	r6,r6,580
  10e3a8:	01400434 	movhi	r5,16
  10e3ac:	29400804 	addi	r5,r5,32
  10e3b0:	01000434 	movhi	r4,16
  10e3b4:	21000804 	addi	r4,r4,32
  10e3b8:	010e30c0 	call	10e30c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  10e3bc:	01800474 	movhi	r6,17
  10e3c0:	3181b104 	addi	r6,r6,1732
  10e3c4:	01400474 	movhi	r5,17
  10e3c8:	2940f504 	addi	r5,r5,980
  10e3cc:	01000474 	movhi	r4,17
  10e3d0:	2100f504 	addi	r4,r4,980
  10e3d4:	010e30c0 	call	10e30c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  10e3d8:	010f4640 	call	10f464 <alt_dcache_flush_all>
  alt_icache_flush_all();
  10e3dc:	010f64c0 	call	10f64c <alt_icache_flush_all>
}
  10e3e0:	0001883a 	nop
  10e3e4:	e037883a 	mov	sp,fp
  10e3e8:	dfc00117 	ldw	ra,4(sp)
  10e3ec:	df000017 	ldw	fp,0(sp)
  10e3f0:	dec00204 	addi	sp,sp,8
  10e3f4:	f800283a 	ret

0010e3f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  10e3f8:	defffe04 	addi	sp,sp,-8
  10e3fc:	dfc00115 	stw	ra,4(sp)
  10e400:	df000015 	stw	fp,0(sp)
  10e404:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  10e408:	d0a00b17 	ldw	r2,-32724(gp)
  10e40c:	10000326 	beq	r2,zero,10e41c <alt_get_errno+0x24>
  10e410:	d0a00b17 	ldw	r2,-32724(gp)
  10e414:	103ee83a 	callr	r2
  10e418:	00000106 	br	10e420 <alt_get_errno+0x28>
  10e41c:	d0a41f04 	addi	r2,gp,-28548
}
  10e420:	e037883a 	mov	sp,fp
  10e424:	dfc00117 	ldw	ra,4(sp)
  10e428:	df000017 	ldw	fp,0(sp)
  10e42c:	dec00204 	addi	sp,sp,8
  10e430:	f800283a 	ret

0010e434 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  10e434:	defff904 	addi	sp,sp,-28
  10e438:	dfc00615 	stw	ra,24(sp)
  10e43c:	df000515 	stw	fp,20(sp)
  10e440:	df000504 	addi	fp,sp,20
  10e444:	e13ffd15 	stw	r4,-12(fp)
  10e448:	e17ffe15 	stw	r5,-8(fp)
  10e44c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  10e450:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  10e454:	e0bffd17 	ldw	r2,-12(fp)
  10e458:	10000616 	blt	r2,zero,10e474 <lseek+0x40>
  10e45c:	e0bffd17 	ldw	r2,-12(fp)
  10e460:	10c00324 	muli	r3,r2,12
  10e464:	00800474 	movhi	r2,17
  10e468:	10851a04 	addi	r2,r2,5224
  10e46c:	1885883a 	add	r2,r3,r2
  10e470:	00000106 	br	10e478 <lseek+0x44>
  10e474:	0005883a 	mov	r2,zero
  10e478:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  10e47c:	e0bffc17 	ldw	r2,-16(fp)
  10e480:	10001026 	beq	r2,zero,10e4c4 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  10e484:	e0bffc17 	ldw	r2,-16(fp)
  10e488:	10800017 	ldw	r2,0(r2)
  10e48c:	10800717 	ldw	r2,28(r2)
  10e490:	10000926 	beq	r2,zero,10e4b8 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  10e494:	e0bffc17 	ldw	r2,-16(fp)
  10e498:	10800017 	ldw	r2,0(r2)
  10e49c:	10800717 	ldw	r2,28(r2)
  10e4a0:	e1bfff17 	ldw	r6,-4(fp)
  10e4a4:	e17ffe17 	ldw	r5,-8(fp)
  10e4a8:	e13ffc17 	ldw	r4,-16(fp)
  10e4ac:	103ee83a 	callr	r2
  10e4b0:	e0bffb15 	stw	r2,-20(fp)
  10e4b4:	00000506 	br	10e4cc <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  10e4b8:	00bfde84 	movi	r2,-134
  10e4bc:	e0bffb15 	stw	r2,-20(fp)
  10e4c0:	00000206 	br	10e4cc <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  10e4c4:	00bfebc4 	movi	r2,-81
  10e4c8:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  10e4cc:	e0bffb17 	ldw	r2,-20(fp)
  10e4d0:	1000070e 	bge	r2,zero,10e4f0 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  10e4d4:	010e3f80 	call	10e3f8 <alt_get_errno>
  10e4d8:	1007883a 	mov	r3,r2
  10e4dc:	e0bffb17 	ldw	r2,-20(fp)
  10e4e0:	0085c83a 	sub	r2,zero,r2
  10e4e4:	18800015 	stw	r2,0(r3)
    rc = -1;
  10e4e8:	00bfffc4 	movi	r2,-1
  10e4ec:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  10e4f0:	e0bffb17 	ldw	r2,-20(fp)
}
  10e4f4:	e037883a 	mov	sp,fp
  10e4f8:	dfc00117 	ldw	ra,4(sp)
  10e4fc:	df000017 	ldw	fp,0(sp)
  10e500:	dec00204 	addi	sp,sp,8
  10e504:	f800283a 	ret

0010e508 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  10e508:	defffd04 	addi	sp,sp,-12
  10e50c:	dfc00215 	stw	ra,8(sp)
  10e510:	df000115 	stw	fp,4(sp)
  10e514:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  10e518:	0009883a 	mov	r4,zero
  10e51c:	010e9b00 	call	10e9b0 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  10e520:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  10e524:	010e9e80 	call	10e9e8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  10e528:	01800474 	movhi	r6,17
  10e52c:	3181ab04 	addi	r6,r6,1708
  10e530:	01400474 	movhi	r5,17
  10e534:	2941ab04 	addi	r5,r5,1708
  10e538:	01000474 	movhi	r4,17
  10e53c:	2101ab04 	addi	r4,r4,1708
  10e540:	010f9e40 	call	10f9e4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  10e544:	010f58c0 	call	10f58c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  10e548:	01000474 	movhi	r4,17
  10e54c:	213d7b04 	addi	r4,r4,-2580
  10e550:	01100400 	call	110040 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  10e554:	d0a42017 	ldw	r2,-28544(gp)
  10e558:	d0e42117 	ldw	r3,-28540(gp)
  10e55c:	d1242217 	ldw	r4,-28536(gp)
  10e560:	200d883a 	mov	r6,r4
  10e564:	180b883a 	mov	r5,r3
  10e568:	1009883a 	mov	r4,r2
  10e56c:	0100bd40 	call	100bd4 <main>
  10e570:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  10e574:	01000044 	movi	r4,1
  10e578:	010e0440 	call	10e044 <close>
  exit (result);
  10e57c:	e13fff17 	ldw	r4,-4(fp)
  10e580:	01100540 	call	110054 <exit>

0010e584 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  10e584:	defffe04 	addi	sp,sp,-8
  10e588:	df000115 	stw	fp,4(sp)
  10e58c:	df000104 	addi	fp,sp,4
  10e590:	e13fff15 	stw	r4,-4(fp)
}
  10e594:	0001883a 	nop
  10e598:	e037883a 	mov	sp,fp
  10e59c:	df000017 	ldw	fp,0(sp)
  10e5a0:	dec00104 	addi	sp,sp,4
  10e5a4:	f800283a 	ret

0010e5a8 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  10e5a8:	defffe04 	addi	sp,sp,-8
  10e5ac:	df000115 	stw	fp,4(sp)
  10e5b0:	df000104 	addi	fp,sp,4
  10e5b4:	e13fff15 	stw	r4,-4(fp)
}
  10e5b8:	0001883a 	nop
  10e5bc:	e037883a 	mov	sp,fp
  10e5c0:	df000017 	ldw	fp,0(sp)
  10e5c4:	dec00104 	addi	sp,sp,4
  10e5c8:	f800283a 	ret

0010e5cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  10e5cc:	defffe04 	addi	sp,sp,-8
  10e5d0:	dfc00115 	stw	ra,4(sp)
  10e5d4:	df000015 	stw	fp,0(sp)
  10e5d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  10e5dc:	d0a00b17 	ldw	r2,-32724(gp)
  10e5e0:	10000326 	beq	r2,zero,10e5f0 <alt_get_errno+0x24>
  10e5e4:	d0a00b17 	ldw	r2,-32724(gp)
  10e5e8:	103ee83a 	callr	r2
  10e5ec:	00000106 	br	10e5f4 <alt_get_errno+0x28>
  10e5f0:	d0a41f04 	addi	r2,gp,-28548
}
  10e5f4:	e037883a 	mov	sp,fp
  10e5f8:	dfc00117 	ldw	ra,4(sp)
  10e5fc:	df000017 	ldw	fp,0(sp)
  10e600:	dec00204 	addi	sp,sp,8
  10e604:	f800283a 	ret

0010e608 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  10e608:	defff904 	addi	sp,sp,-28
  10e60c:	dfc00615 	stw	ra,24(sp)
  10e610:	df000515 	stw	fp,20(sp)
  10e614:	df000504 	addi	fp,sp,20
  10e618:	e13ffd15 	stw	r4,-12(fp)
  10e61c:	e17ffe15 	stw	r5,-8(fp)
  10e620:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  10e624:	e0bffd17 	ldw	r2,-12(fp)
  10e628:	10000616 	blt	r2,zero,10e644 <read+0x3c>
  10e62c:	e0bffd17 	ldw	r2,-12(fp)
  10e630:	10c00324 	muli	r3,r2,12
  10e634:	00800474 	movhi	r2,17
  10e638:	10851a04 	addi	r2,r2,5224
  10e63c:	1885883a 	add	r2,r3,r2
  10e640:	00000106 	br	10e648 <read+0x40>
  10e644:	0005883a 	mov	r2,zero
  10e648:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  10e64c:	e0bffb17 	ldw	r2,-20(fp)
  10e650:	10002226 	beq	r2,zero,10e6dc <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  10e654:	e0bffb17 	ldw	r2,-20(fp)
  10e658:	10800217 	ldw	r2,8(r2)
  10e65c:	108000cc 	andi	r2,r2,3
  10e660:	10800060 	cmpeqi	r2,r2,1
  10e664:	1000181e 	bne	r2,zero,10e6c8 <read+0xc0>
        (fd->dev->read))
  10e668:	e0bffb17 	ldw	r2,-20(fp)
  10e66c:	10800017 	ldw	r2,0(r2)
  10e670:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  10e674:	10001426 	beq	r2,zero,10e6c8 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  10e678:	e0bffb17 	ldw	r2,-20(fp)
  10e67c:	10800017 	ldw	r2,0(r2)
  10e680:	10800517 	ldw	r2,20(r2)
  10e684:	e0ffff17 	ldw	r3,-4(fp)
  10e688:	180d883a 	mov	r6,r3
  10e68c:	e17ffe17 	ldw	r5,-8(fp)
  10e690:	e13ffb17 	ldw	r4,-20(fp)
  10e694:	103ee83a 	callr	r2
  10e698:	e0bffc15 	stw	r2,-16(fp)
  10e69c:	e0bffc17 	ldw	r2,-16(fp)
  10e6a0:	1000070e 	bge	r2,zero,10e6c0 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  10e6a4:	010e5cc0 	call	10e5cc <alt_get_errno>
  10e6a8:	1007883a 	mov	r3,r2
  10e6ac:	e0bffc17 	ldw	r2,-16(fp)
  10e6b0:	0085c83a 	sub	r2,zero,r2
  10e6b4:	18800015 	stw	r2,0(r3)
          return -1;
  10e6b8:	00bfffc4 	movi	r2,-1
  10e6bc:	00000c06 	br	10e6f0 <read+0xe8>
        }
        return rval;
  10e6c0:	e0bffc17 	ldw	r2,-16(fp)
  10e6c4:	00000a06 	br	10e6f0 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  10e6c8:	010e5cc0 	call	10e5cc <alt_get_errno>
  10e6cc:	1007883a 	mov	r3,r2
  10e6d0:	00800344 	movi	r2,13
  10e6d4:	18800015 	stw	r2,0(r3)
  10e6d8:	00000406 	br	10e6ec <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  10e6dc:	010e5cc0 	call	10e5cc <alt_get_errno>
  10e6e0:	1007883a 	mov	r3,r2
  10e6e4:	00801444 	movi	r2,81
  10e6e8:	18800015 	stw	r2,0(r3)
  }
  return -1;
  10e6ec:	00bfffc4 	movi	r2,-1
}
  10e6f0:	e037883a 	mov	sp,fp
  10e6f4:	dfc00117 	ldw	ra,4(sp)
  10e6f8:	df000017 	ldw	fp,0(sp)
  10e6fc:	dec00204 	addi	sp,sp,8
  10e700:	f800283a 	ret

0010e704 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  10e704:	defffe04 	addi	sp,sp,-8
  10e708:	df000115 	stw	fp,4(sp)
  10e70c:	df000104 	addi	fp,sp,4
  10e710:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  10e714:	e0bfff17 	ldw	r2,-4(fp)
  10e718:	108000d0 	cmplti	r2,r2,3
  10e71c:	10000d1e 	bne	r2,zero,10e754 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  10e720:	00800474 	movhi	r2,17
  10e724:	10851a04 	addi	r2,r2,5224
  10e728:	e0ffff17 	ldw	r3,-4(fp)
  10e72c:	18c00324 	muli	r3,r3,12
  10e730:	10c5883a 	add	r2,r2,r3
  10e734:	10800204 	addi	r2,r2,8
  10e738:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  10e73c:	00800474 	movhi	r2,17
  10e740:	10851a04 	addi	r2,r2,5224
  10e744:	e0ffff17 	ldw	r3,-4(fp)
  10e748:	18c00324 	muli	r3,r3,12
  10e74c:	10c5883a 	add	r2,r2,r3
  10e750:	10000015 	stw	zero,0(r2)
  }
}
  10e754:	0001883a 	nop
  10e758:	e037883a 	mov	sp,fp
  10e75c:	df000017 	ldw	fp,0(sp)
  10e760:	dec00104 	addi	sp,sp,4
  10e764:	f800283a 	ret

0010e768 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  10e768:	defff904 	addi	sp,sp,-28
  10e76c:	df000615 	stw	fp,24(sp)
  10e770:	df000604 	addi	fp,sp,24
  10e774:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  10e778:	0005303a 	rdctl	r2,status
  10e77c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  10e780:	e0fffe17 	ldw	r3,-8(fp)
  10e784:	00bfff84 	movi	r2,-2
  10e788:	1884703a 	and	r2,r3,r2
  10e78c:	1001703a 	wrctl	status,r2
  
  return context;
  10e790:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  10e794:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  10e798:	d0a00c17 	ldw	r2,-32720(gp)
  10e79c:	10c000c4 	addi	r3,r2,3
  10e7a0:	00bfff04 	movi	r2,-4
  10e7a4:	1884703a 	and	r2,r3,r2
  10e7a8:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  10e7ac:	d0e00c17 	ldw	r3,-32720(gp)
  10e7b0:	e0bfff17 	ldw	r2,-4(fp)
  10e7b4:	1887883a 	add	r3,r3,r2
  10e7b8:	00800834 	movhi	r2,32
  10e7bc:	10800004 	addi	r2,r2,0
  10e7c0:	10c0062e 	bgeu	r2,r3,10e7dc <sbrk+0x74>
  10e7c4:	e0bffb17 	ldw	r2,-20(fp)
  10e7c8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  10e7cc:	e0bffa17 	ldw	r2,-24(fp)
  10e7d0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  10e7d4:	00bfffc4 	movi	r2,-1
  10e7d8:	00000b06 	br	10e808 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  10e7dc:	d0a00c17 	ldw	r2,-32720(gp)
  10e7e0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  10e7e4:	d0e00c17 	ldw	r3,-32720(gp)
  10e7e8:	e0bfff17 	ldw	r2,-4(fp)
  10e7ec:	1885883a 	add	r2,r3,r2
  10e7f0:	d0a00c15 	stw	r2,-32720(gp)
  10e7f4:	e0bffb17 	ldw	r2,-20(fp)
  10e7f8:	e0bffc15 	stw	r2,-16(fp)
  10e7fc:	e0bffc17 	ldw	r2,-16(fp)
  10e800:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  10e804:	e0bffd17 	ldw	r2,-12(fp)
} 
  10e808:	e037883a 	mov	sp,fp
  10e80c:	df000017 	ldw	fp,0(sp)
  10e810:	dec00104 	addi	sp,sp,4
  10e814:	f800283a 	ret

0010e818 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
  10e818:	defffd04 	addi	sp,sp,-12
  10e81c:	dfc00215 	stw	ra,8(sp)
  10e820:	df000115 	stw	fp,4(sp)
  10e824:	df000104 	addi	fp,sp,4
  10e828:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
  10e82c:	e13fff17 	ldw	r4,-4(fp)
  10e830:	010f30c0 	call	10f30c <alt_busy_sleep>
}
  10e834:	e037883a 	mov	sp,fp
  10e838:	dfc00117 	ldw	ra,4(sp)
  10e83c:	df000017 	ldw	fp,0(sp)
  10e840:	dec00204 	addi	sp,sp,8
  10e844:	f800283a 	ret

0010e848 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  10e848:	defffe04 	addi	sp,sp,-8
  10e84c:	dfc00115 	stw	ra,4(sp)
  10e850:	df000015 	stw	fp,0(sp)
  10e854:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  10e858:	d0a00b17 	ldw	r2,-32724(gp)
  10e85c:	10000326 	beq	r2,zero,10e86c <alt_get_errno+0x24>
  10e860:	d0a00b17 	ldw	r2,-32724(gp)
  10e864:	103ee83a 	callr	r2
  10e868:	00000106 	br	10e870 <alt_get_errno+0x28>
  10e86c:	d0a41f04 	addi	r2,gp,-28548
}
  10e870:	e037883a 	mov	sp,fp
  10e874:	dfc00117 	ldw	ra,4(sp)
  10e878:	df000017 	ldw	fp,0(sp)
  10e87c:	dec00204 	addi	sp,sp,8
  10e880:	f800283a 	ret

0010e884 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  10e884:	defff904 	addi	sp,sp,-28
  10e888:	dfc00615 	stw	ra,24(sp)
  10e88c:	df000515 	stw	fp,20(sp)
  10e890:	df000504 	addi	fp,sp,20
  10e894:	e13ffd15 	stw	r4,-12(fp)
  10e898:	e17ffe15 	stw	r5,-8(fp)
  10e89c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  10e8a0:	e0bffd17 	ldw	r2,-12(fp)
  10e8a4:	10000616 	blt	r2,zero,10e8c0 <write+0x3c>
  10e8a8:	e0bffd17 	ldw	r2,-12(fp)
  10e8ac:	10c00324 	muli	r3,r2,12
  10e8b0:	00800474 	movhi	r2,17
  10e8b4:	10851a04 	addi	r2,r2,5224
  10e8b8:	1885883a 	add	r2,r3,r2
  10e8bc:	00000106 	br	10e8c4 <write+0x40>
  10e8c0:	0005883a 	mov	r2,zero
  10e8c4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  10e8c8:	e0bffb17 	ldw	r2,-20(fp)
  10e8cc:	10002126 	beq	r2,zero,10e954 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  10e8d0:	e0bffb17 	ldw	r2,-20(fp)
  10e8d4:	10800217 	ldw	r2,8(r2)
  10e8d8:	108000cc 	andi	r2,r2,3
  10e8dc:	10001826 	beq	r2,zero,10e940 <write+0xbc>
  10e8e0:	e0bffb17 	ldw	r2,-20(fp)
  10e8e4:	10800017 	ldw	r2,0(r2)
  10e8e8:	10800617 	ldw	r2,24(r2)
  10e8ec:	10001426 	beq	r2,zero,10e940 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  10e8f0:	e0bffb17 	ldw	r2,-20(fp)
  10e8f4:	10800017 	ldw	r2,0(r2)
  10e8f8:	10800617 	ldw	r2,24(r2)
  10e8fc:	e0ffff17 	ldw	r3,-4(fp)
  10e900:	180d883a 	mov	r6,r3
  10e904:	e17ffe17 	ldw	r5,-8(fp)
  10e908:	e13ffb17 	ldw	r4,-20(fp)
  10e90c:	103ee83a 	callr	r2
  10e910:	e0bffc15 	stw	r2,-16(fp)
  10e914:	e0bffc17 	ldw	r2,-16(fp)
  10e918:	1000070e 	bge	r2,zero,10e938 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  10e91c:	010e8480 	call	10e848 <alt_get_errno>
  10e920:	1007883a 	mov	r3,r2
  10e924:	e0bffc17 	ldw	r2,-16(fp)
  10e928:	0085c83a 	sub	r2,zero,r2
  10e92c:	18800015 	stw	r2,0(r3)
        return -1;
  10e930:	00bfffc4 	movi	r2,-1
  10e934:	00000c06 	br	10e968 <write+0xe4>
      }
      return rval;
  10e938:	e0bffc17 	ldw	r2,-16(fp)
  10e93c:	00000a06 	br	10e968 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  10e940:	010e8480 	call	10e848 <alt_get_errno>
  10e944:	1007883a 	mov	r3,r2
  10e948:	00800344 	movi	r2,13
  10e94c:	18800015 	stw	r2,0(r3)
  10e950:	00000406 	br	10e964 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  10e954:	010e8480 	call	10e848 <alt_get_errno>
  10e958:	1007883a 	mov	r3,r2
  10e95c:	00801444 	movi	r2,81
  10e960:	18800015 	stw	r2,0(r3)
  }
  return -1;
  10e964:	00bfffc4 	movi	r2,-1
}
  10e968:	e037883a 	mov	sp,fp
  10e96c:	dfc00117 	ldw	ra,4(sp)
  10e970:	df000017 	ldw	fp,0(sp)
  10e974:	dec00204 	addi	sp,sp,8
  10e978:	f800283a 	ret

0010e97c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  10e97c:	defffd04 	addi	sp,sp,-12
  10e980:	dfc00215 	stw	ra,8(sp)
  10e984:	df000115 	stw	fp,4(sp)
  10e988:	df000104 	addi	fp,sp,4
  10e98c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  10e990:	d1600804 	addi	r5,gp,-32736
  10e994:	e13fff17 	ldw	r4,-4(fp)
  10e998:	010f4e80 	call	10f4e8 <alt_dev_llist_insert>
}
  10e99c:	e037883a 	mov	sp,fp
  10e9a0:	dfc00117 	ldw	ra,4(sp)
  10e9a4:	df000017 	ldw	fp,0(sp)
  10e9a8:	dec00204 	addi	sp,sp,8
  10e9ac:	f800283a 	ret

0010e9b0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  10e9b0:	defffd04 	addi	sp,sp,-12
  10e9b4:	dfc00215 	stw	ra,8(sp)
  10e9b8:	df000115 	stw	fp,4(sp)
  10e9bc:	df000104 	addi	fp,sp,4
  10e9c0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS, nios2_qsys);
  10e9c4:	010fcb40 	call	10fcb4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  10e9c8:	00800044 	movi	r2,1
  10e9cc:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  10e9d0:	0001883a 	nop
  10e9d4:	e037883a 	mov	sp,fp
  10e9d8:	dfc00117 	ldw	ra,4(sp)
  10e9dc:	df000017 	ldw	fp,0(sp)
  10e9e0:	dec00204 	addi	sp,sp,8
  10e9e4:	f800283a 	ret

0010e9e8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  10e9e8:	defffe04 	addi	sp,sp,-8
  10e9ec:	dfc00115 	stw	ra,4(sp)
  10e9f0:	df000015 	stw	fp,0(sp)
  10e9f4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
  10e9f8:	0001883a 	nop
    ALTERA_AVALON_UART_INIT ( UART_0, uart_0);
  10e9fc:	01800044 	movi	r6,1
  10ea00:	000b883a 	mov	r5,zero
  10ea04:	01000474 	movhi	r4,17
  10ea08:	21058404 	addi	r4,r4,5648
  10ea0c:	010eb440 	call	10eb44 <altera_avalon_uart_init>
  10ea10:	01000474 	movhi	r4,17
  10ea14:	21057a04 	addi	r4,r4,5608
  10ea18:	010e97c0 	call	10e97c <alt_dev_reg>
}
  10ea1c:	0001883a 	nop
  10ea20:	e037883a 	mov	sp,fp
  10ea24:	dfc00117 	ldw	ra,4(sp)
  10ea28:	df000017 	ldw	fp,0(sp)
  10ea2c:	dec00204 	addi	sp,sp,8
  10ea30:	f800283a 	ret

0010ea34 <altera_avalon_uart_read_fd>:
 *
 */

int 
altera_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  10ea34:	defffa04 	addi	sp,sp,-24
  10ea38:	dfc00515 	stw	ra,20(sp)
  10ea3c:	df000415 	stw	fp,16(sp)
  10ea40:	df000404 	addi	fp,sp,16
  10ea44:	e13ffd15 	stw	r4,-12(fp)
  10ea48:	e17ffe15 	stw	r5,-8(fp)
  10ea4c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  10ea50:	e0bffd17 	ldw	r2,-12(fp)
  10ea54:	10800017 	ldw	r2,0(r2)
  10ea58:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_read(&dev->state, buffer, space,
  10ea5c:	e0bffc17 	ldw	r2,-16(fp)
  10ea60:	10c00a04 	addi	r3,r2,40
  10ea64:	e0bffd17 	ldw	r2,-12(fp)
  10ea68:	10800217 	ldw	r2,8(r2)
  10ea6c:	100f883a 	mov	r7,r2
  10ea70:	e1bfff17 	ldw	r6,-4(fp)
  10ea74:	e17ffe17 	ldw	r5,-8(fp)
  10ea78:	1809883a 	mov	r4,r3
  10ea7c:	010ef480 	call	10ef48 <altera_avalon_uart_read>
      fd->fd_flags);
}
  10ea80:	e037883a 	mov	sp,fp
  10ea84:	dfc00117 	ldw	ra,4(sp)
  10ea88:	df000017 	ldw	fp,0(sp)
  10ea8c:	dec00204 	addi	sp,sp,8
  10ea90:	f800283a 	ret

0010ea94 <altera_avalon_uart_write_fd>:

int 
altera_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  10ea94:	defffa04 	addi	sp,sp,-24
  10ea98:	dfc00515 	stw	ra,20(sp)
  10ea9c:	df000415 	stw	fp,16(sp)
  10eaa0:	df000404 	addi	fp,sp,16
  10eaa4:	e13ffd15 	stw	r4,-12(fp)
  10eaa8:	e17ffe15 	stw	r5,-8(fp)
  10eaac:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  10eab0:	e0bffd17 	ldw	r2,-12(fp)
  10eab4:	10800017 	ldw	r2,0(r2)
  10eab8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_write(&dev->state, buffer, space,
  10eabc:	e0bffc17 	ldw	r2,-16(fp)
  10eac0:	10c00a04 	addi	r3,r2,40
  10eac4:	e0bffd17 	ldw	r2,-12(fp)
  10eac8:	10800217 	ldw	r2,8(r2)
  10eacc:	100f883a 	mov	r7,r2
  10ead0:	e1bfff17 	ldw	r6,-4(fp)
  10ead4:	e17ffe17 	ldw	r5,-8(fp)
  10ead8:	1809883a 	mov	r4,r3
  10eadc:	010f1600 	call	10f160 <altera_avalon_uart_write>
      fd->fd_flags);
}
  10eae0:	e037883a 	mov	sp,fp
  10eae4:	dfc00117 	ldw	ra,4(sp)
  10eae8:	df000017 	ldw	fp,0(sp)
  10eaec:	dec00204 	addi	sp,sp,8
  10eaf0:	f800283a 	ret

0010eaf4 <altera_avalon_uart_close_fd>:

#endif /* ALTERA_AVALON_UART_USE_IOCTL */

int 
altera_avalon_uart_close_fd(alt_fd* fd)
{
  10eaf4:	defffc04 	addi	sp,sp,-16
  10eaf8:	dfc00315 	stw	ra,12(sp)
  10eafc:	df000215 	stw	fp,8(sp)
  10eb00:	df000204 	addi	fp,sp,8
  10eb04:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  10eb08:	e0bfff17 	ldw	r2,-4(fp)
  10eb0c:	10800017 	ldw	r2,0(r2)
  10eb10:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_uart_close(&dev->state, fd->fd_flags);
  10eb14:	e0bffe17 	ldw	r2,-8(fp)
  10eb18:	10c00a04 	addi	r3,r2,40
  10eb1c:	e0bfff17 	ldw	r2,-4(fp)
  10eb20:	10800217 	ldw	r2,8(r2)
  10eb24:	100b883a 	mov	r5,r2
  10eb28:	1809883a 	mov	r4,r3
  10eb2c:	010eeb80 	call	10eeb8 <altera_avalon_uart_close>
}
  10eb30:	e037883a 	mov	sp,fp
  10eb34:	dfc00117 	ldw	ra,4(sp)
  10eb38:	df000017 	ldw	fp,0(sp)
  10eb3c:	dec00204 	addi	sp,sp,8
  10eb40:	f800283a 	ret

0010eb44 <altera_avalon_uart_init>:
  alt_u32 status);

void 
altera_avalon_uart_init(altera_avalon_uart_state* sp, 
  alt_u32 irq_controller_id,  alt_u32 irq)
{
  10eb44:	defff804 	addi	sp,sp,-32
  10eb48:	dfc00715 	stw	ra,28(sp)
  10eb4c:	df000615 	stw	fp,24(sp)
  10eb50:	df000604 	addi	fp,sp,24
  10eb54:	e13ffd15 	stw	r4,-12(fp)
  10eb58:	e17ffe15 	stw	r5,-8(fp)
  10eb5c:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
  10eb60:	e0bffd17 	ldw	r2,-12(fp)
  10eb64:	10800017 	ldw	r2,0(r2)
  10eb68:	e0bffb15 	stw	r2,-20(fp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  10eb6c:	0005883a 	mov	r2,zero
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  10eb70:	1000041e 	bne	r2,zero,10eb84 <altera_avalon_uart_init+0x40>
  10eb74:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  10eb78:	1000021e 	bne	r2,zero,10eb84 <altera_avalon_uart_init+0x40>
  10eb7c:	0005883a 	mov	r2,zero
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  10eb80:	10000226 	beq	r2,zero,10eb8c <altera_avalon_uart_init+0x48>
  10eb84:	00800044 	movi	r2,1
  10eb88:	00000106 	br	10eb90 <altera_avalon_uart_init+0x4c>
  10eb8c:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  10eb90:	e0bffc15 	stw	r2,-16(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
  10eb94:	e0bffc17 	ldw	r2,-16(fp)
  10eb98:	10000f1e 	bne	r2,zero,10ebd8 <altera_avalon_uart_init+0x94>
  {
    /* enable interrupts at the device */
    sp->ctrl = ALTERA_AVALON_UART_CONTROL_RTS_MSK  |
  10eb9c:	e0bffd17 	ldw	r2,-12(fp)
  10eba0:	00c32004 	movi	r3,3200
  10eba4:	10c00115 	stw	r3,4(r2)
                ALTERA_AVALON_UART_CONTROL_RRDY_MSK |
                ALTERA_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_ALTERA_AVALON_UART_CONTROL(base, sp->ctrl); 
  10eba8:	e0bffb17 	ldw	r2,-20(fp)
  10ebac:	10800304 	addi	r2,r2,12
  10ebb0:	e0fffd17 	ldw	r3,-12(fp)
  10ebb4:	18c00117 	ldw	r3,4(r3)
  10ebb8:	10c00035 	stwio	r3,0(r2)
  
    /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, altera_avalon_uart_irq, sp, 
  10ebbc:	d8000015 	stw	zero,0(sp)
  10ebc0:	e1fffd17 	ldw	r7,-12(fp)
  10ebc4:	01800474 	movhi	r6,17
  10ebc8:	31bafc04 	addi	r6,r6,-5136
  10ebcc:	e17fff17 	ldw	r5,-4(fp)
  10ebd0:	e13ffe17 	ldw	r4,-8(fp)
  10ebd4:	010f6800 	call	10f680 <alt_ic_isr_register>
      0x0);
#else
    alt_irq_register (irq, sp, altera_avalon_uart_irq);
#endif  
  }
}
  10ebd8:	0001883a 	nop
  10ebdc:	e037883a 	mov	sp,fp
  10ebe0:	dfc00117 	ldw	ra,4(sp)
  10ebe4:	df000017 	ldw	fp,0(sp)
  10ebe8:	dec00204 	addi	sp,sp,8
  10ebec:	f800283a 	ret

0010ebf0 <altera_avalon_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_uart_irq(void* context)
#else
static void altera_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
  10ebf0:	defffa04 	addi	sp,sp,-24
  10ebf4:	dfc00515 	stw	ra,20(sp)
  10ebf8:	df000415 	stw	fp,16(sp)
  10ebfc:	df000404 	addi	fp,sp,16
  10ec00:	e13fff15 	stw	r4,-4(fp)
  alt_u32 status;

  altera_avalon_uart_state* sp = (altera_avalon_uart_state*) context;
  10ec04:	e0bfff17 	ldw	r2,-4(fp)
  10ec08:	e0bffc15 	stw	r2,-16(fp)
  void* base               = sp->base;
  10ec0c:	e0bffc17 	ldw	r2,-16(fp)
  10ec10:	10800017 	ldw	r2,0(r2)
  10ec14:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_ALTERA_AVALON_UART_STATUS(base);
  10ec18:	e0bffd17 	ldw	r2,-12(fp)
  10ec1c:	10800204 	addi	r2,r2,8
  10ec20:	10800037 	ldwio	r2,0(r2)
  10ec24:	e0bffe15 	stw	r2,-8(fp)

  /* Clear any error flags set at the device */
  IOWR_ALTERA_AVALON_UART_STATUS(base, 0);
  10ec28:	e0bffd17 	ldw	r2,-12(fp)
  10ec2c:	10800204 	addi	r2,r2,8
  10ec30:	0007883a 	mov	r3,zero
  10ec34:	10c00035 	stwio	r3,0(r2)

  /* Dummy read to ensure IRQ is negated before ISR returns */
  IORD_ALTERA_AVALON_UART_STATUS(base);
  10ec38:	e0bffd17 	ldw	r2,-12(fp)
  10ec3c:	10800204 	addi	r2,r2,8
  10ec40:	10800037 	ldwio	r2,0(r2)
  
  /* process a read irq */
  if (status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
  10ec44:	e0bffe17 	ldw	r2,-8(fp)
  10ec48:	1080200c 	andi	r2,r2,128
  10ec4c:	10000326 	beq	r2,zero,10ec5c <altera_avalon_uart_irq+0x6c>
  {
    altera_avalon_uart_rxirq(sp, status);
  10ec50:	e17ffe17 	ldw	r5,-8(fp)
  10ec54:	e13ffc17 	ldw	r4,-16(fp)
  10ec58:	010ec8c0 	call	10ec8c <altera_avalon_uart_rxirq>
  }

  /* process a write irq */
  if (status & (ALTERA_AVALON_UART_STATUS_TRDY_MSK | 
  10ec5c:	e0bffe17 	ldw	r2,-8(fp)
  10ec60:	1081100c 	andi	r2,r2,1088
  10ec64:	10000326 	beq	r2,zero,10ec74 <altera_avalon_uart_irq+0x84>
                  ALTERA_AVALON_UART_STATUS_DCTS_MSK))
  {
    altera_avalon_uart_txirq(sp, status);
  10ec68:	e17ffe17 	ldw	r5,-8(fp)
  10ec6c:	e13ffc17 	ldw	r4,-16(fp)
  10ec70:	010ed700 	call	10ed70 <altera_avalon_uart_txirq>
  }
  

}
  10ec74:	0001883a 	nop
  10ec78:	e037883a 	mov	sp,fp
  10ec7c:	dfc00117 	ldw	ra,4(sp)
  10ec80:	df000017 	ldw	fp,0(sp)
  10ec84:	dec00204 	addi	sp,sp,8
  10ec88:	f800283a 	ret

0010ec8c <altera_avalon_uart_rxirq>:
 * the receive circular buffer, and sets the apropriate flags to indicate 
 * that there is data ready to be processed.
 */
static void 
altera_avalon_uart_rxirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  10ec8c:	defffc04 	addi	sp,sp,-16
  10ec90:	df000315 	stw	fp,12(sp)
  10ec94:	df000304 	addi	fp,sp,12
  10ec98:	e13ffe15 	stw	r4,-8(fp)
  10ec9c:	e17fff15 	stw	r5,-4(fp)
  alt_u32 next;
  
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
  10eca0:	e0bfff17 	ldw	r2,-4(fp)
  10eca4:	108000cc 	andi	r2,r2,3
  10eca8:	10002c1e 	bne	r2,zero,10ed5c <altera_avalon_uart_rxirq+0xd0>
   * In a multi-threaded environment, set the read event flag to indicate
   * that there is data ready. This is only done if the circular buffer was
   * previously empty.
   */

  if (sp->rx_end == sp->rx_start)
  10ecac:	e0bffe17 	ldw	r2,-8(fp)
  10ecb0:	10800317 	ldw	r2,12(r2)
  10ecb4:	e0bffe17 	ldw	r2,-8(fp)
  10ecb8:	10800217 	ldw	r2,8(r2)
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  10ecbc:	e0bffe17 	ldw	r2,-8(fp)
  10ecc0:	10800317 	ldw	r2,12(r2)
  10ecc4:	10800044 	addi	r2,r2,1
  10ecc8:	10800fcc 	andi	r2,r2,63
  10eccc:	e0bffd15 	stw	r2,-12(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_ALTERA_AVALON_UART_RXDATA(sp->base);
  10ecd0:	e0bffe17 	ldw	r2,-8(fp)
  10ecd4:	10800317 	ldw	r2,12(r2)
  10ecd8:	e0fffe17 	ldw	r3,-8(fp)
  10ecdc:	18c00017 	ldw	r3,0(r3)
  10ece0:	18c00037 	ldwio	r3,0(r3)
  10ece4:	1809883a 	mov	r4,r3
  10ece8:	e0fffe17 	ldw	r3,-8(fp)
  10ecec:	1885883a 	add	r2,r3,r2
  10ecf0:	10800704 	addi	r2,r2,28
  10ecf4:	11000005 	stb	r4,0(r2)

  sp->rx_end = next;
  10ecf8:	e0bffe17 	ldw	r2,-8(fp)
  10ecfc:	e0fffd17 	ldw	r3,-12(fp)
  10ed00:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  10ed04:	e0bffe17 	ldw	r2,-8(fp)
  10ed08:	10800317 	ldw	r2,12(r2)
  10ed0c:	10800044 	addi	r2,r2,1
  10ed10:	10800fcc 	andi	r2,r2,63
  10ed14:	e0bffd15 	stw	r2,-12(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
  10ed18:	e0bffe17 	ldw	r2,-8(fp)
  10ed1c:	10c00217 	ldw	r3,8(r2)
  10ed20:	e0bffd17 	ldw	r2,-12(fp)
  10ed24:	18800e1e 	bne	r3,r2,10ed60 <altera_avalon_uart_rxirq+0xd4>
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  10ed28:	e0bffe17 	ldw	r2,-8(fp)
  10ed2c:	10c00117 	ldw	r3,4(r2)
  10ed30:	00bfdfc4 	movi	r2,-129
  10ed34:	1886703a 	and	r3,r3,r2
  10ed38:	e0bffe17 	ldw	r2,-8(fp)
  10ed3c:	10c00115 	stw	r3,4(r2)
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  10ed40:	e0bffe17 	ldw	r2,-8(fp)
  10ed44:	10800017 	ldw	r2,0(r2)
  10ed48:	10800304 	addi	r2,r2,12
  10ed4c:	e0fffe17 	ldw	r3,-8(fp)
  10ed50:	18c00117 	ldw	r3,4(r3)
  10ed54:	10c00035 	stwio	r3,0(r2)
  10ed58:	00000106 	br	10ed60 <altera_avalon_uart_rxirq+0xd4>
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
                  ALTERA_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  10ed5c:	0001883a 	nop
  if (next == sp->rx_start)
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  }   
}
  10ed60:	e037883a 	mov	sp,fp
  10ed64:	df000017 	ldw	fp,0(sp)
  10ed68:	dec00104 	addi	sp,sp,4
  10ed6c:	f800283a 	ret

0010ed70 <altera_avalon_uart_txirq>:
 * buffer to the device, and sets the apropriate flags to indicate that 
 * there is data ready to be processed.
 */
static void 
altera_avalon_uart_txirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  10ed70:	defffb04 	addi	sp,sp,-20
  10ed74:	df000415 	stw	fp,16(sp)
  10ed78:	df000404 	addi	fp,sp,16
  10ed7c:	e13ffc15 	stw	r4,-16(fp)
  10ed80:	e17ffd15 	stw	r5,-12(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
  10ed84:	e0bffc17 	ldw	r2,-16(fp)
  10ed88:	10c00417 	ldw	r3,16(r2)
  10ed8c:	e0bffc17 	ldw	r2,-16(fp)
  10ed90:	10800517 	ldw	r2,20(r2)
  10ed94:	18803226 	beq	r3,r2,10ee60 <altera_avalon_uart_txirq+0xf0>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  10ed98:	e0bffc17 	ldw	r2,-16(fp)
  10ed9c:	10800617 	ldw	r2,24(r2)
  10eda0:	1080008c 	andi	r2,r2,2
  10eda4:	10000326 	beq	r2,zero,10edb4 <altera_avalon_uart_txirq+0x44>
      (status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  10eda8:	e0bffd17 	ldw	r2,-12(fp)
  10edac:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  10edb0:	10001d26 	beq	r2,zero,10ee28 <altera_avalon_uart_txirq+0xb8>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK))
  10edb4:	e0bffc17 	ldw	r2,-16(fp)
  10edb8:	10800417 	ldw	r2,16(r2)
  10edbc:	e0bffc17 	ldw	r2,-16(fp)
  10edc0:	10800517 	ldw	r2,20(r2)
                       OS_FLAG_SET);
      }

      /* Write the data to the device */

      IOWR_ALTERA_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
  10edc4:	e0bffc17 	ldw	r2,-16(fp)
  10edc8:	10800017 	ldw	r2,0(r2)
  10edcc:	10800104 	addi	r2,r2,4
  10edd0:	e0fffc17 	ldw	r3,-16(fp)
  10edd4:	18c00417 	ldw	r3,16(r3)
  10edd8:	e13ffc17 	ldw	r4,-16(fp)
  10eddc:	20c7883a 	add	r3,r4,r3
  10ede0:	18c01704 	addi	r3,r3,92
  10ede4:	18c00003 	ldbu	r3,0(r3)
  10ede8:	18c03fcc 	andi	r3,r3,255
  10edec:	10c00035 	stwio	r3,0(r2)

      sp->tx_start = (++sp->tx_start) & ALT_AVALON_UART_BUF_MSK;
  10edf0:	e0bffc17 	ldw	r2,-16(fp)
  10edf4:	10800417 	ldw	r2,16(r2)
  10edf8:	10800044 	addi	r2,r2,1
  10edfc:	e0fffc17 	ldw	r3,-16(fp)
  10ee00:	18800415 	stw	r2,16(r3)
  10ee04:	10c00fcc 	andi	r3,r2,63
  10ee08:	e0bffc17 	ldw	r2,-16(fp)
  10ee0c:	10c00415 	stw	r3,16(r2)
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  10ee10:	e0bffc17 	ldw	r2,-16(fp)
  10ee14:	10800117 	ldw	r2,4(r2)
  10ee18:	10c01014 	ori	r3,r2,64
  10ee1c:	e0bffc17 	ldw	r2,-16(fp)
  10ee20:	10c00115 	stw	r3,4(r2)
  10ee24:	00000e06 	br	10ee60 <altera_avalon_uart_txirq+0xf0>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_ALTERA_AVALON_UART_STATUS(sp->base); 
  10ee28:	e0bffc17 	ldw	r2,-16(fp)
  10ee2c:	10800017 	ldw	r2,0(r2)
  10ee30:	10800204 	addi	r2,r2,8
  10ee34:	10800037 	ldwio	r2,0(r2)
  10ee38:	e0bffd15 	stw	r2,-12(fp)

      if (!(status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  10ee3c:	e0bffd17 	ldw	r2,-12(fp)
  10ee40:	1082000c 	andi	r2,r2,2048
  10ee44:	1000061e 	bne	r2,zero,10ee60 <altera_avalon_uart_txirq+0xf0>
      {
        sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  10ee48:	e0bffc17 	ldw	r2,-16(fp)
  10ee4c:	10c00117 	ldw	r3,4(r2)
  10ee50:	00bfefc4 	movi	r2,-65
  10ee54:	1886703a 	and	r3,r3,r2
  10ee58:	e0bffc17 	ldw	r2,-16(fp)
  10ee5c:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
  10ee60:	e0bffc17 	ldw	r2,-16(fp)
  10ee64:	10c00417 	ldw	r3,16(r2)
  10ee68:	e0bffc17 	ldw	r2,-16(fp)
  10ee6c:	10800517 	ldw	r2,20(r2)
  10ee70:	1880061e 	bne	r3,r2,10ee8c <altera_avalon_uart_txirq+0x11c>
  {
    sp->ctrl &= ~(ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  10ee74:	e0bffc17 	ldw	r2,-16(fp)
  10ee78:	10c00117 	ldw	r3,4(r2)
  10ee7c:	00beefc4 	movi	r2,-1089
  10ee80:	1886703a 	and	r3,r3,r2
  10ee84:	e0bffc17 	ldw	r2,-16(fp)
  10ee88:	10c00115 	stw	r3,4(r2)
                    ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  10ee8c:	e0bffc17 	ldw	r2,-16(fp)
  10ee90:	10800017 	ldw	r2,0(r2)
  10ee94:	10800304 	addi	r2,r2,12
  10ee98:	e0fffc17 	ldw	r3,-16(fp)
  10ee9c:	18c00117 	ldw	r3,4(r3)
  10eea0:	10c00035 	stwio	r3,0(r2)
}
  10eea4:	0001883a 	nop
  10eea8:	e037883a 	mov	sp,fp
  10eeac:	df000017 	ldw	fp,0(sp)
  10eeb0:	dec00104 	addi	sp,sp,4
  10eeb4:	f800283a 	ret

0010eeb8 <altera_avalon_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  10eeb8:	defffd04 	addi	sp,sp,-12
  10eebc:	df000215 	stw	fp,8(sp)
  10eec0:	df000204 	addi	fp,sp,8
  10eec4:	e13ffe15 	stw	r4,-8(fp)
  10eec8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  10eecc:	00000506 	br	10eee4 <altera_avalon_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  10eed0:	e0bfff17 	ldw	r2,-4(fp)
  10eed4:	1090000c 	andi	r2,r2,16384
  10eed8:	10000226 	beq	r2,zero,10eee4 <altera_avalon_uart_close+0x2c>
      return -EWOULDBLOCK; 
  10eedc:	00bffd44 	movi	r2,-11
  10eee0:	00000606 	br	10eefc <altera_avalon_uart_close+0x44>
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  10eee4:	e0bffe17 	ldw	r2,-8(fp)
  10eee8:	10c00417 	ldw	r3,16(r2)
  10eeec:	e0bffe17 	ldw	r2,-8(fp)
  10eef0:	10800517 	ldw	r2,20(r2)
  10eef4:	18bff61e 	bne	r3,r2,10eed0 <__alt_data_end+0xfff0eed0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  10eef8:	0005883a 	mov	r2,zero
}
  10eefc:	e037883a 	mov	sp,fp
  10ef00:	df000017 	ldw	fp,0(sp)
  10ef04:	dec00104 	addi	sp,sp,4
  10ef08:	f800283a 	ret

0010ef0c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  10ef0c:	defffe04 	addi	sp,sp,-8
  10ef10:	dfc00115 	stw	ra,4(sp)
  10ef14:	df000015 	stw	fp,0(sp)
  10ef18:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  10ef1c:	d0a00b17 	ldw	r2,-32724(gp)
  10ef20:	10000326 	beq	r2,zero,10ef30 <alt_get_errno+0x24>
  10ef24:	d0a00b17 	ldw	r2,-32724(gp)
  10ef28:	103ee83a 	callr	r2
  10ef2c:	00000106 	br	10ef34 <alt_get_errno+0x28>
  10ef30:	d0a41f04 	addi	r2,gp,-28548
}
  10ef34:	e037883a 	mov	sp,fp
  10ef38:	dfc00117 	ldw	ra,4(sp)
  10ef3c:	df000017 	ldw	fp,0(sp)
  10ef40:	dec00204 	addi	sp,sp,8
  10ef44:	f800283a 	ret

0010ef48 <altera_avalon_uart_read>:
 */

int 
altera_avalon_uart_read(altera_avalon_uart_state* sp, char* ptr, int len,
  int flags)
{
  10ef48:	defff204 	addi	sp,sp,-56
  10ef4c:	dfc00d15 	stw	ra,52(sp)
  10ef50:	df000c15 	stw	fp,48(sp)
  10ef54:	df000c04 	addi	fp,sp,48
  10ef58:	e13ffc15 	stw	r4,-16(fp)
  10ef5c:	e17ffd15 	stw	r5,-12(fp)
  10ef60:	e1bffe15 	stw	r6,-8(fp)
  10ef64:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
  alt_u8          read_would_block = 0;
  10ef68:	e03ff405 	stb	zero,-48(fp)
  int             count = 0;
  10ef6c:	e03ff515 	stw	zero,-44(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
  10ef70:	e0bfff17 	ldw	r2,-4(fp)
  10ef74:	1090000c 	andi	r2,r2,16384
  10ef78:	1005003a 	cmpeq	r2,r2,zero
  10ef7c:	10803fcc 	andi	r2,r2,255
  10ef80:	e0bff615 	stw	r2,-40(fp)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  10ef84:	00001306 	br	10efd4 <altera_avalon_uart_read+0x8c>
    {
      count++;
  10ef88:	e0bff517 	ldw	r2,-44(fp)
  10ef8c:	10800044 	addi	r2,r2,1
  10ef90:	e0bff515 	stw	r2,-44(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
  10ef94:	e0bffd17 	ldw	r2,-12(fp)
  10ef98:	10c00044 	addi	r3,r2,1
  10ef9c:	e0fffd15 	stw	r3,-12(fp)
  10efa0:	e0fffc17 	ldw	r3,-16(fp)
  10efa4:	18c00217 	ldw	r3,8(r3)
  10efa8:	e13ffc17 	ldw	r4,-16(fp)
  10efac:	20c7883a 	add	r3,r4,r3
  10efb0:	18c00704 	addi	r3,r3,28
  10efb4:	18c00003 	ldbu	r3,0(r3)
  10efb8:	10c00005 	stb	r3,0(r2)
      
      sp->rx_start = (sp->rx_start+1) & ALT_AVALON_UART_BUF_MSK;
  10efbc:	e0bffc17 	ldw	r2,-16(fp)
  10efc0:	10800217 	ldw	r2,8(r2)
  10efc4:	10800044 	addi	r2,r2,1
  10efc8:	10c00fcc 	andi	r3,r2,63
  10efcc:	e0bffc17 	ldw	r2,-16(fp)
  10efd0:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  10efd4:	e0fff517 	ldw	r3,-44(fp)
  10efd8:	e0bffe17 	ldw	r2,-8(fp)
  10efdc:	1880050e 	bge	r3,r2,10eff4 <altera_avalon_uart_read+0xac>
  10efe0:	e0bffc17 	ldw	r2,-16(fp)
  10efe4:	10c00217 	ldw	r3,8(r2)
  10efe8:	e0bffc17 	ldw	r2,-16(fp)
  10efec:	10800317 	ldw	r2,12(r2)
  10eff0:	18bfe51e 	bne	r3,r2,10ef88 <__alt_data_end+0xfff0ef88>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
  10eff4:	e0bff517 	ldw	r2,-44(fp)
  10eff8:	1000251e 	bne	r2,zero,10f090 <altera_avalon_uart_read+0x148>
  10effc:	e0bffc17 	ldw	r2,-16(fp)
  10f000:	10c00217 	ldw	r3,8(r2)
  10f004:	e0bffc17 	ldw	r2,-16(fp)
  10f008:	10800317 	ldw	r2,12(r2)
  10f00c:	1880201e 	bne	r3,r2,10f090 <altera_avalon_uart_read+0x148>
    {
      if (!block)
  10f010:	e0bff617 	ldw	r2,-40(fp)
  10f014:	1000071e 	bne	r2,zero,10f034 <altera_avalon_uart_read+0xec>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
  10f018:	010ef0c0 	call	10ef0c <alt_get_errno>
  10f01c:	1007883a 	mov	r3,r2
  10f020:	008002c4 	movi	r2,11
  10f024:	18800015 	stw	r2,0(r3)
        read_would_block = 1;
  10f028:	00800044 	movi	r2,1
  10f02c:	e0bff405 	stb	r2,-48(fp)
        break;
  10f030:	00001b06 	br	10f0a0 <altera_avalon_uart_read+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  10f034:	0005303a 	rdctl	r2,status
  10f038:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  10f03c:	e0fff917 	ldw	r3,-28(fp)
  10f040:	00bfff84 	movi	r2,-2
  10f044:	1884703a 	and	r2,r3,r2
  10f048:	1001703a 	wrctl	status,r2
  
  return context;
  10f04c:	e0bff917 	ldw	r2,-28(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
  10f050:	e0bff815 	stw	r2,-32(fp)
       sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  10f054:	e0bffc17 	ldw	r2,-16(fp)
  10f058:	10800117 	ldw	r2,4(r2)
  10f05c:	10c02014 	ori	r3,r2,128
  10f060:	e0bffc17 	ldw	r2,-16(fp)
  10f064:	10c00115 	stw	r3,4(r2)
       IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  10f068:	e0bffc17 	ldw	r2,-16(fp)
  10f06c:	10800017 	ldw	r2,0(r2)
  10f070:	10800304 	addi	r2,r2,12
  10f074:	e0fffc17 	ldw	r3,-16(fp)
  10f078:	18c00117 	ldw	r3,4(r3)
  10f07c:	10c00035 	stwio	r3,0(r2)
  10f080:	e0bff817 	ldw	r2,-32(fp)
  10f084:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  10f088:	e0bffa17 	ldw	r2,-24(fp)
  10f08c:	1001703a 	wrctl	status,r2
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
  10f090:	e0bff517 	ldw	r2,-44(fp)
  10f094:	1000021e 	bne	r2,zero,10f0a0 <altera_avalon_uart_read+0x158>
  10f098:	e0bffe17 	ldw	r2,-8(fp)
  10f09c:	103fcd1e 	bne	r2,zero,10efd4 <__alt_data_end+0xfff0efd4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  10f0a0:	0005303a 	rdctl	r2,status
  10f0a4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  10f0a8:	e0fffb17 	ldw	r3,-20(fp)
  10f0ac:	00bfff84 	movi	r2,-2
  10f0b0:	1884703a 	and	r2,r3,r2
  10f0b4:	1001703a 	wrctl	status,r2
  
  return context;
  10f0b8:	e0bffb17 	ldw	r2,-20(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
  10f0bc:	e0bff815 	stw	r2,-32(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  10f0c0:	e0bffc17 	ldw	r2,-16(fp)
  10f0c4:	10800117 	ldw	r2,4(r2)
  10f0c8:	10c02014 	ori	r3,r2,128
  10f0cc:	e0bffc17 	ldw	r2,-16(fp)
  10f0d0:	10c00115 	stw	r3,4(r2)
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  10f0d4:	e0bffc17 	ldw	r2,-16(fp)
  10f0d8:	10800017 	ldw	r2,0(r2)
  10f0dc:	10800304 	addi	r2,r2,12
  10f0e0:	e0fffc17 	ldw	r3,-16(fp)
  10f0e4:	18c00117 	ldw	r3,4(r3)
  10f0e8:	10c00035 	stwio	r3,0(r2)
  10f0ec:	e0bff817 	ldw	r2,-32(fp)
  10f0f0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  10f0f4:	e0bff717 	ldw	r2,-36(fp)
  10f0f8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */
  if(read_would_block) {
  10f0fc:	e0bff403 	ldbu	r2,-48(fp)
  10f100:	10000226 	beq	r2,zero,10f10c <altera_avalon_uart_read+0x1c4>
    return -EWOULDBLOCK;
  10f104:	00bffd44 	movi	r2,-11
  10f108:	00000106 	br	10f110 <altera_avalon_uart_read+0x1c8>
  }
  else {
    return count;
  10f10c:	e0bff517 	ldw	r2,-44(fp)
  }
}
  10f110:	e037883a 	mov	sp,fp
  10f114:	dfc00117 	ldw	ra,4(sp)
  10f118:	df000017 	ldw	fp,0(sp)
  10f11c:	dec00204 	addi	sp,sp,8
  10f120:	f800283a 	ret

0010f124 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  10f124:	defffe04 	addi	sp,sp,-8
  10f128:	dfc00115 	stw	ra,4(sp)
  10f12c:	df000015 	stw	fp,0(sp)
  10f130:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  10f134:	d0a00b17 	ldw	r2,-32724(gp)
  10f138:	10000326 	beq	r2,zero,10f148 <alt_get_errno+0x24>
  10f13c:	d0a00b17 	ldw	r2,-32724(gp)
  10f140:	103ee83a 	callr	r2
  10f144:	00000106 	br	10f14c <alt_get_errno+0x28>
  10f148:	d0a41f04 	addi	r2,gp,-28548
}
  10f14c:	e037883a 	mov	sp,fp
  10f150:	dfc00117 	ldw	ra,4(sp)
  10f154:	df000017 	ldw	fp,0(sp)
  10f158:	dec00204 	addi	sp,sp,8
  10f15c:	f800283a 	ret

0010f160 <altera_avalon_uart_write>:
 */

int
altera_avalon_uart_write(altera_avalon_uart_state* sp, const char* ptr, int len,
  int flags)
{
  10f160:	defff204 	addi	sp,sp,-56
  10f164:	dfc00d15 	stw	ra,52(sp)
  10f168:	df000c15 	stw	fp,48(sp)
  10f16c:	df000c04 	addi	fp,sp,48
  10f170:	e13ffc15 	stw	r4,-16(fp)
  10f174:	e17ffd15 	stw	r5,-12(fp)
  10f178:	e1bffe15 	stw	r6,-8(fp)
  10f17c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int             count = len;
  10f180:	e0bffe17 	ldw	r2,-8(fp)
  10f184:	e0bff415 	stw	r2,-48(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
  10f188:	e0bfff17 	ldw	r2,-4(fp)
  10f18c:	1090000c 	andi	r2,r2,16384
  10f190:	e0bff515 	stw	r2,-44(fp)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  10f194:	00003c06 	br	10f288 <altera_avalon_uart_write+0x128>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  10f198:	e0bffc17 	ldw	r2,-16(fp)
  10f19c:	10800517 	ldw	r2,20(r2)
  10f1a0:	10800044 	addi	r2,r2,1
  10f1a4:	10800fcc 	andi	r2,r2,63
  10f1a8:	e0bff715 	stw	r2,-36(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
  10f1ac:	e0bffc17 	ldw	r2,-16(fp)
  10f1b0:	10c00417 	ldw	r3,16(r2)
  10f1b4:	e0bff717 	ldw	r2,-36(fp)
  10f1b8:	1880221e 	bne	r3,r2,10f244 <altera_avalon_uart_write+0xe4>
    {
      if (no_block)
  10f1bc:	e0bff517 	ldw	r2,-44(fp)
  10f1c0:	10000526 	beq	r2,zero,10f1d8 <altera_avalon_uart_write+0x78>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
  10f1c4:	010f1240 	call	10f124 <alt_get_errno>
  10f1c8:	1007883a 	mov	r3,r2
  10f1cc:	008002c4 	movi	r2,11
  10f1d0:	18800015 	stw	r2,0(r3)
        break;
  10f1d4:	00002e06 	br	10f290 <altera_avalon_uart_write+0x130>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  10f1d8:	0005303a 	rdctl	r2,status
  10f1dc:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  10f1e0:	e0fff917 	ldw	r3,-28(fp)
  10f1e4:	00bfff84 	movi	r2,-2
  10f1e8:	1884703a 	and	r2,r3,r2
  10f1ec:	1001703a 	wrctl	status,r2
  
  return context;
  10f1f0:	e0bff917 	ldw	r2,-28(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
  10f1f4:	e0bff815 	stw	r2,-32(fp)
        sp->ctrl |= (ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  10f1f8:	e0bffc17 	ldw	r2,-16(fp)
  10f1fc:	10800117 	ldw	r2,4(r2)
  10f200:	10c11014 	ori	r3,r2,1088
  10f204:	e0bffc17 	ldw	r2,-16(fp)
  10f208:	10c00115 	stw	r3,4(r2)
                        ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  10f20c:	e0bffc17 	ldw	r2,-16(fp)
  10f210:	10800017 	ldw	r2,0(r2)
  10f214:	10800304 	addi	r2,r2,12
  10f218:	e0fffc17 	ldw	r3,-16(fp)
  10f21c:	18c00117 	ldw	r3,4(r3)
  10f220:	10c00035 	stwio	r3,0(r2)
  10f224:	e0bff817 	ldw	r2,-32(fp)
  10f228:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  10f22c:	e0bff617 	ldw	r2,-40(fp)
  10f230:	1001703a 	wrctl	status,r2
          ALT_FLAG_PEND (sp->events, 
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
  10f234:	e0bffc17 	ldw	r2,-16(fp)
  10f238:	10c00417 	ldw	r3,16(r2)
  10f23c:	e0bff717 	ldw	r2,-36(fp)
  10f240:	18bffc26 	beq	r3,r2,10f234 <__alt_data_end+0xfff0f234>
      }
    }

    count--;
  10f244:	e0bff417 	ldw	r2,-48(fp)
  10f248:	10bfffc4 	addi	r2,r2,-1
  10f24c:	e0bff415 	stw	r2,-48(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
  10f250:	e0bffc17 	ldw	r2,-16(fp)
  10f254:	10c00517 	ldw	r3,20(r2)
  10f258:	e0bffd17 	ldw	r2,-12(fp)
  10f25c:	11000044 	addi	r4,r2,1
  10f260:	e13ffd15 	stw	r4,-12(fp)
  10f264:	10800003 	ldbu	r2,0(r2)
  10f268:	1009883a 	mov	r4,r2
  10f26c:	e0bffc17 	ldw	r2,-16(fp)
  10f270:	10c5883a 	add	r2,r2,r3
  10f274:	10801704 	addi	r2,r2,92
  10f278:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
  10f27c:	e0bffc17 	ldw	r2,-16(fp)
  10f280:	e0fff717 	ldw	r3,-36(fp)
  10f284:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  10f288:	e0bff417 	ldw	r2,-48(fp)
  10f28c:	103fc21e 	bne	r2,zero,10f198 <__alt_data_end+0xfff0f198>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  10f290:	0005303a 	rdctl	r2,status
  10f294:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  10f298:	e0fffb17 	ldw	r3,-20(fp)
  10f29c:	00bfff84 	movi	r2,-2
  10f2a0:	1884703a 	and	r2,r3,r2
  10f2a4:	1001703a 	wrctl	status,r2
  
  return context;
  10f2a8:	e0bffb17 	ldw	r2,-20(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
  10f2ac:	e0bff815 	stw	r2,-32(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  10f2b0:	e0bffc17 	ldw	r2,-16(fp)
  10f2b4:	10800117 	ldw	r2,4(r2)
  10f2b8:	10c11014 	ori	r3,r2,1088
  10f2bc:	e0bffc17 	ldw	r2,-16(fp)
  10f2c0:	10c00115 	stw	r3,4(r2)
                 ALTERA_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  10f2c4:	e0bffc17 	ldw	r2,-16(fp)
  10f2c8:	10800017 	ldw	r2,0(r2)
  10f2cc:	10800304 	addi	r2,r2,12
  10f2d0:	e0fffc17 	ldw	r3,-16(fp)
  10f2d4:	18c00117 	ldw	r3,4(r3)
  10f2d8:	10c00035 	stwio	r3,0(r2)
  10f2dc:	e0bff817 	ldw	r2,-32(fp)
  10f2e0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  10f2e4:	e0bffa17 	ldw	r2,-24(fp)
  10f2e8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
  10f2ec:	e0fffe17 	ldw	r3,-8(fp)
  10f2f0:	e0bff417 	ldw	r2,-48(fp)
  10f2f4:	1885c83a 	sub	r2,r3,r2
}
  10f2f8:	e037883a 	mov	sp,fp
  10f2fc:	dfc00117 	ldw	ra,4(sp)
  10f300:	df000017 	ldw	fp,0(sp)
  10f304:	dec00204 	addi	sp,sp,8
  10f308:	f800283a 	ret

0010f30c <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
  10f30c:	defffa04 	addi	sp,sp,-24
  10f310:	dfc00515 	stw	ra,20(sp)
  10f314:	df000415 	stw	fp,16(sp)
  10f318:	df000404 	addi	fp,sp,16
  10f31c:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
  10f320:	008000c4 	movi	r2,3
  10f324:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
  10f328:	e0fffd17 	ldw	r3,-12(fp)
  10f32c:	008003f4 	movhi	r2,15
  10f330:	10909004 	addi	r2,r2,16960
  10f334:	1885383a 	mul	r2,r3,r2
  10f338:	100b883a 	mov	r5,r2
  10f33c:	0100bef4 	movhi	r4,763
  10f340:	213c2004 	addi	r4,r4,-3968
  10f344:	0100ee40 	call	100ee4 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  10f348:	100b883a 	mov	r5,r2
  10f34c:	01200034 	movhi	r4,32768
  10f350:	213fffc4 	addi	r4,r4,-1
  10f354:	0100ee40 	call	100ee4 <__udivsi3>
  10f358:	100b883a 	mov	r5,r2
  10f35c:	e13fff17 	ldw	r4,-4(fp)
  10f360:	0100ee40 	call	100ee4 <__udivsi3>
  10f364:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  10f368:	e0bffe17 	ldw	r2,-8(fp)
  10f36c:	10002a26 	beq	r2,zero,10f418 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
  10f370:	e03ffc15 	stw	zero,-16(fp)
  10f374:	00001706 	br	10f3d4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
  10f378:	00a00034 	movhi	r2,32768
  10f37c:	10bfffc4 	addi	r2,r2,-1
  10f380:	10bfffc4 	addi	r2,r2,-1
  10f384:	103ffe1e 	bne	r2,zero,10f380 <__alt_data_end+0xfff0f380>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
  10f388:	e0fffd17 	ldw	r3,-12(fp)
  10f38c:	008003f4 	movhi	r2,15
  10f390:	10909004 	addi	r2,r2,16960
  10f394:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
  10f398:	100b883a 	mov	r5,r2
  10f39c:	0100bef4 	movhi	r4,763
  10f3a0:	213c2004 	addi	r4,r4,-3968
  10f3a4:	0100ee40 	call	100ee4 <__udivsi3>
  10f3a8:	100b883a 	mov	r5,r2
  10f3ac:	01200034 	movhi	r4,32768
  10f3b0:	213fffc4 	addi	r4,r4,-1
  10f3b4:	0100ee40 	call	100ee4 <__udivsi3>
  10f3b8:	1007883a 	mov	r3,r2
  10f3bc:	e0bfff17 	ldw	r2,-4(fp)
  10f3c0:	10c5c83a 	sub	r2,r2,r3
  10f3c4:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
  10f3c8:	e0bffc17 	ldw	r2,-16(fp)
  10f3cc:	10800044 	addi	r2,r2,1
  10f3d0:	e0bffc15 	stw	r2,-16(fp)
  10f3d4:	e0fffc17 	ldw	r3,-16(fp)
  10f3d8:	e0bffe17 	ldw	r2,-8(fp)
  10f3dc:	18bfe616 	blt	r3,r2,10f378 <__alt_data_end+0xfff0f378>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  10f3e0:	e0fffd17 	ldw	r3,-12(fp)
  10f3e4:	008003f4 	movhi	r2,15
  10f3e8:	10909004 	addi	r2,r2,16960
  10f3ec:	1885383a 	mul	r2,r3,r2
  10f3f0:	100b883a 	mov	r5,r2
  10f3f4:	0100bef4 	movhi	r4,763
  10f3f8:	213c2004 	addi	r4,r4,-3968
  10f3fc:	0100ee40 	call	100ee4 <__udivsi3>
  10f400:	1007883a 	mov	r3,r2
  10f404:	e0bfff17 	ldw	r2,-4(fp)
  10f408:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  10f40c:	10bfffc4 	addi	r2,r2,-1
  10f410:	103ffe1e 	bne	r2,zero,10f40c <__alt_data_end+0xfff0f40c>
  10f414:	00000d06 	br	10f44c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  10f418:	e0fffd17 	ldw	r3,-12(fp)
  10f41c:	008003f4 	movhi	r2,15
  10f420:	10909004 	addi	r2,r2,16960
  10f424:	1885383a 	mul	r2,r3,r2
  10f428:	100b883a 	mov	r5,r2
  10f42c:	0100bef4 	movhi	r4,763
  10f430:	213c2004 	addi	r4,r4,-3968
  10f434:	0100ee40 	call	100ee4 <__udivsi3>
  10f438:	1007883a 	mov	r3,r2
  10f43c:	e0bfff17 	ldw	r2,-4(fp)
  10f440:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  10f444:	10bfffc4 	addi	r2,r2,-1
  10f448:	00bffe16 	blt	zero,r2,10f444 <__alt_data_end+0xfff0f444>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
  10f44c:	0005883a 	mov	r2,zero
}
  10f450:	e037883a 	mov	sp,fp
  10f454:	dfc00117 	ldw	ra,4(sp)
  10f458:	df000017 	ldw	fp,0(sp)
  10f45c:	dec00204 	addi	sp,sp,8
  10f460:	f800283a 	ret

0010f464 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  10f464:	defffe04 	addi	sp,sp,-8
  10f468:	df000115 	stw	fp,4(sp)
  10f46c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  10f470:	e03fff15 	stw	zero,-4(fp)
  10f474:	00000506 	br	10f48c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  10f478:	e0bfff17 	ldw	r2,-4(fp)
  10f47c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  10f480:	e0bfff17 	ldw	r2,-4(fp)
  10f484:	10800804 	addi	r2,r2,32
  10f488:	e0bfff15 	stw	r2,-4(fp)
  10f48c:	e0bfff17 	ldw	r2,-4(fp)
  10f490:	10820030 	cmpltui	r2,r2,2048
  10f494:	103ff81e 	bne	r2,zero,10f478 <__alt_data_end+0xfff0f478>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  10f498:	0001883a 	nop
  10f49c:	e037883a 	mov	sp,fp
  10f4a0:	df000017 	ldw	fp,0(sp)
  10f4a4:	dec00104 	addi	sp,sp,4
  10f4a8:	f800283a 	ret

0010f4ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  10f4ac:	defffe04 	addi	sp,sp,-8
  10f4b0:	dfc00115 	stw	ra,4(sp)
  10f4b4:	df000015 	stw	fp,0(sp)
  10f4b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  10f4bc:	d0a00b17 	ldw	r2,-32724(gp)
  10f4c0:	10000326 	beq	r2,zero,10f4d0 <alt_get_errno+0x24>
  10f4c4:	d0a00b17 	ldw	r2,-32724(gp)
  10f4c8:	103ee83a 	callr	r2
  10f4cc:	00000106 	br	10f4d4 <alt_get_errno+0x28>
  10f4d0:	d0a41f04 	addi	r2,gp,-28548
}
  10f4d4:	e037883a 	mov	sp,fp
  10f4d8:	dfc00117 	ldw	ra,4(sp)
  10f4dc:	df000017 	ldw	fp,0(sp)
  10f4e0:	dec00204 	addi	sp,sp,8
  10f4e4:	f800283a 	ret

0010f4e8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  10f4e8:	defffa04 	addi	sp,sp,-24
  10f4ec:	dfc00515 	stw	ra,20(sp)
  10f4f0:	df000415 	stw	fp,16(sp)
  10f4f4:	df000404 	addi	fp,sp,16
  10f4f8:	e13ffe15 	stw	r4,-8(fp)
  10f4fc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  10f500:	e0bffe17 	ldw	r2,-8(fp)
  10f504:	10000326 	beq	r2,zero,10f514 <alt_dev_llist_insert+0x2c>
  10f508:	e0bffe17 	ldw	r2,-8(fp)
  10f50c:	10800217 	ldw	r2,8(r2)
  10f510:	1000061e 	bne	r2,zero,10f52c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  10f514:	010f4ac0 	call	10f4ac <alt_get_errno>
  10f518:	1007883a 	mov	r3,r2
  10f51c:	00800584 	movi	r2,22
  10f520:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  10f524:	00bffa84 	movi	r2,-22
  10f528:	00001306 	br	10f578 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  10f52c:	e0bffe17 	ldw	r2,-8(fp)
  10f530:	e0ffff17 	ldw	r3,-4(fp)
  10f534:	e0fffc15 	stw	r3,-16(fp)
  10f538:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  10f53c:	e0bffd17 	ldw	r2,-12(fp)
  10f540:	e0fffc17 	ldw	r3,-16(fp)
  10f544:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  10f548:	e0bffc17 	ldw	r2,-16(fp)
  10f54c:	10c00017 	ldw	r3,0(r2)
  10f550:	e0bffd17 	ldw	r2,-12(fp)
  10f554:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  10f558:	e0bffc17 	ldw	r2,-16(fp)
  10f55c:	10800017 	ldw	r2,0(r2)
  10f560:	e0fffd17 	ldw	r3,-12(fp)
  10f564:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  10f568:	e0bffc17 	ldw	r2,-16(fp)
  10f56c:	e0fffd17 	ldw	r3,-12(fp)
  10f570:	10c00015 	stw	r3,0(r2)

  return 0;  
  10f574:	0005883a 	mov	r2,zero
}
  10f578:	e037883a 	mov	sp,fp
  10f57c:	dfc00117 	ldw	ra,4(sp)
  10f580:	df000017 	ldw	fp,0(sp)
  10f584:	dec00204 	addi	sp,sp,8
  10f588:	f800283a 	ret

0010f58c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  10f58c:	defffd04 	addi	sp,sp,-12
  10f590:	dfc00215 	stw	ra,8(sp)
  10f594:	df000115 	stw	fp,4(sp)
  10f598:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  10f59c:	00800474 	movhi	r2,17
  10f5a0:	1080f404 	addi	r2,r2,976
  10f5a4:	e0bfff15 	stw	r2,-4(fp)
  10f5a8:	00000606 	br	10f5c4 <_do_ctors+0x38>
        (*ctor) (); 
  10f5ac:	e0bfff17 	ldw	r2,-4(fp)
  10f5b0:	10800017 	ldw	r2,0(r2)
  10f5b4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  10f5b8:	e0bfff17 	ldw	r2,-4(fp)
  10f5bc:	10bfff04 	addi	r2,r2,-4
  10f5c0:	e0bfff15 	stw	r2,-4(fp)
  10f5c4:	e0ffff17 	ldw	r3,-4(fp)
  10f5c8:	00800474 	movhi	r2,17
  10f5cc:	1080f504 	addi	r2,r2,980
  10f5d0:	18bff62e 	bgeu	r3,r2,10f5ac <__alt_data_end+0xfff0f5ac>
        (*ctor) (); 
}
  10f5d4:	0001883a 	nop
  10f5d8:	e037883a 	mov	sp,fp
  10f5dc:	dfc00117 	ldw	ra,4(sp)
  10f5e0:	df000017 	ldw	fp,0(sp)
  10f5e4:	dec00204 	addi	sp,sp,8
  10f5e8:	f800283a 	ret

0010f5ec <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  10f5ec:	defffd04 	addi	sp,sp,-12
  10f5f0:	dfc00215 	stw	ra,8(sp)
  10f5f4:	df000115 	stw	fp,4(sp)
  10f5f8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  10f5fc:	00800474 	movhi	r2,17
  10f600:	1080f404 	addi	r2,r2,976
  10f604:	e0bfff15 	stw	r2,-4(fp)
  10f608:	00000606 	br	10f624 <_do_dtors+0x38>
        (*dtor) (); 
  10f60c:	e0bfff17 	ldw	r2,-4(fp)
  10f610:	10800017 	ldw	r2,0(r2)
  10f614:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  10f618:	e0bfff17 	ldw	r2,-4(fp)
  10f61c:	10bfff04 	addi	r2,r2,-4
  10f620:	e0bfff15 	stw	r2,-4(fp)
  10f624:	e0ffff17 	ldw	r3,-4(fp)
  10f628:	00800474 	movhi	r2,17
  10f62c:	1080f504 	addi	r2,r2,980
  10f630:	18bff62e 	bgeu	r3,r2,10f60c <__alt_data_end+0xfff0f60c>
        (*dtor) (); 
}
  10f634:	0001883a 	nop
  10f638:	e037883a 	mov	sp,fp
  10f63c:	dfc00117 	ldw	ra,4(sp)
  10f640:	df000017 	ldw	fp,0(sp)
  10f644:	dec00204 	addi	sp,sp,8
  10f648:	f800283a 	ret

0010f64c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  10f64c:	defffe04 	addi	sp,sp,-8
  10f650:	dfc00115 	stw	ra,4(sp)
  10f654:	df000015 	stw	fp,0(sp)
  10f658:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  10f65c:	01440004 	movi	r5,4096
  10f660:	0009883a 	mov	r4,zero
  10f664:	010ff140 	call	10ff14 <alt_icache_flush>
#endif
}
  10f668:	0001883a 	nop
  10f66c:	e037883a 	mov	sp,fp
  10f670:	dfc00117 	ldw	ra,4(sp)
  10f674:	df000017 	ldw	fp,0(sp)
  10f678:	dec00204 	addi	sp,sp,8
  10f67c:	f800283a 	ret

0010f680 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  10f680:	defff904 	addi	sp,sp,-28
  10f684:	dfc00615 	stw	ra,24(sp)
  10f688:	df000515 	stw	fp,20(sp)
  10f68c:	df000504 	addi	fp,sp,20
  10f690:	e13ffc15 	stw	r4,-16(fp)
  10f694:	e17ffd15 	stw	r5,-12(fp)
  10f698:	e1bffe15 	stw	r6,-8(fp)
  10f69c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  10f6a0:	e0800217 	ldw	r2,8(fp)
  10f6a4:	d8800015 	stw	r2,0(sp)
  10f6a8:	e1ffff17 	ldw	r7,-4(fp)
  10f6ac:	e1bffe17 	ldw	r6,-8(fp)
  10f6b0:	e17ffd17 	ldw	r5,-12(fp)
  10f6b4:	e13ffc17 	ldw	r4,-16(fp)
  10f6b8:	010f8300 	call	10f830 <alt_iic_isr_register>
}  
  10f6bc:	e037883a 	mov	sp,fp
  10f6c0:	dfc00117 	ldw	ra,4(sp)
  10f6c4:	df000017 	ldw	fp,0(sp)
  10f6c8:	dec00204 	addi	sp,sp,8
  10f6cc:	f800283a 	ret

0010f6d0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  10f6d0:	defff904 	addi	sp,sp,-28
  10f6d4:	df000615 	stw	fp,24(sp)
  10f6d8:	df000604 	addi	fp,sp,24
  10f6dc:	e13ffe15 	stw	r4,-8(fp)
  10f6e0:	e17fff15 	stw	r5,-4(fp)
  10f6e4:	e0bfff17 	ldw	r2,-4(fp)
  10f6e8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  10f6ec:	0005303a 	rdctl	r2,status
  10f6f0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  10f6f4:	e0fffb17 	ldw	r3,-20(fp)
  10f6f8:	00bfff84 	movi	r2,-2
  10f6fc:	1884703a 	and	r2,r3,r2
  10f700:	1001703a 	wrctl	status,r2
  
  return context;
  10f704:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  10f708:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  10f70c:	00c00044 	movi	r3,1
  10f710:	e0bffa17 	ldw	r2,-24(fp)
  10f714:	1884983a 	sll	r2,r3,r2
  10f718:	1007883a 	mov	r3,r2
  10f71c:	d0a42317 	ldw	r2,-28532(gp)
  10f720:	1884b03a 	or	r2,r3,r2
  10f724:	d0a42315 	stw	r2,-28532(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  10f728:	d0a42317 	ldw	r2,-28532(gp)
  10f72c:	100170fa 	wrctl	ienable,r2
  10f730:	e0bffc17 	ldw	r2,-16(fp)
  10f734:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  10f738:	e0bffd17 	ldw	r2,-12(fp)
  10f73c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  10f740:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  10f744:	0001883a 	nop
}
  10f748:	e037883a 	mov	sp,fp
  10f74c:	df000017 	ldw	fp,0(sp)
  10f750:	dec00104 	addi	sp,sp,4
  10f754:	f800283a 	ret

0010f758 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  10f758:	defff904 	addi	sp,sp,-28
  10f75c:	df000615 	stw	fp,24(sp)
  10f760:	df000604 	addi	fp,sp,24
  10f764:	e13ffe15 	stw	r4,-8(fp)
  10f768:	e17fff15 	stw	r5,-4(fp)
  10f76c:	e0bfff17 	ldw	r2,-4(fp)
  10f770:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  10f774:	0005303a 	rdctl	r2,status
  10f778:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  10f77c:	e0fffb17 	ldw	r3,-20(fp)
  10f780:	00bfff84 	movi	r2,-2
  10f784:	1884703a 	and	r2,r3,r2
  10f788:	1001703a 	wrctl	status,r2
  
  return context;
  10f78c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  10f790:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  10f794:	00c00044 	movi	r3,1
  10f798:	e0bffa17 	ldw	r2,-24(fp)
  10f79c:	1884983a 	sll	r2,r3,r2
  10f7a0:	0084303a 	nor	r2,zero,r2
  10f7a4:	1007883a 	mov	r3,r2
  10f7a8:	d0a42317 	ldw	r2,-28532(gp)
  10f7ac:	1884703a 	and	r2,r3,r2
  10f7b0:	d0a42315 	stw	r2,-28532(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  10f7b4:	d0a42317 	ldw	r2,-28532(gp)
  10f7b8:	100170fa 	wrctl	ienable,r2
  10f7bc:	e0bffc17 	ldw	r2,-16(fp)
  10f7c0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  10f7c4:	e0bffd17 	ldw	r2,-12(fp)
  10f7c8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  10f7cc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  10f7d0:	0001883a 	nop
}
  10f7d4:	e037883a 	mov	sp,fp
  10f7d8:	df000017 	ldw	fp,0(sp)
  10f7dc:	dec00104 	addi	sp,sp,4
  10f7e0:	f800283a 	ret

0010f7e4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  10f7e4:	defffc04 	addi	sp,sp,-16
  10f7e8:	df000315 	stw	fp,12(sp)
  10f7ec:	df000304 	addi	fp,sp,12
  10f7f0:	e13ffe15 	stw	r4,-8(fp)
  10f7f4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  10f7f8:	000530fa 	rdctl	r2,ienable
  10f7fc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  10f800:	00c00044 	movi	r3,1
  10f804:	e0bfff17 	ldw	r2,-4(fp)
  10f808:	1884983a 	sll	r2,r3,r2
  10f80c:	1007883a 	mov	r3,r2
  10f810:	e0bffd17 	ldw	r2,-12(fp)
  10f814:	1884703a 	and	r2,r3,r2
  10f818:	1004c03a 	cmpne	r2,r2,zero
  10f81c:	10803fcc 	andi	r2,r2,255
}
  10f820:	e037883a 	mov	sp,fp
  10f824:	df000017 	ldw	fp,0(sp)
  10f828:	dec00104 	addi	sp,sp,4
  10f82c:	f800283a 	ret

0010f830 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  10f830:	defff504 	addi	sp,sp,-44
  10f834:	dfc00a15 	stw	ra,40(sp)
  10f838:	df000915 	stw	fp,36(sp)
  10f83c:	df000904 	addi	fp,sp,36
  10f840:	e13ffc15 	stw	r4,-16(fp)
  10f844:	e17ffd15 	stw	r5,-12(fp)
  10f848:	e1bffe15 	stw	r6,-8(fp)
  10f84c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  10f850:	00bffa84 	movi	r2,-22
  10f854:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  10f858:	e0bffd17 	ldw	r2,-12(fp)
  10f85c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  10f860:	e0bff817 	ldw	r2,-32(fp)
  10f864:	10800808 	cmpgei	r2,r2,32
  10f868:	1000271e 	bne	r2,zero,10f908 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  10f86c:	0005303a 	rdctl	r2,status
  10f870:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  10f874:	e0fffb17 	ldw	r3,-20(fp)
  10f878:	00bfff84 	movi	r2,-2
  10f87c:	1884703a 	and	r2,r3,r2
  10f880:	1001703a 	wrctl	status,r2
  
  return context;
  10f884:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  10f888:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  10f88c:	00800474 	movhi	r2,17
  10f890:	1089df04 	addi	r2,r2,10108
  10f894:	e0fff817 	ldw	r3,-32(fp)
  10f898:	180690fa 	slli	r3,r3,3
  10f89c:	10c5883a 	add	r2,r2,r3
  10f8a0:	e0fffe17 	ldw	r3,-8(fp)
  10f8a4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  10f8a8:	00800474 	movhi	r2,17
  10f8ac:	1089df04 	addi	r2,r2,10108
  10f8b0:	e0fff817 	ldw	r3,-32(fp)
  10f8b4:	180690fa 	slli	r3,r3,3
  10f8b8:	10c5883a 	add	r2,r2,r3
  10f8bc:	10800104 	addi	r2,r2,4
  10f8c0:	e0ffff17 	ldw	r3,-4(fp)
  10f8c4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  10f8c8:	e0bffe17 	ldw	r2,-8(fp)
  10f8cc:	10000526 	beq	r2,zero,10f8e4 <alt_iic_isr_register+0xb4>
  10f8d0:	e0bff817 	ldw	r2,-32(fp)
  10f8d4:	100b883a 	mov	r5,r2
  10f8d8:	e13ffc17 	ldw	r4,-16(fp)
  10f8dc:	010f6d00 	call	10f6d0 <alt_ic_irq_enable>
  10f8e0:	00000406 	br	10f8f4 <alt_iic_isr_register+0xc4>
  10f8e4:	e0bff817 	ldw	r2,-32(fp)
  10f8e8:	100b883a 	mov	r5,r2
  10f8ec:	e13ffc17 	ldw	r4,-16(fp)
  10f8f0:	010f7580 	call	10f758 <alt_ic_irq_disable>
  10f8f4:	e0bff715 	stw	r2,-36(fp)
  10f8f8:	e0bffa17 	ldw	r2,-24(fp)
  10f8fc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  10f900:	e0bff917 	ldw	r2,-28(fp)
  10f904:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  10f908:	e0bff717 	ldw	r2,-36(fp)
}
  10f90c:	e037883a 	mov	sp,fp
  10f910:	dfc00117 	ldw	ra,4(sp)
  10f914:	df000017 	ldw	fp,0(sp)
  10f918:	dec00204 	addi	sp,sp,8
  10f91c:	f800283a 	ret

0010f920 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  10f920:	defff904 	addi	sp,sp,-28
  10f924:	dfc00615 	stw	ra,24(sp)
  10f928:	df000515 	stw	fp,20(sp)
  10f92c:	df000504 	addi	fp,sp,20
  10f930:	e13ffc15 	stw	r4,-16(fp)
  10f934:	e17ffd15 	stw	r5,-12(fp)
  10f938:	e1bffe15 	stw	r6,-8(fp)
  10f93c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  10f940:	e1bfff17 	ldw	r6,-4(fp)
  10f944:	e17ffe17 	ldw	r5,-8(fp)
  10f948:	e13ffd17 	ldw	r4,-12(fp)
  10f94c:	010fb600 	call	10fb60 <open>
  10f950:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  10f954:	e0bffb17 	ldw	r2,-20(fp)
  10f958:	10001c16 	blt	r2,zero,10f9cc <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  10f95c:	00800474 	movhi	r2,17
  10f960:	10851a04 	addi	r2,r2,5224
  10f964:	e0fffb17 	ldw	r3,-20(fp)
  10f968:	18c00324 	muli	r3,r3,12
  10f96c:	10c5883a 	add	r2,r2,r3
  10f970:	10c00017 	ldw	r3,0(r2)
  10f974:	e0bffc17 	ldw	r2,-16(fp)
  10f978:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  10f97c:	00800474 	movhi	r2,17
  10f980:	10851a04 	addi	r2,r2,5224
  10f984:	e0fffb17 	ldw	r3,-20(fp)
  10f988:	18c00324 	muli	r3,r3,12
  10f98c:	10c5883a 	add	r2,r2,r3
  10f990:	10800104 	addi	r2,r2,4
  10f994:	10c00017 	ldw	r3,0(r2)
  10f998:	e0bffc17 	ldw	r2,-16(fp)
  10f99c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  10f9a0:	00800474 	movhi	r2,17
  10f9a4:	10851a04 	addi	r2,r2,5224
  10f9a8:	e0fffb17 	ldw	r3,-20(fp)
  10f9ac:	18c00324 	muli	r3,r3,12
  10f9b0:	10c5883a 	add	r2,r2,r3
  10f9b4:	10800204 	addi	r2,r2,8
  10f9b8:	10c00017 	ldw	r3,0(r2)
  10f9bc:	e0bffc17 	ldw	r2,-16(fp)
  10f9c0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  10f9c4:	e13ffb17 	ldw	r4,-20(fp)
  10f9c8:	010e7040 	call	10e704 <alt_release_fd>
  }
} 
  10f9cc:	0001883a 	nop
  10f9d0:	e037883a 	mov	sp,fp
  10f9d4:	dfc00117 	ldw	ra,4(sp)
  10f9d8:	df000017 	ldw	fp,0(sp)
  10f9dc:	dec00204 	addi	sp,sp,8
  10f9e0:	f800283a 	ret

0010f9e4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  10f9e4:	defffb04 	addi	sp,sp,-20
  10f9e8:	dfc00415 	stw	ra,16(sp)
  10f9ec:	df000315 	stw	fp,12(sp)
  10f9f0:	df000304 	addi	fp,sp,12
  10f9f4:	e13ffd15 	stw	r4,-12(fp)
  10f9f8:	e17ffe15 	stw	r5,-8(fp)
  10f9fc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  10fa00:	01c07fc4 	movi	r7,511
  10fa04:	01800044 	movi	r6,1
  10fa08:	e17ffd17 	ldw	r5,-12(fp)
  10fa0c:	01000474 	movhi	r4,17
  10fa10:	21051d04 	addi	r4,r4,5236
  10fa14:	010f9200 	call	10f920 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  10fa18:	01c07fc4 	movi	r7,511
  10fa1c:	000d883a 	mov	r6,zero
  10fa20:	e17ffe17 	ldw	r5,-8(fp)
  10fa24:	01000474 	movhi	r4,17
  10fa28:	21051a04 	addi	r4,r4,5224
  10fa2c:	010f9200 	call	10f920 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  10fa30:	01c07fc4 	movi	r7,511
  10fa34:	01800044 	movi	r6,1
  10fa38:	e17fff17 	ldw	r5,-4(fp)
  10fa3c:	01000474 	movhi	r4,17
  10fa40:	21052004 	addi	r4,r4,5248
  10fa44:	010f9200 	call	10f920 <alt_open_fd>
}  
  10fa48:	0001883a 	nop
  10fa4c:	e037883a 	mov	sp,fp
  10fa50:	dfc00117 	ldw	ra,4(sp)
  10fa54:	df000017 	ldw	fp,0(sp)
  10fa58:	dec00204 	addi	sp,sp,8
  10fa5c:	f800283a 	ret

0010fa60 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  10fa60:	defffe04 	addi	sp,sp,-8
  10fa64:	dfc00115 	stw	ra,4(sp)
  10fa68:	df000015 	stw	fp,0(sp)
  10fa6c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  10fa70:	d0a00b17 	ldw	r2,-32724(gp)
  10fa74:	10000326 	beq	r2,zero,10fa84 <alt_get_errno+0x24>
  10fa78:	d0a00b17 	ldw	r2,-32724(gp)
  10fa7c:	103ee83a 	callr	r2
  10fa80:	00000106 	br	10fa88 <alt_get_errno+0x28>
  10fa84:	d0a41f04 	addi	r2,gp,-28548
}
  10fa88:	e037883a 	mov	sp,fp
  10fa8c:	dfc00117 	ldw	ra,4(sp)
  10fa90:	df000017 	ldw	fp,0(sp)
  10fa94:	dec00204 	addi	sp,sp,8
  10fa98:	f800283a 	ret

0010fa9c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  10fa9c:	defffd04 	addi	sp,sp,-12
  10faa0:	df000215 	stw	fp,8(sp)
  10faa4:	df000204 	addi	fp,sp,8
  10faa8:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  10faac:	e0bfff17 	ldw	r2,-4(fp)
  10fab0:	10800217 	ldw	r2,8(r2)
  10fab4:	10d00034 	orhi	r3,r2,16384
  10fab8:	e0bfff17 	ldw	r2,-4(fp)
  10fabc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  10fac0:	e03ffe15 	stw	zero,-8(fp)
  10fac4:	00001d06 	br	10fb3c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  10fac8:	00800474 	movhi	r2,17
  10facc:	10851a04 	addi	r2,r2,5224
  10fad0:	e0fffe17 	ldw	r3,-8(fp)
  10fad4:	18c00324 	muli	r3,r3,12
  10fad8:	10c5883a 	add	r2,r2,r3
  10fadc:	10c00017 	ldw	r3,0(r2)
  10fae0:	e0bfff17 	ldw	r2,-4(fp)
  10fae4:	10800017 	ldw	r2,0(r2)
  10fae8:	1880111e 	bne	r3,r2,10fb30 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  10faec:	00800474 	movhi	r2,17
  10faf0:	10851a04 	addi	r2,r2,5224
  10faf4:	e0fffe17 	ldw	r3,-8(fp)
  10faf8:	18c00324 	muli	r3,r3,12
  10fafc:	10c5883a 	add	r2,r2,r3
  10fb00:	10800204 	addi	r2,r2,8
  10fb04:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  10fb08:	1000090e 	bge	r2,zero,10fb30 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  10fb0c:	e0bffe17 	ldw	r2,-8(fp)
  10fb10:	10c00324 	muli	r3,r2,12
  10fb14:	00800474 	movhi	r2,17
  10fb18:	10851a04 	addi	r2,r2,5224
  10fb1c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  10fb20:	e0bfff17 	ldw	r2,-4(fp)
  10fb24:	18800226 	beq	r3,r2,10fb30 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  10fb28:	00bffcc4 	movi	r2,-13
  10fb2c:	00000806 	br	10fb50 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  10fb30:	e0bffe17 	ldw	r2,-8(fp)
  10fb34:	10800044 	addi	r2,r2,1
  10fb38:	e0bffe15 	stw	r2,-8(fp)
  10fb3c:	d0a00a17 	ldw	r2,-32728(gp)
  10fb40:	1007883a 	mov	r3,r2
  10fb44:	e0bffe17 	ldw	r2,-8(fp)
  10fb48:	18bfdf2e 	bgeu	r3,r2,10fac8 <__alt_data_end+0xfff0fac8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  10fb4c:	0005883a 	mov	r2,zero
}
  10fb50:	e037883a 	mov	sp,fp
  10fb54:	df000017 	ldw	fp,0(sp)
  10fb58:	dec00104 	addi	sp,sp,4
  10fb5c:	f800283a 	ret

0010fb60 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  10fb60:	defff604 	addi	sp,sp,-40
  10fb64:	dfc00915 	stw	ra,36(sp)
  10fb68:	df000815 	stw	fp,32(sp)
  10fb6c:	df000804 	addi	fp,sp,32
  10fb70:	e13ffd15 	stw	r4,-12(fp)
  10fb74:	e17ffe15 	stw	r5,-8(fp)
  10fb78:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  10fb7c:	00bfffc4 	movi	r2,-1
  10fb80:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  10fb84:	00bffb44 	movi	r2,-19
  10fb88:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  10fb8c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  10fb90:	d1600804 	addi	r5,gp,-32736
  10fb94:	e13ffd17 	ldw	r4,-12(fp)
  10fb98:	010fcd80 	call	10fcd8 <alt_find_dev>
  10fb9c:	e0bff815 	stw	r2,-32(fp)
  10fba0:	e0bff817 	ldw	r2,-32(fp)
  10fba4:	1000051e 	bne	r2,zero,10fbbc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  10fba8:	e13ffd17 	ldw	r4,-12(fp)
  10fbac:	010fd680 	call	10fd68 <alt_find_file>
  10fbb0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  10fbb4:	00800044 	movi	r2,1
  10fbb8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  10fbbc:	e0bff817 	ldw	r2,-32(fp)
  10fbc0:	10002926 	beq	r2,zero,10fc68 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  10fbc4:	e13ff817 	ldw	r4,-32(fp)
  10fbc8:	010fe700 	call	10fe70 <alt_get_fd>
  10fbcc:	e0bff915 	stw	r2,-28(fp)
  10fbd0:	e0bff917 	ldw	r2,-28(fp)
  10fbd4:	1000030e 	bge	r2,zero,10fbe4 <open+0x84>
    {
      status = index;
  10fbd8:	e0bff917 	ldw	r2,-28(fp)
  10fbdc:	e0bffa15 	stw	r2,-24(fp)
  10fbe0:	00002306 	br	10fc70 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  10fbe4:	e0bff917 	ldw	r2,-28(fp)
  10fbe8:	10c00324 	muli	r3,r2,12
  10fbec:	00800474 	movhi	r2,17
  10fbf0:	10851a04 	addi	r2,r2,5224
  10fbf4:	1885883a 	add	r2,r3,r2
  10fbf8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  10fbfc:	e0fffe17 	ldw	r3,-8(fp)
  10fc00:	00900034 	movhi	r2,16384
  10fc04:	10bfffc4 	addi	r2,r2,-1
  10fc08:	1886703a 	and	r3,r3,r2
  10fc0c:	e0bffc17 	ldw	r2,-16(fp)
  10fc10:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  10fc14:	e0bffb17 	ldw	r2,-20(fp)
  10fc18:	1000051e 	bne	r2,zero,10fc30 <open+0xd0>
  10fc1c:	e13ffc17 	ldw	r4,-16(fp)
  10fc20:	010fa9c0 	call	10fa9c <alt_file_locked>
  10fc24:	e0bffa15 	stw	r2,-24(fp)
  10fc28:	e0bffa17 	ldw	r2,-24(fp)
  10fc2c:	10001016 	blt	r2,zero,10fc70 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  10fc30:	e0bff817 	ldw	r2,-32(fp)
  10fc34:	10800317 	ldw	r2,12(r2)
  10fc38:	10000826 	beq	r2,zero,10fc5c <open+0xfc>
  10fc3c:	e0bff817 	ldw	r2,-32(fp)
  10fc40:	10800317 	ldw	r2,12(r2)
  10fc44:	e1ffff17 	ldw	r7,-4(fp)
  10fc48:	e1bffe17 	ldw	r6,-8(fp)
  10fc4c:	e17ffd17 	ldw	r5,-12(fp)
  10fc50:	e13ffc17 	ldw	r4,-16(fp)
  10fc54:	103ee83a 	callr	r2
  10fc58:	00000106 	br	10fc60 <open+0x100>
  10fc5c:	0005883a 	mov	r2,zero
  10fc60:	e0bffa15 	stw	r2,-24(fp)
  10fc64:	00000206 	br	10fc70 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  10fc68:	00bffb44 	movi	r2,-19
  10fc6c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  10fc70:	e0bffa17 	ldw	r2,-24(fp)
  10fc74:	1000090e 	bge	r2,zero,10fc9c <open+0x13c>
  {
    alt_release_fd (index);  
  10fc78:	e13ff917 	ldw	r4,-28(fp)
  10fc7c:	010e7040 	call	10e704 <alt_release_fd>
    ALT_ERRNO = -status;
  10fc80:	010fa600 	call	10fa60 <alt_get_errno>
  10fc84:	1007883a 	mov	r3,r2
  10fc88:	e0bffa17 	ldw	r2,-24(fp)
  10fc8c:	0085c83a 	sub	r2,zero,r2
  10fc90:	18800015 	stw	r2,0(r3)
    return -1;
  10fc94:	00bfffc4 	movi	r2,-1
  10fc98:	00000106 	br	10fca0 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  10fc9c:	e0bff917 	ldw	r2,-28(fp)
}
  10fca0:	e037883a 	mov	sp,fp
  10fca4:	dfc00117 	ldw	ra,4(sp)
  10fca8:	df000017 	ldw	fp,0(sp)
  10fcac:	dec00204 	addi	sp,sp,8
  10fcb0:	f800283a 	ret

0010fcb4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  10fcb4:	deffff04 	addi	sp,sp,-4
  10fcb8:	df000015 	stw	fp,0(sp)
  10fcbc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  10fcc0:	000170fa 	wrctl	ienable,zero
}
  10fcc4:	0001883a 	nop
  10fcc8:	e037883a 	mov	sp,fp
  10fccc:	df000017 	ldw	fp,0(sp)
  10fcd0:	dec00104 	addi	sp,sp,4
  10fcd4:	f800283a 	ret

0010fcd8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  10fcd8:	defffa04 	addi	sp,sp,-24
  10fcdc:	dfc00515 	stw	ra,20(sp)
  10fce0:	df000415 	stw	fp,16(sp)
  10fce4:	df000404 	addi	fp,sp,16
  10fce8:	e13ffe15 	stw	r4,-8(fp)
  10fcec:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  10fcf0:	e0bfff17 	ldw	r2,-4(fp)
  10fcf4:	10800017 	ldw	r2,0(r2)
  10fcf8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  10fcfc:	e13ffe17 	ldw	r4,-8(fp)
  10fd00:	01083c40 	call	1083c4 <strlen>
  10fd04:	10800044 	addi	r2,r2,1
  10fd08:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  10fd0c:	00000d06 	br	10fd44 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  10fd10:	e0bffc17 	ldw	r2,-16(fp)
  10fd14:	10800217 	ldw	r2,8(r2)
  10fd18:	e0fffd17 	ldw	r3,-12(fp)
  10fd1c:	180d883a 	mov	r6,r3
  10fd20:	e17ffe17 	ldw	r5,-8(fp)
  10fd24:	1009883a 	mov	r4,r2
  10fd28:	011008c0 	call	11008c <memcmp>
  10fd2c:	1000021e 	bne	r2,zero,10fd38 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  10fd30:	e0bffc17 	ldw	r2,-16(fp)
  10fd34:	00000706 	br	10fd54 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  10fd38:	e0bffc17 	ldw	r2,-16(fp)
  10fd3c:	10800017 	ldw	r2,0(r2)
  10fd40:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  10fd44:	e0fffc17 	ldw	r3,-16(fp)
  10fd48:	e0bfff17 	ldw	r2,-4(fp)
  10fd4c:	18bff01e 	bne	r3,r2,10fd10 <__alt_data_end+0xfff0fd10>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  10fd50:	0005883a 	mov	r2,zero
}
  10fd54:	e037883a 	mov	sp,fp
  10fd58:	dfc00117 	ldw	ra,4(sp)
  10fd5c:	df000017 	ldw	fp,0(sp)
  10fd60:	dec00204 	addi	sp,sp,8
  10fd64:	f800283a 	ret

0010fd68 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  10fd68:	defffb04 	addi	sp,sp,-20
  10fd6c:	dfc00415 	stw	ra,16(sp)
  10fd70:	df000315 	stw	fp,12(sp)
  10fd74:	df000304 	addi	fp,sp,12
  10fd78:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  10fd7c:	d0a00617 	ldw	r2,-32744(gp)
  10fd80:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  10fd84:	00003106 	br	10fe4c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  10fd88:	e0bffd17 	ldw	r2,-12(fp)
  10fd8c:	10800217 	ldw	r2,8(r2)
  10fd90:	1009883a 	mov	r4,r2
  10fd94:	01083c40 	call	1083c4 <strlen>
  10fd98:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  10fd9c:	e0bffd17 	ldw	r2,-12(fp)
  10fda0:	10c00217 	ldw	r3,8(r2)
  10fda4:	e0bffe17 	ldw	r2,-8(fp)
  10fda8:	10bfffc4 	addi	r2,r2,-1
  10fdac:	1885883a 	add	r2,r3,r2
  10fdb0:	10800003 	ldbu	r2,0(r2)
  10fdb4:	10803fcc 	andi	r2,r2,255
  10fdb8:	1080201c 	xori	r2,r2,128
  10fdbc:	10bfe004 	addi	r2,r2,-128
  10fdc0:	10800bd8 	cmpnei	r2,r2,47
  10fdc4:	1000031e 	bne	r2,zero,10fdd4 <alt_find_file+0x6c>
    {
      len -= 1;
  10fdc8:	e0bffe17 	ldw	r2,-8(fp)
  10fdcc:	10bfffc4 	addi	r2,r2,-1
  10fdd0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  10fdd4:	e0bffe17 	ldw	r2,-8(fp)
  10fdd8:	e0ffff17 	ldw	r3,-4(fp)
  10fddc:	1885883a 	add	r2,r3,r2
  10fde0:	10800003 	ldbu	r2,0(r2)
  10fde4:	10803fcc 	andi	r2,r2,255
  10fde8:	1080201c 	xori	r2,r2,128
  10fdec:	10bfe004 	addi	r2,r2,-128
  10fdf0:	10800be0 	cmpeqi	r2,r2,47
  10fdf4:	1000081e 	bne	r2,zero,10fe18 <alt_find_file+0xb0>
  10fdf8:	e0bffe17 	ldw	r2,-8(fp)
  10fdfc:	e0ffff17 	ldw	r3,-4(fp)
  10fe00:	1885883a 	add	r2,r3,r2
  10fe04:	10800003 	ldbu	r2,0(r2)
  10fe08:	10803fcc 	andi	r2,r2,255
  10fe0c:	1080201c 	xori	r2,r2,128
  10fe10:	10bfe004 	addi	r2,r2,-128
  10fe14:	10000a1e 	bne	r2,zero,10fe40 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  10fe18:	e0bffd17 	ldw	r2,-12(fp)
  10fe1c:	10800217 	ldw	r2,8(r2)
  10fe20:	e0fffe17 	ldw	r3,-8(fp)
  10fe24:	180d883a 	mov	r6,r3
  10fe28:	e17fff17 	ldw	r5,-4(fp)
  10fe2c:	1009883a 	mov	r4,r2
  10fe30:	011008c0 	call	11008c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  10fe34:	1000021e 	bne	r2,zero,10fe40 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  10fe38:	e0bffd17 	ldw	r2,-12(fp)
  10fe3c:	00000706 	br	10fe5c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  10fe40:	e0bffd17 	ldw	r2,-12(fp)
  10fe44:	10800017 	ldw	r2,0(r2)
  10fe48:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  10fe4c:	e0fffd17 	ldw	r3,-12(fp)
  10fe50:	d0a00604 	addi	r2,gp,-32744
  10fe54:	18bfcc1e 	bne	r3,r2,10fd88 <__alt_data_end+0xfff0fd88>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  10fe58:	0005883a 	mov	r2,zero
}
  10fe5c:	e037883a 	mov	sp,fp
  10fe60:	dfc00117 	ldw	ra,4(sp)
  10fe64:	df000017 	ldw	fp,0(sp)
  10fe68:	dec00204 	addi	sp,sp,8
  10fe6c:	f800283a 	ret

0010fe70 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  10fe70:	defffc04 	addi	sp,sp,-16
  10fe74:	df000315 	stw	fp,12(sp)
  10fe78:	df000304 	addi	fp,sp,12
  10fe7c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  10fe80:	00bffa04 	movi	r2,-24
  10fe84:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  10fe88:	e03ffd15 	stw	zero,-12(fp)
  10fe8c:	00001906 	br	10fef4 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  10fe90:	00800474 	movhi	r2,17
  10fe94:	10851a04 	addi	r2,r2,5224
  10fe98:	e0fffd17 	ldw	r3,-12(fp)
  10fe9c:	18c00324 	muli	r3,r3,12
  10fea0:	10c5883a 	add	r2,r2,r3
  10fea4:	10800017 	ldw	r2,0(r2)
  10fea8:	10000f1e 	bne	r2,zero,10fee8 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  10feac:	00800474 	movhi	r2,17
  10feb0:	10851a04 	addi	r2,r2,5224
  10feb4:	e0fffd17 	ldw	r3,-12(fp)
  10feb8:	18c00324 	muli	r3,r3,12
  10febc:	10c5883a 	add	r2,r2,r3
  10fec0:	e0ffff17 	ldw	r3,-4(fp)
  10fec4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  10fec8:	d0e00a17 	ldw	r3,-32728(gp)
  10fecc:	e0bffd17 	ldw	r2,-12(fp)
  10fed0:	1880020e 	bge	r3,r2,10fedc <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  10fed4:	e0bffd17 	ldw	r2,-12(fp)
  10fed8:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  10fedc:	e0bffd17 	ldw	r2,-12(fp)
  10fee0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  10fee4:	00000606 	br	10ff00 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  10fee8:	e0bffd17 	ldw	r2,-12(fp)
  10feec:	10800044 	addi	r2,r2,1
  10fef0:	e0bffd15 	stw	r2,-12(fp)
  10fef4:	e0bffd17 	ldw	r2,-12(fp)
  10fef8:	10800810 	cmplti	r2,r2,32
  10fefc:	103fe41e 	bne	r2,zero,10fe90 <__alt_data_end+0xfff0fe90>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  10ff00:	e0bffe17 	ldw	r2,-8(fp)
}
  10ff04:	e037883a 	mov	sp,fp
  10ff08:	df000017 	ldw	fp,0(sp)
  10ff0c:	dec00104 	addi	sp,sp,4
  10ff10:	f800283a 	ret

0010ff14 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  10ff14:	defffb04 	addi	sp,sp,-20
  10ff18:	df000415 	stw	fp,16(sp)
  10ff1c:	df000404 	addi	fp,sp,16
  10ff20:	e13ffe15 	stw	r4,-8(fp)
  10ff24:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  10ff28:	e0bfff17 	ldw	r2,-4(fp)
  10ff2c:	10840070 	cmpltui	r2,r2,4097
  10ff30:	1000021e 	bne	r2,zero,10ff3c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  10ff34:	00840004 	movi	r2,4096
  10ff38:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  10ff3c:	e0fffe17 	ldw	r3,-8(fp)
  10ff40:	e0bfff17 	ldw	r2,-4(fp)
  10ff44:	1885883a 	add	r2,r3,r2
  10ff48:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  10ff4c:	e0bffe17 	ldw	r2,-8(fp)
  10ff50:	e0bffc15 	stw	r2,-16(fp)
  10ff54:	00000506 	br	10ff6c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  10ff58:	e0bffc17 	ldw	r2,-16(fp)
  10ff5c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  10ff60:	e0bffc17 	ldw	r2,-16(fp)
  10ff64:	10800804 	addi	r2,r2,32
  10ff68:	e0bffc15 	stw	r2,-16(fp)
  10ff6c:	e0fffc17 	ldw	r3,-16(fp)
  10ff70:	e0bffd17 	ldw	r2,-12(fp)
  10ff74:	18bff836 	bltu	r3,r2,10ff58 <__alt_data_end+0xfff0ff58>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  10ff78:	e0bffe17 	ldw	r2,-8(fp)
  10ff7c:	108007cc 	andi	r2,r2,31
  10ff80:	10000226 	beq	r2,zero,10ff8c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  10ff84:	e0bffc17 	ldw	r2,-16(fp)
  10ff88:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  10ff8c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  10ff90:	0001883a 	nop
  10ff94:	e037883a 	mov	sp,fp
  10ff98:	df000017 	ldw	fp,0(sp)
  10ff9c:	dec00104 	addi	sp,sp,4
  10ffa0:	f800283a 	ret

0010ffa4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  10ffa4:	defffe04 	addi	sp,sp,-8
  10ffa8:	df000115 	stw	fp,4(sp)
  10ffac:	df000104 	addi	fp,sp,4
  10ffb0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  10ffb4:	e0bfff17 	ldw	r2,-4(fp)
  10ffb8:	10bffe84 	addi	r2,r2,-6
  10ffbc:	10c00428 	cmpgeui	r3,r2,16
  10ffc0:	18001a1e 	bne	r3,zero,11002c <alt_exception_cause_generated_bad_addr+0x88>
  10ffc4:	100690ba 	slli	r3,r2,2
  10ffc8:	00800474 	movhi	r2,17
  10ffcc:	10bff704 	addi	r2,r2,-36
  10ffd0:	1885883a 	add	r2,r3,r2
  10ffd4:	10800017 	ldw	r2,0(r2)
  10ffd8:	1000683a 	jmp	r2
  10ffdc:	0011001c 	xori	zero,zero,17408
  10ffe0:	0011001c 	xori	zero,zero,17408
  10ffe4:	0011002c 	andhi	zero,zero,17408
  10ffe8:	0011002c 	andhi	zero,zero,17408
  10ffec:	0011002c 	andhi	zero,zero,17408
  10fff0:	0011001c 	xori	zero,zero,17408
  10fff4:	00110024 	muli	zero,zero,17408
  10fff8:	0011002c 	andhi	zero,zero,17408
  10fffc:	0011001c 	xori	zero,zero,17408
  110000:	0011001c 	xori	zero,zero,17408
  110004:	0011002c 	andhi	zero,zero,17408
  110008:	0011001c 	xori	zero,zero,17408
  11000c:	00110024 	muli	zero,zero,17408
  110010:	0011002c 	andhi	zero,zero,17408
  110014:	0011002c 	andhi	zero,zero,17408
  110018:	0011001c 	xori	zero,zero,17408
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  11001c:	00800044 	movi	r2,1
  110020:	00000306 	br	110030 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  110024:	0005883a 	mov	r2,zero
  110028:	00000106 	br	110030 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  11002c:	0005883a 	mov	r2,zero
  }
}
  110030:	e037883a 	mov	sp,fp
  110034:	df000017 	ldw	fp,0(sp)
  110038:	dec00104 	addi	sp,sp,4
  11003c:	f800283a 	ret

00110040 <atexit>:
  110040:	200b883a 	mov	r5,r4
  110044:	000f883a 	mov	r7,zero
  110048:	000d883a 	mov	r6,zero
  11004c:	0009883a 	mov	r4,zero
  110050:	01101081 	jmpi	110108 <__register_exitproc>

00110054 <exit>:
  110054:	defffe04 	addi	sp,sp,-8
  110058:	000b883a 	mov	r5,zero
  11005c:	dc000015 	stw	r16,0(sp)
  110060:	dfc00115 	stw	ra,4(sp)
  110064:	2021883a 	mov	r16,r4
  110068:	01102200 	call	110220 <__call_exitprocs>
  11006c:	00800474 	movhi	r2,17
  110070:	1085ab04 	addi	r2,r2,5804
  110074:	11000017 	ldw	r4,0(r2)
  110078:	20800f17 	ldw	r2,60(r4)
  11007c:	10000126 	beq	r2,zero,110084 <exit+0x30>
  110080:	103ee83a 	callr	r2
  110084:	8009883a 	mov	r4,r16
  110088:	01103a00 	call	1103a0 <_exit>

0011008c <memcmp>:
  11008c:	01c000c4 	movi	r7,3
  110090:	3980192e 	bgeu	r7,r6,1100f8 <memcmp+0x6c>
  110094:	2144b03a 	or	r2,r4,r5
  110098:	11c4703a 	and	r2,r2,r7
  11009c:	10000f26 	beq	r2,zero,1100dc <memcmp+0x50>
  1100a0:	20800003 	ldbu	r2,0(r4)
  1100a4:	28c00003 	ldbu	r3,0(r5)
  1100a8:	10c0151e 	bne	r2,r3,110100 <memcmp+0x74>
  1100ac:	31bfff84 	addi	r6,r6,-2
  1100b0:	01ffffc4 	movi	r7,-1
  1100b4:	00000406 	br	1100c8 <memcmp+0x3c>
  1100b8:	20800003 	ldbu	r2,0(r4)
  1100bc:	28c00003 	ldbu	r3,0(r5)
  1100c0:	31bfffc4 	addi	r6,r6,-1
  1100c4:	10c00e1e 	bne	r2,r3,110100 <memcmp+0x74>
  1100c8:	21000044 	addi	r4,r4,1
  1100cc:	29400044 	addi	r5,r5,1
  1100d0:	31fff91e 	bne	r6,r7,1100b8 <__alt_data_end+0xfff100b8>
  1100d4:	0005883a 	mov	r2,zero
  1100d8:	f800283a 	ret
  1100dc:	20c00017 	ldw	r3,0(r4)
  1100e0:	28800017 	ldw	r2,0(r5)
  1100e4:	18bfee1e 	bne	r3,r2,1100a0 <__alt_data_end+0xfff100a0>
  1100e8:	31bfff04 	addi	r6,r6,-4
  1100ec:	21000104 	addi	r4,r4,4
  1100f0:	29400104 	addi	r5,r5,4
  1100f4:	39bff936 	bltu	r7,r6,1100dc <__alt_data_end+0xfff100dc>
  1100f8:	303fe91e 	bne	r6,zero,1100a0 <__alt_data_end+0xfff100a0>
  1100fc:	003ff506 	br	1100d4 <__alt_data_end+0xfff100d4>
  110100:	10c5c83a 	sub	r2,r2,r3
  110104:	f800283a 	ret

00110108 <__register_exitproc>:
  110108:	defffa04 	addi	sp,sp,-24
  11010c:	dc000315 	stw	r16,12(sp)
  110110:	04000474 	movhi	r16,17
  110114:	8405ab04 	addi	r16,r16,5804
  110118:	80c00017 	ldw	r3,0(r16)
  11011c:	dc400415 	stw	r17,16(sp)
  110120:	dfc00515 	stw	ra,20(sp)
  110124:	18805217 	ldw	r2,328(r3)
  110128:	2023883a 	mov	r17,r4
  11012c:	10003726 	beq	r2,zero,11020c <__register_exitproc+0x104>
  110130:	10c00117 	ldw	r3,4(r2)
  110134:	010007c4 	movi	r4,31
  110138:	20c00e16 	blt	r4,r3,110174 <__register_exitproc+0x6c>
  11013c:	1a000044 	addi	r8,r3,1
  110140:	8800221e 	bne	r17,zero,1101cc <__register_exitproc+0xc4>
  110144:	18c00084 	addi	r3,r3,2
  110148:	18c7883a 	add	r3,r3,r3
  11014c:	18c7883a 	add	r3,r3,r3
  110150:	12000115 	stw	r8,4(r2)
  110154:	10c7883a 	add	r3,r2,r3
  110158:	19400015 	stw	r5,0(r3)
  11015c:	0005883a 	mov	r2,zero
  110160:	dfc00517 	ldw	ra,20(sp)
  110164:	dc400417 	ldw	r17,16(sp)
  110168:	dc000317 	ldw	r16,12(sp)
  11016c:	dec00604 	addi	sp,sp,24
  110170:	f800283a 	ret
  110174:	00800034 	movhi	r2,0
  110178:	10800004 	addi	r2,r2,0
  11017c:	10002626 	beq	r2,zero,110218 <__register_exitproc+0x110>
  110180:	01006404 	movi	r4,400
  110184:	d9400015 	stw	r5,0(sp)
  110188:	d9800115 	stw	r6,4(sp)
  11018c:	d9c00215 	stw	r7,8(sp)
  110190:	00000000 	call	0 <__alt_mem_onchip_memory2-0x100000>
  110194:	d9400017 	ldw	r5,0(sp)
  110198:	d9800117 	ldw	r6,4(sp)
  11019c:	d9c00217 	ldw	r7,8(sp)
  1101a0:	10001d26 	beq	r2,zero,110218 <__register_exitproc+0x110>
  1101a4:	81000017 	ldw	r4,0(r16)
  1101a8:	10000115 	stw	zero,4(r2)
  1101ac:	02000044 	movi	r8,1
  1101b0:	22405217 	ldw	r9,328(r4)
  1101b4:	0007883a 	mov	r3,zero
  1101b8:	12400015 	stw	r9,0(r2)
  1101bc:	20805215 	stw	r2,328(r4)
  1101c0:	10006215 	stw	zero,392(r2)
  1101c4:	10006315 	stw	zero,396(r2)
  1101c8:	883fde26 	beq	r17,zero,110144 <__alt_data_end+0xfff10144>
  1101cc:	18c9883a 	add	r4,r3,r3
  1101d0:	2109883a 	add	r4,r4,r4
  1101d4:	1109883a 	add	r4,r2,r4
  1101d8:	21802215 	stw	r6,136(r4)
  1101dc:	01800044 	movi	r6,1
  1101e0:	12406217 	ldw	r9,392(r2)
  1101e4:	30cc983a 	sll	r6,r6,r3
  1101e8:	4992b03a 	or	r9,r9,r6
  1101ec:	12406215 	stw	r9,392(r2)
  1101f0:	21c04215 	stw	r7,264(r4)
  1101f4:	01000084 	movi	r4,2
  1101f8:	893fd21e 	bne	r17,r4,110144 <__alt_data_end+0xfff10144>
  1101fc:	11006317 	ldw	r4,396(r2)
  110200:	218cb03a 	or	r6,r4,r6
  110204:	11806315 	stw	r6,396(r2)
  110208:	003fce06 	br	110144 <__alt_data_end+0xfff10144>
  11020c:	18805304 	addi	r2,r3,332
  110210:	18805215 	stw	r2,328(r3)
  110214:	003fc606 	br	110130 <__alt_data_end+0xfff10130>
  110218:	00bfffc4 	movi	r2,-1
  11021c:	003fd006 	br	110160 <__alt_data_end+0xfff10160>

00110220 <__call_exitprocs>:
  110220:	defff504 	addi	sp,sp,-44
  110224:	df000915 	stw	fp,36(sp)
  110228:	dd400615 	stw	r21,24(sp)
  11022c:	dc800315 	stw	r18,12(sp)
  110230:	dfc00a15 	stw	ra,40(sp)
  110234:	ddc00815 	stw	r23,32(sp)
  110238:	dd800715 	stw	r22,28(sp)
  11023c:	dd000515 	stw	r20,20(sp)
  110240:	dcc00415 	stw	r19,16(sp)
  110244:	dc400215 	stw	r17,8(sp)
  110248:	dc000115 	stw	r16,4(sp)
  11024c:	d9000015 	stw	r4,0(sp)
  110250:	2839883a 	mov	fp,r5
  110254:	04800044 	movi	r18,1
  110258:	057fffc4 	movi	r21,-1
  11025c:	00800474 	movhi	r2,17
  110260:	1085ab04 	addi	r2,r2,5804
  110264:	12000017 	ldw	r8,0(r2)
  110268:	45005217 	ldw	r20,328(r8)
  11026c:	44c05204 	addi	r19,r8,328
  110270:	a0001c26 	beq	r20,zero,1102e4 <__call_exitprocs+0xc4>
  110274:	a0800117 	ldw	r2,4(r20)
  110278:	15ffffc4 	addi	r23,r2,-1
  11027c:	b8000d16 	blt	r23,zero,1102b4 <__call_exitprocs+0x94>
  110280:	14000044 	addi	r16,r2,1
  110284:	8421883a 	add	r16,r16,r16
  110288:	8421883a 	add	r16,r16,r16
  11028c:	84402004 	addi	r17,r16,128
  110290:	a463883a 	add	r17,r20,r17
  110294:	a421883a 	add	r16,r20,r16
  110298:	e0001e26 	beq	fp,zero,110314 <__call_exitprocs+0xf4>
  11029c:	80804017 	ldw	r2,256(r16)
  1102a0:	e0801c26 	beq	fp,r2,110314 <__call_exitprocs+0xf4>
  1102a4:	bdffffc4 	addi	r23,r23,-1
  1102a8:	843fff04 	addi	r16,r16,-4
  1102ac:	8c7fff04 	addi	r17,r17,-4
  1102b0:	bd7ff91e 	bne	r23,r21,110298 <__alt_data_end+0xfff10298>
  1102b4:	00800034 	movhi	r2,0
  1102b8:	10800004 	addi	r2,r2,0
  1102bc:	10000926 	beq	r2,zero,1102e4 <__call_exitprocs+0xc4>
  1102c0:	a0800117 	ldw	r2,4(r20)
  1102c4:	1000301e 	bne	r2,zero,110388 <__call_exitprocs+0x168>
  1102c8:	a0800017 	ldw	r2,0(r20)
  1102cc:	10003226 	beq	r2,zero,110398 <__call_exitprocs+0x178>
  1102d0:	a009883a 	mov	r4,r20
  1102d4:	98800015 	stw	r2,0(r19)
  1102d8:	00000000 	call	0 <__alt_mem_onchip_memory2-0x100000>
  1102dc:	9d000017 	ldw	r20,0(r19)
  1102e0:	a03fe41e 	bne	r20,zero,110274 <__alt_data_end+0xfff10274>
  1102e4:	dfc00a17 	ldw	ra,40(sp)
  1102e8:	df000917 	ldw	fp,36(sp)
  1102ec:	ddc00817 	ldw	r23,32(sp)
  1102f0:	dd800717 	ldw	r22,28(sp)
  1102f4:	dd400617 	ldw	r21,24(sp)
  1102f8:	dd000517 	ldw	r20,20(sp)
  1102fc:	dcc00417 	ldw	r19,16(sp)
  110300:	dc800317 	ldw	r18,12(sp)
  110304:	dc400217 	ldw	r17,8(sp)
  110308:	dc000117 	ldw	r16,4(sp)
  11030c:	dec00b04 	addi	sp,sp,44
  110310:	f800283a 	ret
  110314:	a0800117 	ldw	r2,4(r20)
  110318:	80c00017 	ldw	r3,0(r16)
  11031c:	10bfffc4 	addi	r2,r2,-1
  110320:	15c01426 	beq	r2,r23,110374 <__call_exitprocs+0x154>
  110324:	80000015 	stw	zero,0(r16)
  110328:	183fde26 	beq	r3,zero,1102a4 <__alt_data_end+0xfff102a4>
  11032c:	95c8983a 	sll	r4,r18,r23
  110330:	a0806217 	ldw	r2,392(r20)
  110334:	a5800117 	ldw	r22,4(r20)
  110338:	2084703a 	and	r2,r4,r2
  11033c:	10000b26 	beq	r2,zero,11036c <__call_exitprocs+0x14c>
  110340:	a0806317 	ldw	r2,396(r20)
  110344:	2088703a 	and	r4,r4,r2
  110348:	20000c1e 	bne	r4,zero,11037c <__call_exitprocs+0x15c>
  11034c:	89400017 	ldw	r5,0(r17)
  110350:	d9000017 	ldw	r4,0(sp)
  110354:	183ee83a 	callr	r3
  110358:	a0800117 	ldw	r2,4(r20)
  11035c:	15bfbf1e 	bne	r2,r22,11025c <__alt_data_end+0xfff1025c>
  110360:	98800017 	ldw	r2,0(r19)
  110364:	153fcf26 	beq	r2,r20,1102a4 <__alt_data_end+0xfff102a4>
  110368:	003fbc06 	br	11025c <__alt_data_end+0xfff1025c>
  11036c:	183ee83a 	callr	r3
  110370:	003ff906 	br	110358 <__alt_data_end+0xfff10358>
  110374:	a5c00115 	stw	r23,4(r20)
  110378:	003feb06 	br	110328 <__alt_data_end+0xfff10328>
  11037c:	89000017 	ldw	r4,0(r17)
  110380:	183ee83a 	callr	r3
  110384:	003ff406 	br	110358 <__alt_data_end+0xfff10358>
  110388:	a0800017 	ldw	r2,0(r20)
  11038c:	a027883a 	mov	r19,r20
  110390:	1029883a 	mov	r20,r2
  110394:	003fb606 	br	110270 <__alt_data_end+0xfff10270>
  110398:	0005883a 	mov	r2,zero
  11039c:	003ffb06 	br	11038c <__alt_data_end+0xfff1038c>

001103a0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  1103a0:	defffd04 	addi	sp,sp,-12
  1103a4:	df000215 	stw	fp,8(sp)
  1103a8:	df000204 	addi	fp,sp,8
  1103ac:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  1103b0:	0001883a 	nop
  1103b4:	e0bfff17 	ldw	r2,-4(fp)
  1103b8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  1103bc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  1103c0:	10000226 	beq	r2,zero,1103cc <_exit+0x2c>
    ALT_SIM_FAIL();
  1103c4:	002af070 	cmpltui	zero,zero,43969
  1103c8:	00000106 	br	1103d0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  1103cc:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  1103d0:	003fff06 	br	1103d0 <__alt_data_end+0xfff103d0>
